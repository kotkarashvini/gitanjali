<?php

App::import('Controller', 'Fees'); // mention at top

class ReportsController extends AppController {

    public function beforeFilter() {
        $this->loadModel('language');
        $langaugelist = $this->language->find('all', array('conditions' => array('state_id' => array(0, $this->Auth->user('state_id')))));
        $this->set('langaugelist', $langaugelist);
        //$this->Security->unlockedActions = array('document_status','confreg', 'tablereport', 'login_statistics', 'rpt_login_statistics', 'tablelistreport', 'rpt_fee_calc_list', 'rpt_fee_calc', 'rptvaluation', 'getvaluationlist', 'rptview', 'getsurveynumbers', 'ratereport', 'doc_payment_receipt', 'rpt_reg_summary1', 'rpt_reg_summary2', 'is_Date', 'rpt_payment_cashbook', 'payment_cashbook', 'get_identification_data');
        if (isset($this->Security)) { //&& isset($this->Auth)) {
            $this->Security->validatePost = false;
            $this->Security->enabled = false;
            $this->Security->csrfCheck = false;
        }
//        $this->Auth->allow();
    }

    //----------------------------------Check if given input is date-------------------------------------------------------------
    public function is_Date($str) {
        $str = str_replace('/', '-', $str);
        $stamp = strtotime($str);
        if (is_numeric($stamp)) {

            $month = date('m', $stamp);
            $day = date('d', $stamp);
            $year = date('Y', $stamp);

            return checkdate($month, $day, $year);
        }
        return false;
    }

//------------------------------------------------Create PDF- by Shridhar-----------------------------------------------------------------------------------------------
    /*
     * $html_design:Report Design
     * $file_name:name of pdf file
     * $page_size=Paper size with oriantion e.g A4-L, A4-P
     * $watermark='';// Watermark to be added in PDF Report
     */
    public function create_pdf($html_design = NULL, $file_name = NULL, $page_size = 'A4', $waterMark = '', $display_flag = 'D') {
        try {
            $this->autoRender = FALSE;
            Configure::write('debug', 0);
            App::import('Vendor', 'MPDF/mpdf');
            $mpdf = new mPDF('utf-8', $page_size, 10, 'dejavusans');
            $mpdf->autoScriptToLang = true;
            $mpdf->baseScript = 1;
            $mpdf->autoVietnamese = true;
            $mpdf->autoArabic = true;
            $mpdf->autoLangToFont = true;
            $mpdf->setFooter('{PAGENO} / {nb}');
            if ($waterMark) {
                $mpdf->SetWatermarkText($waterMark);
                $mpdf->watermarkTextAlpha = 0.2;
                $mpdf->showWatermarkText = true;
            }
            $html_design = mb_convert_encoding($html_design, 'UTF-8', 'UTF-8');
//            $html_design = utf8_decode(html_entity_decode($html_design));
            $mpdf->WriteHTML($html_design);
            $mpdf->Output($file_name . ".pdf", $display_flag); // 'I' for Display PDF in Next Tab
        } catch (Exception $ex) {
            $this->Session->setFlash('Sorry! error in creating PDF');
        }
    }

    public function landrecord() {
        try {
            array_map([$this, 'loadModel'], ['Landrecord']);
            $this->set('actiontype', NULL);
            $this->set('html', null);

            if ($this->request->is('post')) {
                $frmdate = $this->request->data['landrecord']['from'];
                $todate = $this->request->data['landrecord']['to'];
                $frmdate = "'" . date('Y-m-d', strtotime($frmdate)) . "'";
                $todate = "'" . date('Y-m-d', strtotime($todate)) . "'";
                $result = $this->Landrecord->query("select * from landrecord($frmdate,$todate)");
                if (!empty($result)) {
                    $data = $this->Landrecord->query("select * from ngdrstab_trn_land_record WHERE created > NOW() - INTERVAL '10 seconds'");
                    $count = count($data);
                    if ($count != 0) {
                        $html = "<html><body><style>td{padding:5px;}  </style>"
                                . "<h3 align=center style='color:#9C6F7A';> Land Record Details  </h4><br>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>SR.No.</th>"
                                . "<th style='text-align:center;'>Tehsil ID</th>"
                                . "<th style='text-align:center;'>Tehsil Name</th>"
                                . "<th style='text-align:center;'>Tehsil census Code</th>"
                                . "<th style='text-align:center;'>Village live id</th>"
                                . "<th style='text-align:center;'>Village Name</th>"
                                . "<th style='text-align:center;'>Village Hadbast No</th>"
                                . "<th style='text-align:center;'>Village census Code</th>"
                                . "<th style='text-align:center;'>Registration No.</th>"
                                . "<th style='text-align:center;'>Registration Date</th>"
                                . "<th style='text-align:center;'>Deed Type</th>"
                                . "<th style='text-align:center;'>Mobile No.</th>"
                                . "</tr>";

                        $srno = 1;
                        foreach ($data as $data1) {
                            $html .= "<tr>";
                            $html .= "<td style='text-align:center;'>" . $srno++ . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['taluka_id'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['taluka_name_en'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['taluka_census_code'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['village_live_id'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['village_name_en'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['village_hadbast_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['village_census_code'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['doc_reg_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['final_stamp_date'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['article_desc_en'] . "</td>"
                                    . "<td style='text-align:center;'>" . $data1[0]['mobile_no'] . "</td>"
                                    . "</tr>";
                        }
                        $html .= "</table></body></html>";
                        $this->set('html', $html);
                        $this->Session->setFlash(__(" $count Record inserted Succesfully...!!!"));
                    } else {
                        $this->set('html', null);
                        $this->Session->setFlash(__('Record Not Found OR Record insterted previously for this date...!!!'));
                    }
                } else {
                    $this->Session->setFlash(__('Somthing Went Worng ..!! Record insertion Failed...!!!'));
                }
            }
        } catch (Exception $ex) {
            pr($ex);
        }
    }

    //------------------------------Report Index And Report Label By Shridhar and Saddam On 20 June 2017,17 July-2017 ------------------------------------------------------------   
    public function index() {
        try {
            $this->check_role_escalation();
            array_map(array($this, 'loadModel'), array('NGDRSErrorCode', 'Reports', 'mainlanguage', 'language'));
            $user_id = $this->Auth->User("user_id");
            $stateid = $this->Auth->User("state_id");
            $laug = $this->Session->read("sess_langauge");
            $this->set('laug', $laug);
            $this->set('reportrecord', NULL);
            $this->set('actiontypeval', NULL);
            $this->set('hfactionval', NULL);
            $this->set('hfid', NULL);
            $this->set('hfupdateflag', NULL);
            $result_codes = $this->NGDRSErrorCode->find("all");
            $this->set('result_codes', $result_codes);
            //languages are loaded firstly from config (from table)
            $languagelist = $this->mainlanguage->find('all', array('fields' => array('id', 'language_name', 'language_code'), 'joins' => array(
                    array(
                        'table' => 'ngdrstab_conf_language',
                        'alias' => 'conf',
                        'type' => 'inner',
                        'foreignKey' => false,
                        'conditions' => array('conf.language_id = mainlanguage.id')
                    )), 'order' => 'conf.language_id ASC'
            ));
            $this->set('languagelist', $languagelist);

            $this->set('reportrecord', $this->Reports->find('all'));

            //adding field list dynamically from language list
            $fieldlist = array();
            foreach ($languagelist as $languagecode) {
                if ($languagecode['mainlanguage']['language_code'] == 'en') {
                    //list for english single fields
                    $fieldlist['report_name_' . $languagecode['mainlanguage']['language_code']]['text'] = 'is_required,is_alphanumericspace,is_maxlength255';
                } else {
                    //list for all unicode fields
                    $fieldlist['report_name_' . $languagecode['mainlanguage']['language_code']]['text'] = 'unicode_rule_' . $languagecode['mainlanguage']['language_code'];
                }
            }

            $fieldlist['hfid']['text'] = 'is_digit';
            $fieldlist['hfaction']['text'] = 'is_yes_no';
            //$fieldlist['actiontype']['text'] = 'is_actiontype';  
//             $fieldlist['id']['text'] = 'is_numeric';  

            $fieldlist['csrftoken']['text'] = 'is_numeric';

            $this->set('fieldlist', $fieldlist);
            //setting the error message to empty as it shows error at first time
            foreach ($fieldlist as $key => $valrule) {
                $errarr[$key . '_error'] = "";
            }
            $this->set("errarr", $errarr);
            if ($this->request->is('post')) {

                $this->check_csrf_token($this->request->data['index']['csrftoken']);
                $actiontype = $_POST['actiontype'];
                $hfactionval = $_POST['hfaction'];
                $hfid = $_POST['hfid'];
                $this->set('hfid', $hfid);
                $date = date('Y/m/d H:i:s');
                $created_date = date('Y/m/d');

                if ($actiontype == '1') {
                    $this->set('actiontypeval', $actiontype);
                    $this->set('hfactionval', $hfactionval);
//pr($this->request->data);exit;
                    $rptname = strtoupper($this->request->data['index']['report_name_en']);
                    $checkname = $this->Reports->Find('all', array('conditions' => array('upper(report_name_en) like ' => $rptname)));
                    if ($checkname != NULL && $_POST['hfaction'] == 'S') {
                        $this->Session->setFlash(__('Record Already Exist'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'index'));
                    } else {
                        if ($hfactionval == 'S') {
                            $this->request->data['index']['req_ip'] = $this->request->clientIp();
                            $this->request->data['index']['user_id'] = $user_id;
                            $this->request->data['index']['actiontype'] = $actiontype;
                            $this->request->data['index']['hfaction'] = $hfactionval;
                            $this->request->data['index']['state_id'] = $stateid;
                            $this->request->data['index']['hfid'] = $hfid;

                            if ($this->request->data['hfupdateflag'] == 'Y') {
                                $this->request->data['index']['report_id'] = $this->request->data['hfid'];
                                $actionvalue = "Updated";
                            } else {
                                $actionvalue = "Saved";
                            }

                            $errarr = $this->validatedata($this->request->data['index'], $fieldlist);
                            $flag = 0;
                            foreach ($errarr as $dd) {
                                if ($dd != "") {
                                    $flag = 1;
                                }
                            }
                            if ($flag == 1) {
                                $this->set("errarr", $errarr);
                            } else {
//                             pr($this->request->data);exit;
                                if ($this->Reports->save($this->request->data['index'])) {
                                    $this->Session->setFlash(__("Record $actionvalue Successfully"));
                                    $this->redirect(array('controller' => 'Reports', 'action' => 'index'));
                                    $this->set('reportrecord', $this->Reports->find('all'));
                                } else {
                                    $this->Session->setFlash(__('Record Not Saved '));
                                }
                            }

                            $this->Session->setFlash(__('Error in form'));
                            //}
                        }
                    }
                }
            }
            $this->Session->write("randamkey", rand(111111, 999999));
        } catch (Exception $exc) {
            $this->Session->setFlash(
                    __('Record Cannot be displayed. Error :' . $exc->getMessage())
            );
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
        $this->set_csrf_token();
    }

    public function report_delete($id = null) {
        // pr($id);exit;
        $this->autoRender = false;
        $this->loadModel('Reports');
        try {
            $id = $this->decrypt($id, $this->Session->read("randamkey"));

            if (isset($id) && is_numeric($id)) {
                //  if ($type = 'District') {
                $this->Reports->report_id = $id;
                if ($this->Reports->delete($id)) {
                    $this->Session->setFlash(
                            __('The Record  has been deleted')
                    );
                    return $this->redirect(array('action' => 'index'));
                }
                // }
            }
        } catch (exception $ex) {
            // pr($ex);exit;
        }
    }

//--------------------------------------------------REport Label---------By SHridhar On 20-June-2017------------------------------------------
    public function report_labels() {
        try {
            $this->check_role_escalation(); // for invalid user checking
            //load Model
            array_map([$this, 'loadModel'], ['ReportLabel', 'Reports', 'NGDRSErrorCode', 'language', 'mainlanguage']);

            $result_codes = $this->NGDRSErrorCode->find("all");
            $languagelist = $this->mainlanguage->find('all', array('fields' => array('id', 'language_name', 'language_code'), 'joins' => array(
                    array(
                        'table' => 'ngdrstab_conf_language',
                        'alias' => 'conf',
                        'type' => 'inner',
                        'foreignKey' => false,
                        'conditions' => array('conf.language_id = mainlanguage.id')
            ))));
            $stateid = $this->Auth->User("state_id");
            $lang = $this->Session->read("sess_langauge");
            $created_date = date('Y/m/d');
            $user_id = $this->Auth->User("user_id");

            $reports = $this->Reports->find('list', array('fields' => array('report_id', 'report_name_' . $lang), 'order' => array('report_name_' . $lang => 'ASC')));
            $reportsLabels = $this->ReportLabel->find('all', array('fields' => array('label_id', 'ReportLabel.report_id', 'report.report_name_' . $lang, 'label_desc_en', 'label_desc_ll', 'label_desc_ll1'),
                'joins' => array(array('table' => 'ngdrstab_mst_reports', 'alias' => 'report', 'conditions' => array('report.report_id=ReportLabel.report_id')))));
            // set values
            $this->set(compact('result_codes', 'languagelist', 'lang', 'reports', 'reportsLabels'));
//---------------------------------------Validation Part------------------------------------------------------
            $fieldlist = array();
            $fieldlist['report_id']['select'] = 'is_select_req';
            foreach ($languagelist as $languagecode) {
                if ($languagecode['mainlanguage']['language_code'] == 'en') {
                    $fieldlist['label_desc_' . $languagecode['mainlanguage']['language_code']]['text'] = 'is_required,is_alphanumericspace,is_maxlength255';
                } else {
                    $fieldlist['label_desc_' . $languagecode['mainlanguage']['language_code']]['text'] = "unicode_rule_" . $languagecode['mainlanguage']['language_code'];
                }
            }

            $this->set('fieldlist', $fieldlist);
            foreach ($fieldlist as $key => $valrule) {
                $errarr[$key . '_error'] = "";
            }
            $this->set("errarr", $errarr);
//------------------------------------------------------------------------------------------------------------            
            if ($this->request->is('post')) {
                $formData = $this->request->data['report_labels'];
                $this->check_csrf_token($formData['csrftoken']);
                $save_flag = 'Y';
                $hfid = base64_decode($formData['label']);
                $formData = $this->istrim($formData);
                $errarr = $this->validatedata($formData, $fieldlist);
                $flag = 0;
                foreach ($errarr as $dd) {
                    if ($dd != "") {
                        $flag = 1;
                    }
                }
                if ($flag == 1) {
                    $this->set("errarr", $errarr);
                } else {
                    if ($hfid) {
                        if (is_numeric($hfid)) {
                            $record_count = $this->ReportLabel->find('count', array('conditions' => array('label_id' => $hfid)));
                            if ($record_count == 1) {
                                $formData['label_id'] = $hfid;
                                $actionvalue = "Updated";
                            }
                            unset($record_count);
                        } else {
                            $save_flag = 'I';
                            $hfid = NULL;
                        }
                    } else {
                        $actionvalue = "Saved";
                        $save_flag = 'Y';
                    }
                    //check for duplication of Item Case Insensitive
                    $record_count = $this->ReportLabel->find('count', array('conditions' => array('UPPER(label_desc_en)' => strtoupper($formData['label_desc_en']), 'report_id' => $formData['report_id'])));
                    if (($record_count > 1 && $hfid) || ($record_count > 0 && $hfid == NULL)) {
                        $save_flag = 'A';
                    }
                    unset($record_count);
                    //duplication checking for list_item_value
                    if ($save_flag == 'Y') {
                        $formData['req_ip'] = $this->request->clientIp();
                        $formData['user_id'] = $user_id;
                        $formData['created_date'] = $created_date;
                        $formData['state_id'] = $stateid;
                        if ($this->ReportLabel->save($formData)) {
                            $this->Session->setFlash(__("Record $actionvalue Successfully"));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'report_labels'));
                        } else {
                            $this->Session->setFlash(__('Record Not saved '));
                        }
                    } else if ($save_flag == 'I') {
                        $this->Session->setFlash('Invalid Data Provided for Updation');
                    } else if ($save_flag == 'A') {
                        $this->Session->setFlash('Record already exists with this name');
                    } else {
                        $this->Session->setFlash('Invalid Input provided');
                    }
                }//Validation Else End
            }//post
        } catch (Exception $ex) {
            $this->Session->setFlash(
                    __('Record Cannot be displayed. Error :' . $exc->getMessage())
            );
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
        $this->set_csrf_token();
    }

    //--------------*-----------*----------------*----------------*---\\Table Report Based on Foreign Key//--*---------*---------*------------*-----------*-----------
    public function tablereport() {
        try {
            $this->loadModel('tablenamepdf');
// List Table Names
            $lang = $this->Session->read("sess_langauge");
            $this->set('lang', $lang);
            $this->set('tablelist', $this->tablenamepdf->find('list', array('fields' => array('id', 'tabledesc_' . $lang))));
            if ($this->request->is('post')) {
                try {
                    $this->check_csrf_token($this->request->data['tabledesc']['csrftoken']);
                    $tablename = $this->tablenamepdf->find('all', array('fields' => array('tabledesc_' . $lang, 'tab_name'), 'conditions' => array('id' => $this->data['tabledesc']['table_name'])));
                    $tableTitle = $tablename[0]['tablenamepdf']['tabledesc_en'];
                    $tablename = $tablename[0]['tablenamepdf']['tab_name'];

                    $columnNames = $this->tablenamepdf->getcolumns($tablename);
                    $referencedcolumn = $this->tablenamepdf->getReference($tablename);
                    $tableschema = "<style>table{border-collapse:collapse;} td{padding:5px;}</style>" . "<html><body><h2 align=center>$tableTitle</h2><table border=1 align=center> <tr>";
                    $jointable = " ";
                    $query = " Select ";
                    $finalColumn = NULL;
                    $columnLabel = NULL;
                    $JT = 1;
                    foreach ($columnNames as $colname) {
                        $joinflag = 0;
                        $colname = $colname[0]['column_name'];
                        $arr = explode("_", $colname, 2);
                        foreach ($referencedcolumn as $rcolumn) {
                            if ($colname == $rcolumn[0]['column_name']) {
                                $joinflag = 1;
                                $jointable .= "left outer join " . $rcolumn[0]['foreign_table_name'] . " t" . $JT . " on this." . $colname . " = " . " t" . $JT . "." . $rcolumn[0]['foreign_column_name'] . " ";
                                $columnname = null;
                                if ($arr[0] == 'user') {
                                    $columnname = $this->tablenamepdf->Query("select column_name from INFORMATION_SCHEMA.COLUMNS where table_name = ? and column_name like '%$arr[0]%name%' limit 1", array($rcolumn[0]['foreign_table_name']));
                                } else {
                                    $columnname = $this->tablenamepdf->Query("select column_name from INFORMATION_SCHEMA.COLUMNS where table_name = ? and column_name like '%name%'", array($rcolumn[0]['foreign_table_name']));
                                    if (!$columnname) {
                                        $columnname = $this->tablenamepdf->Query("select column_name from INFORMATION_SCHEMA.COLUMNS where table_name = ? and column_name like '%desc%'", array($rcolumn[0]['foreign_table_name']));
                                    }
                                }
                                foreach ($columnname as $clnm) {
                                    $finalColumn .= "t" . $JT . "." . $clnm[0]['column_name'] . ",";
                                    $columnLabel .= $clnm[0]['column_name'] . ",";
                                }
                                $JT++;
                            }
                        }
                        if (!$joinflag) {
                            if (count($arr) > 1 && $arr[1] == "date") {
                                $finalColumn .= "TO_CHAR(this." . $colname . ",'dd-mm-yyyy') " . $colname . ", ";
                            } else {
                                $finalColumn .= "this." . $colname . ",";
                            }
                            $columnLabel .= $colname . ",";
                        }
                    }
                    $columnnames = substr($finalColumn, 0, -1);
                    $query .= " " . $columnnames . " from " . $tablename . " this ";
                    if ($referencedcolumn) {
                        $query .= " " . $jointable;
                    }
                    $query = substr($query, 0, -1) . " order by 1,2,3 desc";
                    $tabledata = $this->tablenamepdf->query($query);

                    $columnLabel = explode(',', substr($columnLabel, 0, -1));
                    foreach ($columnLabel as $clname) {
                        $tableschema .= "<th>" . $clname . "</th>";
                    }
                    $tableschema .= '</tr>';

                    foreach ($tabledata as $cd) {
                        $tableschema .= '<tr>';
                        foreach ($cd[0] as $cd) {
                            $tableschema .= "<td>" . $cd . "</td>";
                        }
                        $tableschema .= '</tr>';
                    }
                    $tableschema .= '</table></body></html>';
                    $this->create_pdf($tableschema, $tablename, 'A4', 'Table Report');
                } catch (Exception $ex) {
                    $this->Session->setFlash("There is some Error in Accessing Data");
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function tablelistreport() {
        try {
            $this->loadModel('tablenamepdf');
            $this->set('lang', $this->Session->read("sess_langauge"));
            $this->set('name', array_keys($this->tablenamepdf->getColumnTypes()));
            $tables = $this->tablenamepdf->query("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' and table_schema='public' order by 1");
            $abc = array();
            foreach ($tables as $t) {
                array_push($abc, $t[0]['table_name']);
            }
            $this->set('tlistap', $abc);
            $this->set('pdftables', $this->tablenamepdf->find('all'));
            if ($this->request->is('post')) {
                $this->check_csrf_token($this->request->data['tableaddpdf']['csrftoken']);
                $frmAction = $this->request->data['frmaction'];
                $frm = $this->request->data['tableaddpdf'];
//exit;
                if ($frmAction == 'U' || $frmAction == 'SV') { // Update or Save Label                    
                    $frm['req_ip'] = $_SERVER['REMOTE_ADDR'];
                    $frm['user_id'] = $this->Auth->user('user_id');
                    if ($frmAction == 'U') {
                        $frm['id'] = $this->request->data['id'];
                        $savetype = "Updated";
                    } else {
                        $savetype = "Added";
                    }

                    if ($this->tablenamepdf->save($frm)) {
                        $this->Session->setFlash("Table $savetype Successfully");
                        $this->redirect(array('action' => 'tablelistreport'));
                    } else {
                        $this->Session->setFlash("Some Error....Please Try Again");
                    }
                } else if ($frmAction == 'D') {
                    if ($this->tablenamepdf->delete($this->request->data['id'])) {
                        $this->Session->setFlash(__('Record Deleted Successfully'));
                        $this->redirect(array('action' => 'tablelistreport'));
                    } else {
                        $this->Session->setFlash(__('Record Not Deleted'));
                    }
                } else if ($frmAction == 'E') {
                    $this->redirect(array('controller' => 'Users', 'action' => 'welcomenote'));
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash("Sorry! Error in Table List Report");
        }
    }

//-----------------------------------------------------------------------\\End of Table Report//------------------------------------------------------------------
//--------------*-----------*----------------*----------------*----------//  Valuation Report \\--*---------*---------*------------*-----------*-----------*--------------*-----
    public function rptvaluation() {
        try {
            $this->set('finyearList', ClassRegistry::init('finyear')->find('list', array('fields' => array('finyear_id', 'finyear_desc'), 'order' => array('current_year DESC,finyear_id'))));
        } catch (Exception $ex) {
            $this->Session->setFlash("Sorry! Error in valuation Report");
        }
    }

//------------------------------------Get Valuation List--by date-Range,Valuation_id (Server Side Validation Completed on 16-feb-17)-----------------------------------------------------------------
    public function getvaluationlist() {
        try {
            $this->layout = 'ajax';
            $valuationid = $_POST['valno'];
            $fltrFlag = $_POST['fltrby'];
            if (ctype_alpha($fltrFlag) && strlen($fltrFlag) == 1) {
                // Load Models
                array_map([$this, 'loadModel'], ['valuation']);
                //Set Variables
                $conditions = array();
                if ($fltrFlag == 'D') {
                    $from = $_POST['from'];
                    $to = $_POST['to'];
                    if ($this->is_Date($from) && $this->is_Date($to)) {
                        $conditions = " created BETWEEN '" . $from . " 00:00:00' and  '" . $to . " 23:59:59'";
                    }
                } else if ($fltrFlag == 'V') {
                    if (is_numeric($valuationid)) {
                        $conditions['val_id'] = $valuationid;
                    }
                } else {
                    return 'Invalid Input in getting valuation list';
                }
                $this->set('valuationrecords', $this->valuation->find('all', array('conditions' => $conditions, 'order' => 'val_id DESC')));
            }
        } catch (Exception $ex) {
            $this->Session->setFlash("Sorry! Error in getting valuation list");
        }
    }

//-----------------------------------Get Report of Valuation id---- by Valuation Id & Action (Server Side Validation Completed on 16-feb-17)- Modified on 23-June-2017(18:04) with dynamic labels---------------------------------------------------------------------------------------------------------------------------------
    public function rptview_OLD($lAction = NULL, $lValNo = NULL, $csrf_token = NULL) {
        try {

            $this->layout = 'ajax';
            $this->autoRender = false;
            $totalfinalamt = 0;

            array_map([$this, 'loadModel'], ['evalrule', 'valuation', 'ReportLabel', 'finyear', 'valuation_details', 'rate', 'num_to_words', 'RateSearch', 'usagelnk', 'conf_reg_bool_info']);
            $actiontype = ($lAction) ? $lAction : $_POST['action'];
            $lastinsertid = ($lValNo) ? base64_decode($lValNo) : base64_decode($_POST['valno']);


            if ($csrf_token) {
                $csrf_token = ($csrf_token) ? $csrf_token : $_POST['csrftoken'];
                $this->check_csrf_token_withoutset($csrf_token);
            }

            if (isset($lastinsertid) && is_numeric($lastinsertid) && $lastinsertid && ctype_alpha($actiontype)) {
                $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
                $rs = "&#8377;";
                if ($actiontype == 'V' or $actiontype == 'P') {// Action V:return Design, P:Create PDF                    
                    $mdata = $this->valuation->getValuationInfo($lastinsertid);
                    $rule_ids = $this->valuation_details->find('list', array('fields' => array('rule_id', 'rule_id'), 'group' => 'rule_id', 'conditions' => array('val_id' => $lastinsertid)));
                    $rate_rev_flag = $this->valuation->rate_revision_flag($lastinsertid);
                    $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 1)));
                    if ($mdata) {
                        $md = $mdata[0][0];
                        $design = "<style>table{border-collapse:collapse;} td,th{padding:5px;}</style>"
                                . "<table width=100% border=1><tr><td><b>" . $rptlabels[68] . "</b> : " . $lastinsertid . " / " . date('Y') . '</td><td><b> :- </b>' . $md['finyear_desc'] . "</td> <td align=center> <b>" . $rptlabels[72] . "</b> : " . $md['user_id'] . "</td><td align=right><b>" . $rptlabels[69] . "</b> :  " . date('d-F-Y H:i:A') . "</td></tr></table>"
                                . "<table border=1 align=center width=100% style=background-color:#F0F0F0;>";


                        $design .= "<tr> <td colspan=2><b>" . $rptlabels[46] . "</b> : " . $md['state_name_' . $lang] . "</td> <td colspan=2><b>" . $rptlabels[47] . "</b> : " . $md['district_name_' . $lang] . " </td> <td colspan=2><b>" . $rptlabels[48] . "</b> : " . $md['taluka_name_' . $lang] . "</td> </tr>"
                                . "<tr> <td colspan=2><b>" . $rptlabels[49] . "</b> : " . $md['developed_land_types_desc_' . $lang] . "</td> <td colspan=2><b> " . $rptlabels[50] . "</b> : " . $md['governingbody_name_' . $lang] . "</td> <td colspan=2><b>" . $rptlabels[51] . "</b> : " . $md['village_name_' . $lang] . "</td> </tr>";
                        if ($md['level1_id']) {
                            $design .= "<tr>";
                            $design .= ($md['level1_id']) ? "<td colspan=3> <b>" . $md['level_1_desc_' . $lang] . "</b> - " . $md['list_1_desc_' . $lang] . "</td>" : "<td colspan=3> - </td>";
                            $design .= ($md['level2_id']) ? "<td colspan=3> <b>" . $md['level_2_desc_' . $lang] . "</b> - " . $md['list_2_desc_' . $lang] . "</td>" : "<td colspan=3> - </td>";
                            $design .= " </tr>";
                        }
                        if ($md['level3_id']) {
                            $design .= "<tr>";
                            $design .= ($md['level3_id']) ? "<td colspan=3> <b>" . $md['level_3_desc_' . $lang] . "</b> - " . $md['list_3_desc_' . $lang] . "</td>" : "<td colspan=3> - </td>";
                            $design .= ($md['level4_id']) ? "<td colspan=3> <b>" . $md['level_4_desc_' . $lang] . "</b> - " . $md['list_4_desc_' . $lang] . "</td>" : "<td colspan=3> - </td>";
                            $design .= " </tr>";
                        }
                        $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value FROM ngdrstab_trn_valuation  as val
JOIN ngdrstab_trn_property_details_entry as prop ON  prop.token_no=val.token_no  and prop.val_id=val.val_id
JOIN ngdrstab_trn_parameter as param ON token_id=val.token_no and parameter_type='S' and param.property_id=prop.property_id
JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
WHERE val.val_id=?", array($lastinsertid));

                        if (!empty($serveyno)) {
                            foreach ($serveyno as $attribute) {
                                $design .= "<tr>";
                                $design .= "<td colspan=3> <b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> - " . $attribute[0]['paramter_value'] . "</td>";
                                $design .= " </tr>";
                            }
                        }
                        if ($md['construction_type_id']) {
                            $design .= "<tr>";
                            $design .= ($md['construction_type_id']) ? "<td colspan=3><b>" . $rptlabels[53] . " :</b>" . $md['construction_type_desc_' . $lang] . "</td>" : "<td colspan=3></td>";
                            $design .= ($md['depreciation_id']) ? "<td colspan=3><b>" . $rptlabels[54] . ":</b>" . $md['deprication_type_desc_' . $lang] . " </td> " : "<td colspan=3></td>";
                            $design .= " </tr>";
                        }
                        $design .= isset($md['road_vicinity_desc_' . $lang]) ? ("<tr><td colspan=6><b>" . $rptlabels[165] . ":</b>" . $md['road_vicinity_desc_' . $lang] . " </td> </tr> " ) : ("<tr><td colspan=6></td></tr>");
                        if ($md['user_defined_dependency1_id'] || $md['user_defined_dependency2_id']) {
                            $design .= "<tr>";
                            $design .= ($md['user_defined_dependency1_id']) ? "<td colspan=3><b>" . $rptlabels[424] . " :</b>" . $md['user_defined_dependency1_desc_' . $lang] . "</td>" : "<td colspan=3></td>";
                            $design .= ($md['user_defined_dependency2_id']) ? "<td colspan=3><b>" . $rptlabels[425] . ":</b>" . $md['user_defined_dependency2_desc_' . $lang] . " </td> " : "<td colspan=3></td>";
                            $design .= " </tr>";
                        }

                        $design .= "</table>";
                        //get Total Rule                        
                        //---------------------------------------------------for Getting Rate Chart--------------------------------------------------
                        $rate_chart_data = array();
                        $tmp_rate_data = NULL;
                        foreach ($rule_ids as $rule_id) {
                            $usage_data = $this->usagelnk->find('first', array('fields' => array('usage_main_catg_id', 'usage_sub_catg_id', 'usage_sub_sub_catg_id', 'contsruction_type_flag', 'road_vicinity_flag', 'depreciation_flag'), 'conditions' => array('evalrule_id' => $rule_id)));
                            $rate_search = $this->RateSearch->find('all', array(
                                'conditions' => array('developed_land_types_id' => $md['developed_land_types_id'], 'usage_main_cat_id' => $usage_data['usagelnk']['usage_main_catg_id']),
                                //    'conditions' => array('developed_land_types_id' => $md['developed_land_types_id'], 'usage_main_cat_id' => $usage_data['usagelnk']['usage_main_catg_id'], 'RateSearch.construction_type_id' => $usage_data['usagelnk']['contsruction_type_flag'], 'road_vicinity_id' => $usage_data['usagelnk']['road_vicinity_flag']),
                                'order' => 'ready_reckoner_rate_flag DESC'));
                            $rate_factor = ($md['rate_factor']) ? $md['rate_factor'] : 1;
                            //pr($rate_search);
                            foreach ($rate_search as $rate) {
                                $rate_condition = array();
                                if ($tmp_rate_data) {
                                    //  continue;
                                }
                                $rate = $rate['RateSearch'];
                                $rate_condition['rate.district_id'] = $md['district_id'];
                                // if($rate['ready_reckoner_rate_flag'] == 'Y' ){
                                $rate_condition['rate.ready_reckoner_rate_flag'] = $rate['ready_reckoner_rate_flag'];
                                //  }else{
                                // $rate_condition['rate.ready_reckoner_rate_flag'] = 'N';         
                                // }

                                if ($md['village_id'] && $rate['village_id'] == 'Y') {
                                    $rate_condition['rate.village_id'] = $md['village_id'];
                                    if ($md['level1_id']) {
                                        $rate_condition['rate.level1_id'] = $md['level1_id'];
                                    }
                                    if ($md['level1_list_id']) {
                                        $rate_condition['rate.level1_list_id'] = $md['level1_list_id'];
                                    }
                                    //level 2
                                    if ($md['level2_id']) {
                                        $rate_condition['rate.level2_id'] = $md['level2_id'];
                                    }
                                    if ($md['level2_list_id']) {
                                        $rate_condition['rate.level2_list_id'] = $md['level2_list_id'];
                                    }
                                    //level 3
                                    if ($md['level3_id']) {
                                        $rate_condition['rate.level3_id'] = $md['level3_id'];
                                    }
                                    if ($md['level3_list_id']) {
                                        $rate_condition['rate.level3_list_id'] = $md['level3_list_id'];
                                    }
                                    //level 4
                                    if ($md['level4_id']) {
                                        $rate_condition['rate.level3_id'] = $md['level4_id'];
                                    }
                                    if ($md['level4_list_id']) {
                                        $rate_condition['rate.level4_list_id'] = $md['level4_list_id'];
                                    }
                                }
                                if ($md['taluka_id'] && $rate['taluka_id'] == 'Y') {
                                    $rate_condition['rate.taluka_id'] = $md['taluka_id'];
                                }
                                if ($md['valutation_zone_id'] && $rate['valutation_zone_id'] == 'Y') {
                                    $rate_condition['rate.valutation_zone_id'] = $md['valutation_zone_id'];
                                }
                                if (is_numeric($md['valutation_subzone_id'])) {
                                    $rate_condition['rate.valutation_subzone_id'] = $md['valutation_subzone_id'];
                                }
                                if ($md['finyear_id'] && $rate['finyear_id'] == 'Y') {
                                    $rate_condition['rate.finyear_id'] = $md['finyear_id'];
                                }

                                if ($md['ulb_type_id'] && $rate['ulb_type_id'] == 'Y') {
                                    $rate_condition['rate.ulb_type_id'] = $md['ulb_type_id'];
                                }
                                if ($md['usage_main_catg_id'] && $rate['usage_main_catg_id'] == 'Y') {
                                    $rate_condition['rate.usage_main_catg_id'] = $md['usage_main_catg_id'];
                                }
                                if ($md['usage_sub_catg_id'] && $rate['usage_sub_catg_id'] == 'Y') {
                                    $rate_condition['rate.usage_sub_catg_id'] = $md['usage_sub_catg_id'];
                                }
                                if ($md['usage_sub_sub_catg_id'] && $rate['usage_sub_sub_catg_id'] == 'Y') {
                                    $rate_condition['rate.usage_sub_sub_catg_id'] = $md['usage_sub_sub_catg_id'];
                                }
                                if ($md['construction_type_id'] && $rate['construction_type_id'] == 'Y') {
                                    $rate_condition['rate.construction_type_id'] = $md['construction_type_id'];
                                } else {
                                    $rate_condition['rate.construction_type_id'] = NULL;
                                }
                                if ($md['road_vicinity_id'] && $rate['road_vicinity_id'] == 'Y') {
                                    $rate_condition['rate.road_vicinity_id'] = $md['road_vicinity_id'];
                                } else {
                                    $rate_condition['rate.road_vicinity_id'] = NULL;
                                }
                                if ($md['user_defined_dependency1_id'] && $rate['user_defined_dependency1_id'] == 'Y') {
                                    $rate_condition['rate.user_defined_dependency1_id'] = $md['user_defined_dependency1_id'];
                                } else {
                                    $rate_condition['rate.user_defined_dependency1_id'] = NULL;
                                }
                                if ($md['user_defined_dependency2_id'] && $rate['user_defined_dependency2_id'] == 'Y') {
                                    $rate_condition['rate.user_defined_dependency2_id'] = $md['user_defined_dependency2_id'];
                                } else {
                                    $rate_condition['rate.user_defined_dependency2_id'] = NULL;
                                }
                                if ($md['subdivision_id'] && $rate['subdivision_id'] == 'Y') {
                                    $rate_condition['rate.subdivision_id'] = $md['subdivision_id'];
                                }



                                //$rate_condition['rate.finyear_id'] = $this->valuation->field('finyear_id', array('val_id' => $lastinsertid));
//pr($rate_condition);
                                //get Rates
                                $tmp_rate_data = $this->rate->find('all', array('fields' => array('DISTINCT main.usage_main_catg_id', 'main.usage_main_catg_desc_' . $lang, 'sub.usage_sub_catg_id', 'sub.usage_sub_catg_desc_' . $lang, 'rate.prop_unit', 'unit.unit_desc_' . $lang, 'rate.prop_rate'),
                                    'joins' => array(
                                        array('table' => 'ngdrstab_mst_usage_main_category', 'type' => 'left', 'alias' => 'main', 'conditions' => array('main.usage_main_catg_id=rate.usage_main_catg_id')),
                                        array('table' => 'ngdrstab_mst_usage_sub_category', 'type' => 'left', 'alias' => 'sub', 'conditions' => array('sub.usage_sub_catg_id=rate.usage_sub_catg_id')),
                                        //  array('table' => 'ngdrstab_mst_usage_sub_category', 'type' => 'left', 'alias' => 'sub', 'conditions' => array('sub.usage_sub_catg_id=rate.usage_sub_catg_id')),
                                        array('table' => 'ngdrstab_mst_unit', 'type' => 'left', 'alias' => 'unit', 'conditions' => array('unit.unit_id=rate.prop_unit'))
                                    ),
                                    'conditions' => $rate_condition));
                                // pr($tmp_rate_data);
                                if ($tmp_rate_data) {
                                    //  pr($tmp_rate_data);
                                    array_push($rate_chart_data, $tmp_rate_data);
                                }
                            }//end of foreach
                        }//Rule Id Loop End
                    }

                    // pr($rate_chart_data);
                    //-------------------------------Design of rate Chart----------------------------------------------------------------------------

                    if ($rate_chart_data) { //display Rate Chart
                        $design .= "<div class='table-responsive'><table border=1 align=center width=100%>"
                                . "<tr style=background-color:#F0E0F0;><td> <h4 style='padding:0;margin:0;' align=center> <b>" . $rptlabels[56] . " </b></h4></td></tr>";
                        $design .= "</table>"
                                . "<table  border=1 align=center width=100%><thead>";
                        $srNo = 1;
                        //display input items

                        $design .= "<tr >";
                        foreach ($rate_chart_data as $rate_chart) {
                            foreach ($rate_chart as $rate) {
                                $design .= "<th>" . $rate['sub']['usage_sub_catg_desc_' . $lang] . " </th>";
                            }
                        }
                        $design .= "</tr></thead>";
                        $design .= "<tr style ='background-color:#F0F0F0;'>";
                        foreach ($rate_chart_data as $rate_chart_data) {
                            foreach ($rate_chart_data as $rate) {
                                $design .= "<td align=center>" . $rs . $rate['rate']['prop_rate'] . "/- " . $rate['unit']['unit_desc_' . $lang] . "</td>";
                            }
                        }
                        $design .= "</tr> </table></div>";
                    }


                    //--------------------------------------------------------End of Rate Chart-----------------------------------------------------------------------\\                    
                    //---------------------------------Display Usage Category---------------------------------------------------------
                    $srAlphaArray = array();
                    $srAlpha = "A";
                    foreach ($rule_ids as $rule_id) {
                        $design .= "<table border=1 align=center width=100%>";
                        $ruleDetail = $this->evalrule->get_rule_detail($rule_id, $lang);
                        //   $design .= "<tr><td><b>" . $rptlabels[70] . ": </b>" . $rs . (($rate_rev_flag == 'N') ? ($this->valuation->format_money_india(round($md['rate'])) . "/-  &nbsp;&nbsp;&nbsp;&nbsp; <b>" . $rptlabels[71] . " :</b> " . ($md['rate']) . " x " . $rate_factor * 100 . "% = " . $rs . $this->valuation->format_money_india($md['rate'] * $rate_factor) ) : ($this->valuation->format_money_india(round($md['rate'])) . "/-")) . "</td></tr>";
                        $design .= "<tr> <td> <b>" . $rptlabels[57] . " : </b>" . $ruleDetail['evalrule']['evalrule_desc_' . $lang] . "</td>";
                        if ($ruleDetail['evalrule']['reference_no']) {
                            $design .= "<tr><td> <b>" . $rptlabels[59] . "</b> : " . $ruleDetail['evalrule']['reference_no'] . "</td> </tr>";
                        }
                        $design .= "<tr> <td><b>" . $rptlabels[58] . "</b> : " . $ruleDetail['mcat']['usage_main_catg_desc_' . $lang] . " => " . $ruleDetail['scat']['usage_sub_catg_desc_' . $lang] . " => " . $ruleDetail['sscat']['usage_sub_sub_catg_desc_' . $lang] . "</td> </tr>";

                        $design .= "</table>";
                        //----------------------------------------------------------Get Input Details------------------------------------------------------------------------
                        $design .= "<table border=1  width=100% style=background-color:#F0E0F0;>"
                                . "<tr><td> <h4 style='padding:0;margin:0;' align=center> <b>" . $rptlabels[60] . " </b></h4></td> </tr> </table>";

                        $design .= "<table  border=1 align=center width=100% style='background-color:#F0F0F0;'>";
                        $ruleflag = $tempsubrule = NULL;
                        $attach = "";
                        $fatotal = 0;


                        $srNo = 1;


                        $item_type_id = 1; //one for input
                        $VDetail = $this->valuation_details->getValuationDetail($lastinsertid, $item_type_id, $rule_id, $lang); // 1 for input values Details
                        foreach ($VDetail as $Vdt1) {//display input items
                            $vd1 = $Vdt1[0];
                            // pr($vd1);
                            if ($vd1['item_type_id'] == 1) {//display floor no. if value is zero other items will not display if value is 0
                                $item_value = ($vd1['is_list_field_flag'] == 'Y') ? $vd1['item_desc_' . $lang] : $vd1['item_value'];
                                $item_valuearr = explode(".", $item_value);
                                if (isset($item_valuearr[1]) && $item_valuearr[1] == 0) {
                                    $item_value = $item_valuearr[0];
                                }
                                $item_value = ($vd1['is_string'] == 'Y') ? $vd1['item_value_string'] : $item_value;
                                if ($vd1['area_type_flag'] == 'Y' && $item_value > 0) {
                                    $design .= "<tr style ='background-color:#F0F0F0;'>";
                                    $design .= "<td align=center>" . $srNo++ . "</td><td>" . $vd1['usage_param_desc_' . $lang] . " </td><td  align=center> " . $item_value . " " . $vd1['unit_desc_' . $lang] . "</td>";
                                } elseif ($vd1['area_type_flag'] == 'N') {
                                    $design .= "<tr style ='background-color:#F0F0F0;'>";
                                    $design .= "<td align=center>" . $srNo++ . "</td><td>" . $vd1['usage_param_desc_' . $lang] . " </td><td  align=center> " . $item_value . " " . $vd1['unit_desc_' . $lang] . "</td>";
                                }
                            }
                            $design .= "</tr>";
                        }
                        $design .= "</table>";
                        //-----------------------------------------------Calculation Details--------------------------------------------------------------------------------------                       
                        $design .= "<table border=1 align=center width=100% >"
                                . "<tr style=background-color:#F0E0F0;><td> <h4 style='padding:0;margin:0;' align=center> <b>" . $rptlabels[61] . " </b></h4></td> </tr> </table>";
                        $item_type_id = 2;
                        $OutputDetail = $this->valuation_details->getValuationDetail($lastinsertid, $item_type_id, $rule_id, $lang); // 2 for Output values Details
                        if ($OutputDetail) {
                            $design .= "<table border=1 align=center width=100%>";
                            $design .= "<tr style ='font-weight: bold;'> <td align = center> <b>" . $rptlabels[62] . " </b></td>  <td><b>" . $rptlabels[63] . "</b> </td> <td align=center> <b>" . $rptlabels[64] . "</b></td> <td align = center> <b>" . $rptlabels[65] . "</b></td> </tr>";
                            $srNo = 1;
                            foreach ($OutputDetail as $otd) {
                                $otd = $otd[0];
                                $design .= "<tr style ='background-color:#F0F0F0;'>";

                                $rate_rev_formula = str_replace(['RRR', 'RR1', 'RR2', 'ABE'], [$otd['org_rrr'], $otd['org_rr1'], $otd['org_rr2'], $otd['org_abe']], $otd['rate_revision_formula']);

                                $rate_rev_formula = ($rate_rev_formula) ? eval("return ($rate_rev_formula);") : 0;
                                $after_depreciation = $rate_rev_formula * $otd['depreciation_factor'];
                                $design .= "<td>" . $srNo++ . "</td><td>" . $otd['usage_param_desc_' . $lang] . $attach . " </td>"
                                        . "<td> <ol>"
                                        . (($otd['rate_revision_formula']) ? '<li>' . str_replace('*', ' x ', str_replace(['RRR', 'RR1', 'RR2', 'ABE'], [$otd['org_rrr'], $otd['org_rr1'], $otd['org_rr2'], $otd['org_abe']], $otd['rate_revision_formula'])) . "=" . $rate_rev_formula . "</li>" : '')
                                        . (($rate_rev_formula) ? '<li>' . $rate_rev_formula . " * " . ($otd['depreciation_factor']) . " (Depreciation)" . '=' . $after_depreciation . "</li>" : '')
                                        . '<li>   &nbsp;&nbsp;' . str_replace('*', ' x ', $otd['dep_detail']) . '=' . $otd['final_value'] . "</li>"
                                        . "</td>";
                                $fatotal += $otd['final_value'];
                                $totalfinalamt = $totalfinalamt + round($otd['final_value']);
                                $design .= "<td align=right><b>" . $rs . $this->valuation->format_money_india(round($otd['final_value'], 0)) . "/-</b> </td>";
                                $design .= "</tr>";
                            }
                            $design .= "<tr style='background-color:#5F9EA0'> <td align=center> <b>" . $srAlpha . "<b></td> <td colspan=2>Total</td> <td align=right> <b>" . $rs . $this->valuation->format_money_india(round($fatotal, 0)) . "/-</b> </td> </tr>";
                            array_push($srAlphaArray, "<b>" . $srAlpha++ . "<b>");
                            $design .= "</table>";
                        }
                    }//rule_ids

                    $regconf = $this->conf_reg_bool_info->find("all", array('conditions' => array('reginfo_id' => 46)));
                    $roundto = '';
                    if (!empty($regconf)) {
                        if ($regconf[0]['conf_reg_bool_info']['is_boolean'] == 'Y' && $regconf[0]['conf_reg_bool_info']['conf_bool_value'] == 'Y') {
                            if (is_numeric($regconf[0]['conf_reg_bool_info']['info_value']) && $regconf[0]['conf_reg_bool_info']['info_value'] > 0)
                                $roundto = $regconf[0]['conf_reg_bool_info']['info_value'];
                        }
                    }
                    $totalfinalamt = $this->round_tonext($totalfinalamt, $roundto);
                    $design .= "<table border=1 width=100%>"
                            . "<tr><td><b>Note : </b> Final Valuation is Rounded to Next $roundto/-</td> </tr>"
                            . "<tr style='background-color:#00CED1'><td ><b>" . $rptlabels[66] . " (" . implode(' + ', $srAlphaArray) . ")</b></td><td align=right><b>" . $rs . $this->valuation->format_money_india(round($totalfinalamt, 0)) . "/- </b> </td></tr>"
                            . "<tr style='background-color:#00CED1'><td colspan=2><b>" . $rptlabels[67] . " : " . $this->num_to_words->in_words($totalfinalamt) . "Rupees Only. </b> </td></tr>"
                            . "</table>";
                }
                //create View for Dialog Box
                if ($actiontype == 'V') {
                    return $design;
                }
                //Create PDF Report for Same
                else if ($actiontype == 'P') {
                    $html = '<h2 align=center> Property Valuation</h2>';
                    $html .= $design;
                    $this->create_pdf($html, "Valuation_" . $lastinsertid);
                }
            } else {
                return NULL;
            }
        } catch (Exception $ex) {
            // pr($ex);
            return 'Sorry! Erro in Getting Valuation';
            $this->Session->setFlash('Sorry! Error in generating Report');
        }
    }

    public function rptview($lAction = NULL, $lValNo = NULL, $csrf_token = NULL) {
        try {
            $reference_variable = '';
            $this->layout = 'ajax';
            $this->autoRender = false;
            $totalfinalamt = 0;

            array_map([$this, 'loadModel'], ['evalrule', 'valuation', 'ReportLabel', 'finyear', 'valuation_details', 'rate', 'num_to_words', 'RateSearch', 'usagelnk', 'conf_reg_bool_info']);
            $actiontype = ($lAction) ? $lAction : $_POST['action'];
            $lastinsertid = ($lValNo) ? base64_decode($lValNo) : base64_decode($_POST['valno']);


            if ($csrf_token) {
                $csrf_token = ($csrf_token) ? $csrf_token : $_POST['csrftoken'];
                $this->check_csrf_token_withoutset($csrf_token);
            }

            if (isset($lastinsertid) && is_numeric($lastinsertid) && $lastinsertid && ctype_alpha($actiontype)) {
                $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
                $rs = "&#8377;";
                if ($actiontype == 'V' or $actiontype == 'P') {// Action V:return Design, P:Create PDF
                    $mdata = $this->valuation->getValuationInfo($lastinsertid);
                    //$rule_ids = $this->valuation_details->find('list', array('fields' => array('rule_id', 'rule_id'), 'group' => 'rule_id', 'conditions' => array('val_id' => $lastinsertid)));

                    $rule_ids = $this->valuation_details->find('all', array(
                        'fields' => array('evalrule.evalrule_id', 'evalrule.evalrule_desc_' . $lang,
                            'usagecat.usage_main_catg_id', 'usagecat.usage_sub_catg_id', 'usagecat.usage_sub_sub_catg_id',
                            'evalrule.add_usage_main_catg_id', 'evalrule.add_usage_sub_catg_id', 'evalrule.add_usage_sub_sub_catg_id',
                            'evalrule.add1_usage_main_catg_id', 'evalrule.add1_usage_sub_catg_id', 'evalrule.add1_usage_sub_sub_catg_id',
                            'evalrule.cmp_usage_main_catg_id', 'evalrule.cmp_usage_sub_catg_id', 'evalrule.cmp_usage_sub_sub_catg_id'),
                        'joins' => array(
                            array(
                                'table' => 'ngdrstab_mst_evalrule_new',
                                'alias' => 'evalrule',
                                'type' => 'INNER',
                                'conditions' => array(
                                    'evalrule.evalrule_id=valuation_details.rule_id'
                                )
                            ), array(
                                'table' => 'ngdrstab_mst_usage_category',
                                'alias' => 'usagecat',
                                'type' => 'INNER',
                                'conditions' => array(
                                    'usagecat.evalrule_id=evalrule.evalrule_id'
                                )
                            )
                        ),
                        'conditions' => array(
                            'valuation_details.val_id' => $lastinsertid
                        ),
                        'group' => array('evalrule.evalrule_id', 'evalrule.evalrule_desc_' . $lang,
                            'usagecat.usage_main_catg_id', 'usagecat.usage_sub_catg_id', 'usagecat.usage_sub_sub_catg_id',
                            'evalrule.add_usage_main_catg_id', 'evalrule.add_usage_sub_catg_id', 'evalrule.add_usage_sub_sub_catg_id',
                            'evalrule.add1_usage_main_catg_id', 'evalrule.add1_usage_sub_catg_id', 'evalrule.add1_usage_sub_sub_catg_id',
                            'evalrule.cmp_usage_main_catg_id', 'evalrule.cmp_usage_sub_catg_id', 'evalrule.cmp_usage_sub_sub_catg_id')
                            )
                    );

//pr($result);
                    $rate_rev_flag = $this->valuation->rate_revision_flag($lastinsertid);
                    $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 1)));
                    if ($mdata) {
                        $md = $mdata[0][0];
                        //pr($mdata);
                        $design = "<style>table{border-collapse:collapse;} td,th{padding:5px;}</style>"
                                . "<table width=100% border=1><tr><td><b>" . $rptlabels[68] . "</b> : " . $lastinsertid . " / " . date('Y') . '</td><td><b> :- </b>' . $md['finyear_desc'] . "</td> <td align=center> <b>" . $rptlabels[72] . "</b> : " . $md['user_id'] . "</td><td align=right><b>" . $rptlabels[69] . "</b> :  " . date('d-F-Y H:i:A') . "</td></tr></table>"
                                . "<table border=1 align=center width=100% style=background-color:#F0F0F0;>";

                        $design .= "<tr> <td colspan=2><b>" . $rptlabels[46] . "</b> : " . $md['state_name_' . $lang] . "</td> <td colspan=2><b>" . $rptlabels[47] . "</b> : " . $md['district_name_' . $lang] . " </td> <td colspan=2><b>" . $rptlabels[48] . "</b> : " . $md['taluka_name_' . $lang] . "</td> </tr>"
                                . "<tr> <td colspan=2><b>" . $rptlabels[49] . "</b> : " . $md['developed_land_types_desc_' . $lang] . "</td> <td colspan=2><b> " . $rptlabels[50] . "</b> : " . $md['governingbody_name_' . $lang] . "</td> <td colspan=2><b>" . $rptlabels[51] . "</b> : " . $md['village_name_' . $lang] . "</td> </tr>";
                        if ($md['level1_id']) {
                            $design .= "<tr>";
                            $design .= ($md['level1_id']) ? "<td colspan=3> <b>" . $md['level_1_desc_' . $lang] . "</b> - " . $md['list_1_desc_' . $lang] . "</td>" : "<td colspan=3> - </td>";
                            $design .= ($md['level2_id']) ? "<td colspan=3> <b>" . $md['level_2_desc_' . $lang] . "</b> - " . $md['list_2_desc_' . $lang] . "</td>" : "<td colspan=3> - </td>";
                            $design .= " </tr>";
                        }
                        if ($md['level3_id']) {
                            $design .= "<tr>";
                            $design .= ($md['level3_id']) ? "<td colspan=3> <b>" . $md['level_3_desc_' . $lang] . "</b> - " . $md['list_3_desc_' . $lang] . "</td>" : "<td colspan=3> - </td>";
                            $design .= ($md['level4_id']) ? "<td colspan=3> <b>" . $md['level_4_desc_' . $lang] . "</b> - " . $md['list_4_desc_' . $lang] . "</td>" : "<td colspan=3> - </td>";
                            $design .= " </tr>";
                        }
                        $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_en,param.paramter_value FROM ngdrstab_trn_valuation  as val
                            JOIN ngdrstab_trn_property_details_entry as prop ON  prop.token_no=val.token_no and prop.val_id=val.val_id
                            JOIN ngdrstab_trn_parameter as param ON token_id=val.token_no and parameter_type='S' and param.property_id=prop.property_id
                            JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                            WHERE val.val_id=?", array($lastinsertid));

                        if (!empty($serveyno)) {
                            foreach ($serveyno as $attribute) {
                                $design .= "<tr>";
                                $design .= "<td colspan=3> <b>" . $attribute[0]['eri_attribute_name_en'] . "</b> - " . $attribute[0]['paramter_value'] . "</td>";
                                $design .= " </tr>";
                            }
                        }
                        if ($md['construction_type_id'] || $md['depreciation_id']) {
                            $design .= "<tr>";
                            $design .= ($md['construction_type_id']) ? "<td colspan=3><b>" . $rptlabels[53] . " :</b>" . $md['construction_type_desc_' . $lang] . "</td>" : "<td colspan=3></td>";
                            $design .= ($md['depreciation_id']) ? "<td colspan=3><b>" . $rptlabels[54] . ":</b>" . $md['deprication_type_desc_' . $lang] . " </td> " : "<td colspan=3></td>";
                            $design .= " </tr>";
                        }
                        $design .= isset($md['road_vicinity_desc_' . $lang]) ? ("<tr><td colspan=6><b>" . $rptlabels[165] . ":</b>" . $md['road_vicinity_desc_' . $lang] . " </td> </tr> " ) : ("<tr><td colspan=6></td></tr>");
                        if ($md['user_defined_dependency1_id'] || $md['user_defined_dependency2_id']) {
                            $design .= "<tr>";
                            $design .= ($md['user_defined_dependency1_id']) ? "<td colspan=3><b>" . $rptlabels[424] . " :</b>" . $md['user_defined_dependency1_desc_' . $lang] . "</td>" : "<td colspan=3></td>";
                            $design .= ($md['user_defined_dependency2_id']) ? "<td colspan=3><b>" . $rptlabels[425] . ":</b>" . $md['user_defined_dependency2_desc_' . $lang] . " </td> " : "<td colspan=3></td>";
                            $design .= " </tr>";
                        }

                        $design .= "</table>";
                        //get Total Rule
                        //---------------------------------------------------for Getting Rate Chart--------------------------------------------------
                        $rate_chart_data = array();
                        $tmp_rate_data = NULL;
                        //pr($md);
                        // $evalrule=$this->evalrule->find("all",array('conditions'=>array('evalrule_id'=>)));
                        //pr($rule_ids);
                        foreach ($rule_ids as $rule_id) {
                            // pr($rule_id);
                            $usage_data = $this->usagelnk->find('first', array('fields' => array('usage_main_catg_id', 'usage_sub_catg_id', 'usage_sub_sub_catg_id', 'contsruction_type_flag', 'road_vicinity_flag', 'depreciation_flag'), 'conditions' => array('evalrule_id' => $rule_id['evalrule']['evalrule_id'])));
                            // pr($usage_data);
                            $rate_search = $this->RateSearch->find('all', array(
                                'conditions' => array('developed_land_types_id' => $md['developed_land_types_id'], 'usage_main_cat_id' => $usage_data['usagelnk']['usage_main_catg_id']),
                                //    'conditions' => array('developed_land_types_id' => $md['developed_land_types_id'], 'usage_main_cat_id' => $usage_data['usagelnk']['usage_main_catg_id'], 'RateSearch.construction_type_id' => $usage_data['usagelnk']['contsruction_type_flag'], 'road_vicinity_id' => $usage_data['usagelnk']['road_vicinity_flag']),
                                'order' => 'ready_reckoner_rate_flag DESC'));
                            $rate_factor = ($md['rate_factor']) ? $md['rate_factor'] : 1;
                            //pr($rate_search);
                            foreach ($rate_search as $rate) {
                                $rate_condition = array();
//                                if ($tmp_rate_data) {
//                                    //  continue;
//                                }
                                $rate = $rate['RateSearch'];
                                $rate_condition['rate.district_id'] = $md['district_id'];
                                // if($rate['ready_reckoner_rate_flag'] == 'Y' ){
                                $rate_condition['rate.ready_reckoner_rate_flag'] = $rate['ready_reckoner_rate_flag'];
                                //  }else{
                                // $rate_condition['rate.ready_reckoner_rate_flag'] = 'N';
                                // }

                                if ($md['village_id'] && $rate['village_id'] == 'Y') {
                                    $rate_condition['rate.village_id'] = $md['village_id'];
                                    if ($md['level1_id']) {
                                        $rate_condition['rate.level1_id'] = $md['level1_id'];
                                    }
                                    if ($md['level1_list_id']) {
                                        $rate_condition['rate.level1_list_id'] = $md['level1_list_id'];
                                    }
                                    //level 2
                                    if ($md['level2_id']) {
                                        $rate_condition['rate.level2_id'] = $md['level2_id'];
                                    }
                                    if ($md['level2_list_id']) {
                                        $rate_condition['rate.level2_list_id'] = $md['level2_list_id'];
                                    }
                                    //level 3
                                    if ($md['level3_id']) {
                                        $rate_condition['rate.level3_id'] = $md['level3_id'];
                                    }
                                    if ($md['level3_list_id']) {
                                        $rate_condition['rate.level3_list_id'] = $md['level3_list_id'];
                                    }
                                    //level 4
                                    if ($md['level4_id']) {
                                        $rate_condition['rate.level3_id'] = $md['level4_id'];
                                    }
                                    if ($md['level4_list_id']) {
                                        $rate_condition['rate.level4_list_id'] = $md['level4_list_id'];
                                    }
                                }
                                if ($md['taluka_id'] && $rate['taluka_id'] == 'Y') {
                                    $rate_condition['rate.taluka_id'] = $md['taluka_id'];
                                }
                                if ($md['valutation_zone_id'] && $rate['valutation_zone_id'] == 'Y') {
                                    $rate_condition['rate.valutation_zone_id'] = $md['valutation_zone_id'];
                                }
                                if (is_numeric($md['valutation_subzone_id'])) {
                                    $rate_condition['rate.valutation_subzone_id'] = $md['valutation_subzone_id'];
                                }
                                if ($md['finyear_id'] && $rate['finyear_id'] == 'Y') {
                                    $rate_condition['rate.finyear_id'] = $md['finyear_id'];
                                }

                                if ($md['ulb_type_id'] && $rate['ulb_type_id'] == 'Y') {
                                    $rate_condition['rate.ulb_type_id'] = $md['ulb_type_id'];
                                }
//                                'OR' => array(
//            array(
//                'rate.usage_main_catg_id = '.$md['usage_main_catg_id'],
//                'MONTH(holding_date)' => array(3,6,9,12)
//            ),
//            'holding_date' => '2013-09-15'
//        )
                                $rrr = array();
                                if ($rule_id['usagecat']['usage_main_catg_id'] && $rate['usage_main_catg_id'] == 'Y') {
                                    // $rate_condition['rate.usage_main_catg_id'] = $md['usage_main_catg_id'];
                                    $rrr['rate.usage_main_catg_id'] = $rule_id['usagecat']['usage_main_catg_id']; //$md['usage_main_catg_id'];
                                }
                                if ($rule_id['usagecat']['usage_sub_catg_id'] && $rate['usage_sub_catg_id'] == 'Y') {
                                    // $rate_condition['rate.usage_sub_catg_id'] = $md['usage_sub_catg_id'];
                                    $rrr['rate.usage_sub_catg_id'] = $rule_id['usagecat']['usage_sub_catg_id']; //$md['usage_sub_catg_id'];
                                }
                                if ($rule_id['usagecat']['usage_sub_sub_catg_id'] && $rate['usage_sub_sub_catg_id'] == 'Y') {
                                    //$rate_condition['rate.usage_sub_sub_catg_id'] = $md['usage_sub_sub_catg_id'];
                                    $rrr['rate.usage_sub_sub_catg_id'] = $rule_id['usagecat']['usage_sub_sub_catg_id']; //$md['usage_sub_sub_catg_id'];
                                }
                                $rr1 = array();
                                if ($rule_id['evalrule']['add_usage_main_catg_id'] && $rate['usage_main_catg_id'] == 'Y') {
                                    // $rate_condition['rate.usage_main_catg_id'] = $md['usage_main_catg_id'];
                                    $rr1['rate.usage_main_catg_id'] = $rule_id['evalrule']['add_usage_main_catg_id'];
                                }
                                if ($rule_id['evalrule']['add_usage_sub_catg_id'] && $rate['usage_sub_catg_id'] == 'Y') {
                                    // $rate_condition['rate.usage_sub_catg_id'] = $md['usage_sub_catg_id'];
                                    $rr1['rate.usage_sub_catg_id'] = $rule_id['evalrule']['add_usage_sub_catg_id'];
                                }
                                if ($rule_id['evalrule']['add_usage_sub_sub_catg_id'] && $rate['usage_sub_sub_catg_id'] == 'Y') {
                                    //$rate_condition['rate.usage_sub_sub_catg_id'] = $md['usage_sub_sub_catg_id'];
                                    $rr1['rate.usage_sub_sub_catg_id'] = $rule_id['evalrule']['add_usage_sub_sub_catg_id'];
                                }

                                $rr5 = array();
                                if ($rule_id['evalrule']['add1_usage_main_catg_id'] && $rate['usage_main_catg_id'] == 'Y') {
                                    // $rate_condition['rate.usage_main_catg_id'] = $md['usage_main_catg_id'];
                                    $rr5['rate.usage_main_catg_id'] = $rule_id['evalrule']['add1_usage_main_catg_id'];
                                }
                                if ($rule_id['evalrule']['add1_usage_sub_catg_id'] && $rate['usage_sub_catg_id'] == 'Y') {
                                    // $rate_condition['rate.usage_sub_catg_id'] = $md['usage_sub_catg_id'];
                                    $rr5['rate.usage_sub_catg_id'] = $rule_id['evalrule']['add1_usage_sub_catg_id'];
                                }
                                if ($rule_id['evalrule']['add1_usage_sub_sub_catg_id'] && $rate['usage_sub_sub_catg_id'] == 'Y') {
                                    //$rate_condition['rate.usage_sub_sub_catg_id'] = $md['usage_sub_sub_catg_id'];
                                    $rr5['rate.usage_sub_sub_catg_id'] = $rule_id['evalrule']['add1_usage_sub_sub_catg_id'];
                                }


                                $abe = array();
                                if ($rule_id['evalrule']['cmp_usage_main_catg_id'] && $rate['usage_main_catg_id'] == 'Y') {
                                    // $rate_condition['rate.usage_main_catg_id'] = $md['usage_main_catg_id'];
                                    $abe['rate.usage_main_catg_id'] = $rule_id['evalrule']['cmp_usage_main_catg_id'];
                                }
                                if ($rule_id['evalrule']['cmp_usage_sub_catg_id'] && $rate['usage_sub_catg_id'] == 'Y') {
                                    // $rate_condition['rate.usage_sub_catg_id'] = $md['usage_sub_catg_id'];
                                    $abe['rate.usage_sub_catg_id'] = $rule_id['evalrule']['cmp_usage_sub_catg_id'];
                                }
                                if ($rule_id['evalrule']['cmp_usage_sub_sub_catg_id'] && $rate['usage_sub_sub_catg_id'] == 'Y') {
                                    //$rate_condition['rate.usage_sub_sub_catg_id'] = $md['usage_sub_sub_catg_id'];
                                    $abe['rate.usage_sub_sub_catg_id'] = $rule_id['evalrule']['cmp_usage_sub_sub_catg_id'];
                                }

                                $rate_condition['OR'] = array($rrr, $rr1, $abe, $rr5);

                                //pr(array($rrr,$rr1,$abe));

                                if ($md['construction_type_id'] && $rate['construction_type_id'] == 'Y') {
                                    $rate_condition['rate.construction_type_id'] = $md['construction_type_id'];
                                } else {
                                    $rate_condition['rate.construction_type_id'] = NULL;
                                }
                                if ($md['road_vicinity_id'] && $rate['road_vicinity_id'] == 'Y') {
                                    $rate_condition['rate.road_vicinity_id'] = $md['road_vicinity_id'];
                                } else {
                                    $rate_condition['rate.road_vicinity_id'] = NULL;
                                }
                                if ($md['user_defined_dependency1_id'] && $rate['user_defined_dependency1_id'] == 'Y') {
                                    $rate_condition['rate.user_defined_dependency1_id'] = $md['user_defined_dependency1_id'];
                                } else {
                                    $rate_condition['rate.user_defined_dependency1_id'] = NULL;
                                }
                                if ($md['user_defined_dependency2_id'] && $rate['user_defined_dependency2_id'] == 'Y') {
                                    $rate_condition['rate.user_defined_dependency2_id'] = $md['user_defined_dependency2_id'];
                                } else {
                                    $rate_condition['rate.user_defined_dependency2_id'] = NULL;
                                }
                                if ($md['subdivision_id'] && $rate['subdivision_id'] == 'Y') {
                                    $rate_condition['rate.subdivision_id'] = $md['subdivision_id'];
                                }



                                //$rate_condition['rate.finyear_id'] = $this->valuation->field('finyear_id', array('val_id' => $lastinsertid));
//pr($rate_condition);
                                //get Rates
                                $tmp_rate_data = $this->rate->find('all', array('fields' => array('DISTINCT main.usage_main_catg_id', 'main.usage_main_catg_desc_' . $lang, 'sub.usage_sub_catg_id', 'sub.usage_sub_catg_desc_' . $lang, 'rate.rate_id', 'rate.prop_unit', 'unit.unit_desc_' . $lang, 'rate.prop_rate', 'rate.ready_reckoner_rate_flag'),
                                    'joins' => array(
                                        array('table' => 'ngdrstab_mst_usage_main_category', 'type' => 'left', 'alias' => 'main', 'conditions' => array('main.usage_main_catg_id=rate.usage_main_catg_id')),
                                        array('table' => 'ngdrstab_mst_usage_sub_category', 'type' => 'left', 'alias' => 'sub', 'conditions' => array('sub.usage_sub_catg_id=rate.usage_sub_catg_id')),
                                        //  array('table' => 'ngdrstab_mst_usage_sub_category', 'type' => 'left', 'alias' => 'sub', 'conditions' => array('sub.usage_sub_catg_id=rate.usage_sub_catg_id')),
                                        array('table' => 'ngdrstab_mst_unit', 'type' => 'left', 'alias' => 'unit', 'conditions' => array('unit.unit_id=rate.prop_unit'))
                                    ),
                                    'conditions' => $rate_condition,
                                        //'group' => array('main.usage_main_catg_id', 'main.usage_main_catg_desc_' . $lang, 'sub.usage_sub_catg_id', 'sub.usage_sub_catg_desc_' . $lang, 'rate.prop_unit', 'unit.unit_desc_' . $lang, 'rate.prop_rate', 'rate.ready_reckoner_rate_flag')
                                ));
                                //  pr($tmp_rate_data);
                                if ($tmp_rate_data) {
                                    //  pr($tmp_rate_data);
                                    array_push($rate_chart_data, $tmp_rate_data);
                                }
                            }//end of foreach
                        }//Rule Id Loop End
                    }

                    //pr($rate_chart_data);
                    $rate_chart_data_new = array();
                    foreach ($rate_chart_data as $singlerulerate) {
                        foreach ($singlerulerate as $singlerate) {

                            $rate_chart_data_new[$singlerate['rate']['ready_reckoner_rate_flag'] . $singlerate['rate']['rate_id'] . ''] = $singlerate;
                        }
                    }
                    krsort($rate_chart_data_new);
                    // pr($rate_chart_data_new);
                    $rate_chart_data = $rate_chart_data_new;

                    //-------------------------------Design of rate Chart----------------------------------------------------------------------------

                    if ($rate_chart_data) { //display Rate Chart
                        $design .= "<div class='table-responsive'><table border=1 align=center width=100%>"
                                . "<tr style=background-color:#F0E0F0;><td> <h4 style='padding:0;margin:0;' align=center> <b>" . $rptlabels[56] . " </b></h4></td></tr>";
                        $design .= "</table>"
                                . "<table  border=1 align=center width=100%><thead>";
                        $srNo = 1;
                        //display input items

                        $design .= "<tr >";
                        foreach ($rate_chart_data as $rate_chart) {
                            //   foreach ($rate_chart as $rate) {
                            $rate = $rate_chart;

                            $design .= "<th> " . $rate['sub']['usage_sub_catg_desc_' . $lang] . " (" . $rate['rate']['ready_reckoner_rate_flag'] . ")" . " </th>";
                            // }
                        }
                        $design .= "</tr></thead>";
                        $design .= "<tr style ='background-color:#F0F0F0;'>";
                        foreach ($rate_chart_data as $rate_chart_data) {
                            //  foreach ($rate_chart_data as $rate) {
                            $rate = $rate_chart_data;
                            $design .= "<td align=center>" . $rs . $rate['rate']['prop_rate'] . "/- " . $rate['unit']['unit_desc_' . $lang] . "</td>";
                            // }
                        }
                        $design .= "</tr> </table></div>";
                    }


                    //--------------------------------------------------------End of Rate Chart-----------------------------------------------------------------------\\
                    //---------------------------------Display Usage Category---------------------------------------------------------
                    $srAlphaArray = array();
                    $srAlpha = "A";
                    foreach ($rule_ids as $rule_id) {
                        $design .= "<table border=1 align=center width=100%>";
                        $ruleDetail = $this->evalrule->get_rule_detail($rule_id['evalrule']['evalrule_id'], $lang);
                        //   $design .= "<tr><td><b>" . $rptlabels[70] . ": </b>" . $rs . (($rate_rev_flag == 'N') ? ($this->valuation->format_money_india(round($md['rate'])) . "/-  &nbsp;&nbsp;&nbsp;&nbsp; <b>" . $rptlabels[71] . " :</b> " . ($md['rate']) . " x " . $rate_factor * 100 . "% = " . $rs . $this->valuation->format_money_india($md['rate'] * $rate_factor) ) : ($this->valuation->format_money_india(round($md['rate'])) . "/-")) . "</td></tr>";
                        $design .= "<tr> <td> <b>" . $rptlabels[57] . " : </b>" . $ruleDetail['evalrule']['evalrule_desc_' . $lang] . "</td>";




//
//                        if ($ruleDetail['evalrule']['reference_no']) {
//                            $design .= "<tr><td> <b>" . $rptlabels[59] . "</b> : " . $ruleDetail['evalrule']['reference_no'] . "</td> </tr>";
//                        }
                        //  echo nl2br($ruleDetail['evalrule']['reference_no'],false);
                        //  pr($refno);
                        if ($ruleDetail['evalrule']['reference_no']) {
                            $reference_variable .= "<tr><td colspan=2 border=1> <b>" . $rptlabels[59] . "</b> : " . $ruleDetail['evalrule']['evalrule_desc_' . $lang] . "<br>" . nl2br($ruleDetail['evalrule']['reference_no'], false) . "</td> </tr>";
                        }
                        // $reference_variable


                        $design .= "<tr> <td><b>" . $rptlabels[58] . "</b> : " . $ruleDetail['mcat']['usage_main_catg_desc_' . $lang] . " => " . $ruleDetail['scat']['usage_sub_catg_desc_' . $lang] . " => " . $ruleDetail['sscat']['usage_sub_sub_catg_desc_' . $lang] . "</td> </tr>";

                        $design .= "</table>";
                        //----------------------------------------------------------Get Input Details------------------------------------------------------------------------
                        $design .= "<table border=1  width=100% style=background-color:#F0E0F0;>"
                                . "<tr><td> <h4 style='padding:0;margin:0;' align=center> <b>" . $rptlabels[60] . " </b></h4></td> </tr> </table>";

                        $design .= "<table  border=1 align=center width=100% style='background-color:#F0F0F0;'>";
                        $ruleflag = $tempsubrule = NULL;
                        $attach = "";
                        $fatotal = 0;


                        $srNo = 1;


                        $item_type_id = 1; //one for input
                        $VDetail = $this->valuation_details->getValuationDetail($lastinsertid, $item_type_id, $rule_id['evalrule']['evalrule_id'], $lang); // 1 for input values Details
                        //pr($VDetail);
                        //exit;
                        foreach ($VDetail as $Vdt1) {//display input items
                            $vd1 = $Vdt1[0];
                            // pr($vd1);
                            if ($vd1['item_type_id'] == 1) {//display floor no. if value is zero other items will not display if value is 0
                                $item_value = ($vd1['is_list_field_flag'] == 'Y') ? $vd1['item_desc_' . $lang] : $vd1['item_value'];
                                $item_valuearr = explode(".", $item_value);
                                if (isset($item_valuearr[1]) && $item_valuearr[1] == 0) {
                                    $item_value = $item_valuearr[0];
                                }
                                $item_value = ($vd1['is_string'] == 'Y') ? $vd1['item_value_string'] : $item_value;
                                if ($vd1['area_type_flag'] == 'Y' && $item_value > 0) {
                                    $design .= "<tr style ='background-color:#F0F0F0;'>";
                                    $design .= "<td align=center>" . $srNo++ . "</td><td>" . $vd1['usage_param_desc_' . $lang] . " </td><td  align=center> " . $item_value . " " . $vd1['unit_desc_' . $lang] . "</td>";
                                } elseif ($vd1['area_type_flag'] == 'N') {
                                    $design .= "<tr style ='background-color:#F0F0F0;'>";
                                    $design .= "<td align=center>" . $srNo++ . "</td><td>" . $vd1['usage_param_desc_' . $lang] . " </td><td  align=center> " . $item_value . " " . $vd1['unit_desc_' . $lang] . "</td>";
                                }
                            }
                            $design .= "</tr>";
                        }
                        $design .= "</table>";
                        //-----------------------------------------------Calculation Details--------------------------------------------------------------------------------------
                        $design .= "<table border=1 align=center width=100% >"
                                . "<tr style=background-color:#F0E0F0;><td> <h4 style='padding:0;margin:0;' align=center> <b>" . $rptlabels[61] . " </b></h4></td> </tr> </table>";
                        $item_type_id = 2;
                        $OutputDetail = $this->valuation_details->getValuationDetail($lastinsertid, $item_type_id, $rule_id['evalrule']['evalrule_id'], $lang); // 2 for Output values Details
                        if ($OutputDetail) {
                            $design .= "<table border=1 align=center width=100%>";
                            $design .= "<tr style ='font-weight: bold;'> <td align = center> <b>" . $rptlabels[62] . " </b></td>  <td><b>" . $rptlabels[63] . "</b> </td> <td align=center> <b>" . $rptlabels[64] . "</b></td> <td align = center> <b>" . $rptlabels[65] . "</b></td> </tr>";
                            $srNo = 1;
                            foreach ($OutputDetail as $otd) {
                                $otd = $otd[0];
                                $design .= "<tr style ='background-color:#F0F0F0;'>";

                                $rate_rev_formula = str_replace(['RRR', 'RR1', 'RR2', 'ABE'], [$otd['org_rrr'], $otd['org_rr1'], $otd['org_rr2'], $otd['org_abe']], $otd['rate_revision_formula']);

                                $rate_rev_formula = ($rate_rev_formula) ? eval("return ($rate_rev_formula);") : 0;
                                $after_depreciation = $rate_rev_formula * $otd['depreciation_factor'];
                                $design .= "<td>" . $srNo++ . "</td><td>" . $otd['usage_param_desc_' . $lang] . $attach . " </td>"
                                        . "<td> <ol>"
                                        . (($otd['rate_revision_formula']) ? '<li>' . str_replace('*', ' x ', str_replace(['RRR', 'RR1', 'RR2', 'ABE'], [$otd['org_rrr'], $otd['org_rr1'], $otd['org_rr2'], $otd['org_abe']], $otd['rate_revision_formula'])) . "=" . $rate_rev_formula . "</li>" : '')
                                        . (($rate_rev_formula) ? '<li>' . $rate_rev_formula . " * " . ($otd['depreciation_factor']) . " (Depreciation)" . '=' . $after_depreciation . "</li>" : '')
                                        . '<li>   &nbsp;&nbsp;' . str_replace('*', ' x ', str_replace('round', ' ', $otd['dep_detail'])) . '=' . $otd['final_value'] . "</li>"
                                        . "</td>";
                                $fatotal += $otd['final_value'];
                                $totalfinalamt = $totalfinalamt + round($otd['final_value']);
                                $design .= "<td align=right><b>" . $rs . $this->valuation->format_money_india(round($otd['final_value'], 0)) . "/-</b> </td>";
                                $design .= "</tr>";
                            }
                            $design .= "<tr style='background-color:#5F9EA0'> <td align=center> <b>" . $srAlpha . "<b></td> <td colspan=2>Total</td> <td align=right> <b>" . $rs . $this->valuation->format_money_india(round($fatotal, 0)) . "/-</b> </td> </tr>";
                            array_push($srAlphaArray, "<b>" . $srAlpha++ . "<b>");
                            $design .= "</table>";
                        }
                    }//rule_ids

                    $regconf = $this->conf_reg_bool_info->find("all", array('conditions' => array('reginfo_id' => 46)));
                    $roundto = '';
                    if (!empty($regconf)) {
                        if ($regconf[0]['conf_reg_bool_info']['is_boolean'] == 'Y' && $regconf[0]['conf_reg_bool_info']['conf_bool_value'] == 'Y') {
                            if (is_numeric($regconf[0]['conf_reg_bool_info']['info_value']) && $regconf[0]['conf_reg_bool_info']['info_value'] > 0)
                                $roundto = $regconf[0]['conf_reg_bool_info']['info_value'];
                        }
                    }
                    $totalfinalamt = $this->round_tonext($totalfinalamt, $roundto);
                    $design .= "<table border=1 width=100%>"
                            . "<tr><td colspan=2><b>Note : </b> Final Valuation is Rounded to Next $roundto/-</td> </tr>"
                            . "<tr style='background-color:#00CED1'><td ><b>" . $rptlabels[66] . " (" . implode(' + ', $srAlphaArray) . ")</b></td><td align=right><b>" . $rs . $this->valuation->format_money_india(round($totalfinalamt, 0)) . "/- </b> </td></tr>"
                            . "<tr style='background-color:#00CED1'><td colspan=2><b>" . $rptlabels[67] . " : " . $this->num_to_words->in_words($totalfinalamt) . "Rupees Only. </b> </td></tr>";

                    $design .= $reference_variable;
                    $design .= "</table>";
                }
                //create View for Dialog Box
                if ($actiontype == 'V') {
                    return $design;
                }
                //Create PDF Report for Same
                else if ($actiontype == 'P') {
                    $html = '<h2 align=center> Property Valuation</h2>';
                    $html .= $design;
                    $this->create_pdf($html, "Valuation_" . $lastinsertid);
                }
            } else {
                return NULL;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return 'Sorry! Erro in Getting Valuation';
            $this->Session->setFlash('Sorry! Error in generating Report');
        }
    }

//-----------------------------------------------------------------------\\   End of Valuation Report   //------------------------------------------------------------------
//--------------*-----------*----------------*----------------*----------// Fee Calculation Report Based on fee_calc_id ID \\--*---------*---------*------------*-----------*-----------*--------------*-----
    public function rpt_fee_calc() {

        $this->set('months', array(1 => 'January', 2 => 'February', 3 => 'March', 4 => 'April', 5 => 'May', 6 => 'June', 7 => 'July', 8 => 'August', 9 => 'September', 10 => 'Octomber', 11 => 'November', 12 => 'December'));
        $this->set('years', range(date("Y"), date("Y") - 4));
        $fieldlist = array();
        $fieldlist['fee_calc_id']['text'] = 'is_numeric';
        $this->set('fieldlist', $fieldlist);
        $this->set('result_codes', $this->getvalidationruleset($fieldlist));
    }

    public function rpt_fee_calc_list() {
        try {
            $frm = $this->request->data['rptFeeCalc'];
            $conditions = array();
            if (ctype_alpha($frm['filterby']) && strlen($frm['filterby'])) {
                switch ($frm['filterby']) {
                    case 'D':
                        array_push($conditions, "fees_calculation.created BETWEEN '" . $frm['fromDate'] . " 00:00:00' and  '" . $frm['toDate'] . " 23:59:59'");
                        break;
                    case 'M':
                        $fromDate = date('Y') . '-' . sprintf("%02d", $frm['month']) . '-01';
                        $toDate = date('Y') . '-' . sprintf("%02d", $frm['month']) . '-' . cal_days_in_month(CAL_GREGORIAN, $frm['month'], date('Y'));
                        array_push($conditions, "fees_calculation.created BETWEEN '" . $fromDate . " 00:00:00' AND  '" . $toDate . " 23:59:59'");
                        break;
                    case 'Y':
                        array_push($conditions, "fees_calculation.created BETWEEN '" . (date('Y') - $frm['year']) . "-01-01" . " 00:00:00' AND  '" . (date('Y') - $frm['year']) . "-12-31 23:59:59'");
                        break;
                    default :
                        $conditions['fees_calculation.fee_calc_id'] = $frm['fee_calc_id'];
                        break;
                }
                $conditions['delete_flag'] = 'N';
                array_map([$this, 'loadModel'], ['fees_calculation']);
                //Set Variables
                $lang = $this->Session->read('sess_langauge');
                $result_records = $this->fees_calculation->find('all', array('fields' => array('fee_calc_id', 'article.article_desc_' . $lang, 'rule.fee_rule_desc_' . $lang), 'conditions' => $conditions, 'order' => 'fees_calculation.fee_calc_id DESC',
                    'joins' => array(
                        array('table' => 'ngdrstab_mst_article', 'alias' => 'article', 'conditions' => array('article.article_id=fees_calculation.article_id')),
                        array('table' => 'ngdrstab_mst_article_fee_rule', 'alias' => 'rule', 'conditions' => array('rule.fee_rule_id=fees_calculation.fee_rule_id'))
                    )
                ));
                $this->set(compact('result_records', 'lang'));
            } else {
                $this->Session->setFlash('Please provide proper input');
                return FALSE;
            }
        } catch (Exception $ex) {
            $this->Session->setFlash('Sorry! Error in fetchind Fee Calc List');
        }
    }

//-----------------------------------------------------------------\\ End Fee Calculation Report //--------------------------------------------------------------
//------------------------------------------------------------------Get Survey Number List------------------------------------------------
    public function getsurveynumbers() {
        try {
            $this->loadModel('Surveyno');
            $data = $this->request->data;
            $lang = $this->Session->read("sess_langauge");
            $stateid = $this->Auth->User("state_id");
            $district = $data['district'];
            $taluka = $data['taluka'];
            $council = $data['council'];
            $village = $data['village'];
            $lavel1 = $data['lavel1'];
            $lavel1_list = $data['lavel1_list'];
            $lavel2 = $data['lavel2'];
            $lavel2_list = $data['lavel2_list'];
            $lavel3 = $data['lavel3'];
            $lavel3_list = $data['lavel3_list'];
            $lavel4 = $data['lavel4'];
            $lavel4_list = $data['lavel4_list'];

            $conditions['state_id'] = $stateid;
            if (is_numeric($district)) {
                $conditions['district_id'] = $district;
            }
            if (is_numeric($taluka)) {
                $conditions['taluka_id'] = $taluka;
            }
            if (is_numeric($council)) {
                $conditions['corp_id'] = $council;
            }
            if (is_numeric($village)) {
                $conditions['village_id'] = $village;
            }
            if (is_numeric($lavel1)) {
                $conditions['level1_id'] = $lavel1;
            }
            if (is_numeric($lavel1_list)) {
                $conditions['level1_list_id'] = $lavel1_list;
            }
            if (is_numeric($lavel2)) {
                $conditions['level2_id'] = $lavel2;
            }
            if (is_numeric($lavel2_list)) {
                $conditions['level2_list_id'] = $lavel2_list;
            }
            if (is_numeric($lavel3)) {
                $conditions['level3_id'] = $lavel3;
            }
            if (is_numeric($lavel3_list)) {
                $conditions['level3_list_id'] = $lavel3_list;
            }
            if (is_numeric($lavel4)) {
                $conditions['level4_id'] = $lavel4;
            }
            if (is_numeric($lavel4_list)) {
                $conditions['level4_list_id'] = $lavel4_list;
            } // pr($conditions);
            $this->set("results", $result = $this->Surveyno->find('all', array('conditions' => $conditions)));
        } catch (Exception $e) {
            
        }
    }

//--------------*-----------*----------------*----------------*---// Print Eval Rule \\--*---------*---------*------------*-----------*-----------*--------------*-----
    public function rptvalationrule() {
        array_map([$this, 'loadModel'], ['evalrule', 'subrule']);
        $rule = $this->evalrule->Query("SELECT mcat.usage_main_catg_desc_en,mcat.usage_main_catg_desc_ll, scat.usage_sub_catg_desc_en,scat.usage_sub_catg_desc_ll, sscat.usage_sub_sub_catg_desc_en,sscat.usage_sub_sub_catg_desc_ll,oi.usage_param_desc_en as output_item, * FROM ngdrstab_mst_evalrule_new vd
                                            left outer join ngdrstab_mst_usage_category ucat on ucat.evalrule_id=vd.evalrule_id
                                            left outer join ngdrstab_mst_usage_main_category mcat on mcat.usage_main_catg_id= ucat.usage_main_catg_id
                                            left outer join ngdrstab_mst_usage_sub_category scat on scat.usage_sub_catg_id= ucat.usage_sub_catg_id
                                            left outer join ngdrstab_mst_usage_sub_sub_category sscat on sscat.usage_sub_sub_catg_id= ucat.usage_sub_sub_catg_id
                                            left outer join ngdrstab_mst_usage_items_list oi on oi.usage_param_id=vd.output_item_id Order by vd.reference_no");

        $lnkdata = $this->evalrule->Query("SELECT evalrule_id,oi.usage_param_code||' : '||oi.usage_param_desc_en as input_item 
                FROM ngdrstab_mst_usage_lnk_category lnk
                left outer join ngdrstab_mst_usage_items_list oi on oi.usage_param_id=lnk.usage_param_id");
        $subrule = $this->subrule->Query("SELECT sbrl.*,oi.usage_param_desc_en as output_item 
                FROM ngdrstab_mst_evalsubrule sbrl
                left outer join ngdrstab_mst_usage_items_list oi on oi.usage_param_id=sbrl.output_item_id
           --      where output_item_id is not null
                order by evalrule_id");
        $this->set(compact('rule', 'subrule', 'lnkdata'));
    }

//--------------*-----------*----------------*----------------*---\\ End of Print Eval Rule //--*---------*---------*------------*-----------*-----------*--------------*-----
    //==================================  Normal Village Rate Report Start===============================================// 
    public function ratereport() {
        try {
            $this->loadModel('State');
            $this->loadModel('User');

            $this->set('actiontypeval', NULL);
            $this->set('hfdist', NULL);
            $this->set('hftal', NULL);
            $this->set('hfvil', NULL);

            $language = $this->Session->read('sess_langauge');
            $this->set('language', $language);
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $this->set('lang', $lang);

            $this->set('finyear', ClassRegistry::init('finyear')->find('list', array('fields' => array('finyear_id', 'finyear_desc'), 'order' => array('finyear_desc' => 'ASC'))));

            $this->set('District', ClassRegistry::init('District')->find('list', array('fields' => array('district_id', 'district_name_' . $language), 'conditions' => array('state_id' => $stateid), 'order' => array('district_name_' . $language => 'ASC'))));
            $this->set('village', NULL);
            $this->set('taluka', NULL);

            $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json');
            $json = $file->read(true, 'r');
            $json2array = json_decode($json, TRUE);
            $fieldlist = array();
            $fielderrorarray = array();

            $fieldlist['finyear_id']['select'] = 'is_select_req';
            $fieldlist['district_id']['select'] = 'is_select_req';
            $fieldlist['taluka_id']['select'] = 'is_emptyornumallow';
            $fieldlist['village_id']['select'] = 'is_emptyornumallow';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));
            if ($this->request->is('post')) {
//                $this->check_csrf_token($this->request->data['ratereport']['csrftoken']);
                $this->request->data['ratereport'] = $this->istrim($this->request->data['ratereport']);
                //  pr($this->request->data['divisionnew']);exit;
                $errarr = $this->validatedata($this->request->data['ratereport'], $fieldlist);
                $fyear = $this->request->data['ratereport']['finyear_id'];
//                pr($fyear);exit;
//                pr($this->request->data);exit;
//                $flag = 0;
//                foreach ($errarr as $dd) {
//                    if ($dd != "") {
//                        $flag = 1;
//                    }
//                }
//                if ($flag == 1) {
//                    $this->set("errarr", $errarr);
//                } else {

                if ($this->ValidationError($errarr)) {
                    $this->set('taluka', $json2array['taluka']);
                    $this->set('village', $json2array['village']);
// pr($json2array['village']);exit;
                    $this->set('actiontypeval', $_POST['actiontype']);
                    $reporttype = $_POST['report'];

//                $this->set('hfid', $_POST['hfid']);
//               pr($this->request->data);exit;
                    if ($_POST['actiontype'] == '1') {
                        $distid = $this->request->data['ratereport']['district_id'];
                        $villageid = $this->request->data['ratereport']['village_id'];
                        $talid = $this->request->data['ratereport']['taluka_id'];
                        $distname = $_POST["hfdist"];
                        $talname = $_POST["hftal"];
                        $vilname = $_POST["hfvil"];
                        $html = '';
                        $rpt_title = "Rate Report";

                        if ($talid == null || $talid == '' && $villageid == null || $villageid == '') {
//                             pr( $this->request->data);
                            $result = $this->User->query("select a.*,unit.unit_desc_$lang,b.village_name_$lang ,c.developed_land_types_desc_$lang,
                    d.level_1_desc_$lang, h.list_1_desc_$lang,l.usage_main_catg_desc_$lang,taluka_name_$lang,
                    m.usage_sub_catg_desc_$lang,a.prop_rate
                    from ngdrstab_mst_rate a
                    inner join ngdrstab_conf_admblock5_taluka t on t.taluka_id = a.taluka_id
                    inner join ngdrstab_conf_admblock7_village_mapping b on b.village_id = a.village_id	
                    inner join ngdrstab_mst_developed_land_types c on c.developed_land_types_id = a.developed_land_types_id
                    inner join ngdrstab_mst_unit unit on unit.unit_id=a.prop_unit
                    left join ngdrstab_conf_admblock3_district dist on dist.district_id=a.district_id
                    left outer join ngdrstab_mst_location_levels_1_property d on d.level_1_id = a.level1_id
                    left outer join ngdrstab_mst_loc_level_1_prop_list h on h.prop_level1_list_id = a.level1_list_id 
                    inner join ngdrstab_mst_usage_main_category l on l.usage_main_catg_id = a.usage_main_catg_id
                    left outer join ngdrstab_mst_usage_sub_category m on m.usage_sub_catg_id = a.usage_sub_catg_id
                    where a.finyear_id=$fyear and a.district_id=$distid");
//                       pr($result);exit;
                            if ($result) {
                                $html_body = "<tr>"
                                        . "<th style='text-align:center;'>Sr.No.</th>"
                                        . "<th style='text-align:center;'>Taluka Name</th>"
                                        . "<th style='text-align:center;'>Village Name</th>"
                                        . "<th style='text-align:center;'>Developed Land Type</th>"
                                        . "<th style='text-align:center;'>Level 1 Name</th>"
                                        . "<th style='text-align:center;'>Level List 1 Name</th>"
                                        . "<th style='text-align:center;'>Usage Main Category</th>"
                                        . "<th style='text-align:center;'>Usage Sub Category</th>"
                                        . "<th style='text-align:center;'>Property Rate</th>"
                                        . "<th style='text-align:center;'>Unit</th>"
                                        . "<th style='text-align:center;'>Segment No</th>"
                                        . "</tr>";
                                $i = 1;
                                foreach ($result as $rs) {
                                    $html_body .= "<tr>"
                                            . "<td style='text-align:center;'>" . $i . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['taluka_name_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['village_name_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['developed_land_types_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['level_1_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['list_1_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['usage_main_catg_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['usage_sub_catg_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['prop_rate'] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['unit_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['segment_no'] . "</td>"
                                            . "</tr>";
                                    $i++;
                                }

                                $html = "<style>th{font-size:12px;} td{font-size:12px;align:center; padding:5px;}</style>"
                                        . "<html><body>"
                                        . "<h1 align=center>" . $rpt_title . "</h1>"
                                        . "<table align='center' style='border:0; width:50%'><tr style='border:0;'><td align=center style='border:0; font-weight: bold;'> District: " . $distname . "</td></tr></table> "
                                        . "<h6 align='center'>Report Date:" . date('d-m-Y') . "</h6>"
                                        . "<table width=100% align='center'>";
                                $html .= $html_body;
                            } else {
                                $this->Session->setFlash("No Record Found");
                                $this->redirect(array('controller' => 'Reports', 'action' => 'ratereport'));
                            }
                        } else if ($villageid == null || $villageid == '') {
//                            $result = $this->User->query("select a.*,unit.unit_desc_$lang,b.village_name_$lang ,c.developed_land_types_desc_$lang,
//                    d.level_1_desc_$lang, h.list_1_desc_$lang,l.usage_main_catg_desc_$lang,
//                    m.usage_sub_catg_desc_$lang,a.prop_rate
//                    from ngdrstab_mst_rate a
//                    inner join ngdrstab_conf_admblock7_village_mapping b on b.village_id = a.village_id	
//                    inner join ngdrstab_mst_developed_land_types c on c.developed_land_types_id = a.developed_land_types_id
//                    inner join ngdrstab_mst_unit unit on unit.unit_id=a.prop_unit
//                    left outer join ngdrstab_mst_location_levels_1_property d on d.level_1_id = a.level1_id
//                    left outer join ngdrstab_mst_loc_level_1_prop_list h on h.prop_level1_list_id = a.level1_list_id 
//                    inner join ngdrstab_mst_usage_main_category l on l.usage_main_catg_id = a.usage_main_catg_id
//                    left outer join ngdrstab_mst_usage_sub_category m on m.usage_sub_catg_id = a.usage_sub_catg_id
//                    where  a.finyear_id=$fyear and  a.village_id = (select  village_id from ngdrstab_conf_admblock7_village_mapping v where v.taluka_id=$taltid and a.village_id=v.village_id group by village_id)order by b.village_name_$lang asc");
//                         pr($result);exit;

                            $result = $this->User->query("select a.*,unit.unit_desc_$lang,b.village_name_$lang ,c.developed_land_types_desc_$lang,
                    d.level_1_desc_$lang, h.list_1_desc_$lang,l.usage_main_catg_desc_$lang,
                    m.usage_sub_catg_desc_$lang,a.prop_rate
                    from ngdrstab_mst_rate a
                    inner join ngdrstab_conf_admblock7_village_mapping b on b.village_id = a.village_id	
                    inner join ngdrstab_mst_developed_land_types c on c.developed_land_types_id = a.developed_land_types_id
                    inner join ngdrstab_mst_unit unit on unit.unit_id=a.prop_unit
			left join ngdrstab_conf_admblock3_district dist on dist.district_id=a.district_id
                    left outer join ngdrstab_mst_location_levels_1_property d on d.level_1_id = a.level1_id
			left join ngdrstab_conf_admblock5_taluka tal on tal.taluka_id=a.taluka_id
                    left outer join ngdrstab_mst_loc_level_1_prop_list h on h.prop_level1_list_id = a.level1_list_id 
                    inner join ngdrstab_mst_usage_main_category l on l.usage_main_catg_id = a.usage_main_catg_id
                    left outer join ngdrstab_mst_usage_sub_category m on m.usage_sub_catg_id = a.usage_sub_catg_id
                    where  a.finyear_id=$fyear and  a.taluka_id=$talid and a.district_id=$distid");

                            if ($result) {
                                $html_body = "<tr>"
                                        . "<th style='text-align:center;'>Sr.No.</th>"
                                        . "<th style='text-align:center;'>Village Name</th>"
                                        . "<th style='text-align:center;'>Developed Land Type</th>"
                                        . "<th style='text-align:center;'>Level 1 Name</th>"
                                        . "<th style='text-align:center;'>Level List 1 Name</th>"
                                        . "<th style='text-align:center;'>Usage Main Category</th>"
                                        . "<th style='text-align:center;'>Usage Sub Category</th>"
                                        . "<th style='text-align:center;'>Property Rate</th>"
                                        . "<th style='text-align:center;'>Unit</th>"
                                        . "<th style='text-align:center;'>Segment No</th>"
                                        . "</tr>";
                                $i = 1;
                                foreach ($result as $rs) {
                                    $html_body .= "<tr>"
                                            . "<td style='text-align:center;'>" . $i . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['village_name_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['developed_land_types_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['level_1_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . substr($rs[0]['list_1_desc_' . $lang], 0, 50) . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['usage_main_catg_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['usage_sub_catg_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['prop_rate'] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['unit_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['segment_no'] . "</td>"
                                            . "</tr>";
                                    $i++;
                                }

                                $html = "<style>th{font-size:12px;} td{font-size:12px;align:center; padding:5px;}</style>"
                                        . "<html><body>"
                                        . "<h1 align=center>" . $rpt_title . "</h1>"
                                        . "<table align='center' style='border:0; width:50%'><tr style='border:0;'><td align=center style='border:0; font-weight: bold;'> District: " . $distname . "</td><td align=center style='border:0; font-weight: bold;'> Taluka: " . $talname . "</td></tr></table> "
                                        . "<h6 align='center'>Report Date:" . date('d-m-Y') . "</h6>"
                                        . "<table width=100% align='center'>";
                                $html .= $html_body;
                            } else {
                                $this->Session->setFlash("No Record Found");
                                $this->redirect(array('controller' => 'Reports', 'action' => 'ratereport'));
                            }
                        } else {
                            $result = $this->User->query("select  a.*,unit.unit_desc_$lang,b.village_name_$lang ,c.developed_land_types_desc_$lang,
                    d.level_1_desc_$lang, h.list_1_desc_$lang,l.usage_main_catg_desc_$lang,m.usage_sub_catg_desc_$lang,a.prop_rate
                    from ngdrstab_mst_rate a
                    left outer join ngdrstab_conf_admblock7_village_mapping b on b.village_id = a.village_id	
                    left outer join ngdrstab_mst_developed_land_types c on c.developed_land_types_id = a.developed_land_types_id
                    left outer join ngdrstab_mst_location_levels_1_property d on d.level_1_id = a.level1_id
                    left join ngdrstab_conf_admblock3_district dist on dist.district_id=a.district_id
                    left join ngdrstab_conf_admblock5_taluka tal on tal.taluka_id=a.taluka_id
                    left outer join ngdrstab_mst_loc_level_1_prop_list h on h.prop_level1_list_id = a.level1_list_id 
                    left outer join ngdrstab_mst_usage_main_category l on l.usage_main_catg_id = a.usage_main_catg_id
                    left outer join ngdrstab_mst_usage_sub_category m on m.usage_sub_catg_id = a.usage_sub_catg_id
                    left outer join ngdrstab_mst_unit unit on unit.unit_id=a.prop_unit
                    where a.finyear_id=$fyear and a.village_id = $villageid and a.district_id=$distid and a.taluka_id=$talid order by b.village_name_$lang asc");
//                     pr($result);exit;

                            if ($result) {
                                $html_body = "<tr>"
                                        . "<th>Sr.No.</th>"
                                        . "<th style='text-align:center;'>Developed Land Type</th>"
                                        . "<th style='text-align:center;'>Level 1 Name</th>"
                                        . "<th style='text-align:center;'>Level List 1 Name</th>"
                                        . "<th style='text-align:center;'>Usage Main Category</th>"
                                        . "<th style='text-align:center;'>Usage Sub Category</th>"
                                        . "<th style='text-align:center;'>Property Rate</th>"
                                        . "<th style='text-align:center;'>Unit</th>"
                                        . "<th style='text-align:center;'>Segment No</th>"
                                        . "</tr>";
                                $i = 1;
                                foreach ($result as $rs) {

                                    $html_body .= "<tr>"
                                            . "<td>" . $i . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['developed_land_types_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['level_1_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['list_1_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['usage_main_catg_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['usage_sub_catg_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['prop_rate'] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['unit_desc_' . $lang] . "</td>"
                                            . "<td style='text-align:center;'>" . $rs[0]['segment_no'] . "</td>"
                                            . "</tr>";
                                    $i++;
                                }

                                $html = "<style>th{font-size:12px;} td{font-size:12px;align:center; padding:5px;}</style>"
                                        . "<html><body>"
                                        . "<h1 align=center>" . $rpt_title . "</h1>"
                                        . "<table align='center' style='border:0; width:50%'><tr style='border:0;'><td align=center style='border:0; font-weight: bold;'> District: " . $distname . "</td><td align=center style='border:0; font-weight: bold;'> Taluka: " . $talname . "</td><td align=center style='border:0; font-weight: bold;'> Village: " . $vilname . "</td></tr></table> "
                                        . "<h6 align='center'>Report Date:" . date('d-m-Y') . "</h6>"
                                        . "<table width=100% align='center'>";
                                $html .= $html_body;
                            } else {
                                $this->Session->setFlash("No Record Found");
                                $this->redirect(array('controller' => 'Reports', 'action' => 'ratereport'));
                            }
                        }
                        $html .= "</table></body></html>";

                        if ($reporttype == 'p') {
                            $this->create_pdf($html, $rpt_title, 'A4-L', 'Rate');
                        } else {
                            $this->create_excel($html, 'rate_report');
                        }
                    }
                    if ($_POST['actiontype'] == 2) {
                        $this->redirect(array('controller' => 'Reports', 'action' => 'ratereport'));
                    }
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash(
                    __('Record Cannot be displayed. Error :' . $ex->getMessage())
            );
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function ratereportchange() {
        try {
            $this->loadModel('State');
            $this->loadModel('User');

            $this->set('actiontypeval', NULL);
            $this->set('hfdist', NULL);
            $this->set('hftal', NULL);
            $this->set('hfvil', NULL);

            $language = $this->Session->read('sess_langauge');
            $this->set('language', $language);
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $this->set('lang', $lang);

            $this->set('finyear', ClassRegistry::init('finyear')->find('list', array('fields' => array('finyear_id', 'finyear_desc'), 'order' => array('finyear_desc' => 'ASC'))));

            $this->set('District', ClassRegistry::init('District')->find('list', array('fields' => array('district_id', 'district_name_' . $language), 'conditions' => array('state_id' => $stateid), 'order' => array('district_name_' . $language => 'ASC'))));
            $this->set('village', NULL);
            $this->set('taluka', NULL);

            $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json');
            $json = $file->read(true, 'r');
            $json2array = json_decode($json, TRUE);
            $fieldlist = array();
            $fielderrorarray = array();

            $fieldlist['finyear_id']['select'] = 'is_select_req';
            $fieldlist['district_id']['select'] = 'is_select_req';
            $fieldlist['taluka_id']['select'] = 'is_emptyornumallow';
            $fieldlist['village_id']['select'] = 'is_emptyornumallow';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));
            if ($this->request->is('post')) {
//                $this->check_csrf_token($this->request->data['ratereport']['csrftoken']);
                // $this->request->data['ratereport'] = $this->istrim($this->request->data['ratereport']);
                //  pr($this->request->data['divisionnew']);exit;
                $errarr = $this->validatedata($this->request->data['ratereportchange'], $fieldlist);
                $fyear = $this->request->data['ratereportchange']['finyear_id'];
//                pr($fyear);exit;
//                pr($this->request->data);exit;
//                $flag = 0;
//                foreach ($errarr as $dd) {
//                    if ($dd != "") {
//                        $flag = 1;
//                    }
//                }
//                if ($flag == 1) {
//                    $this->set("errarr", $errarr);
//                } else {

                if ($this->ValidationError($errarr)) {
                    $this->set('taluka', $json2array['taluka']);
                    $this->set('village', $json2array['village']);
// pr($json2array['village']);exit;
                    $this->set('actiontypeval', $_POST['actiontype']);
                    $reporttype = $_POST['report'];

//                $this->set('hfid', $_POST['hfid']);
//               pr($this->request->data);exit;
                    if ($_POST['actiontype'] == '1') {
                        $distid = $this->request->data['ratereportchange']['district_id'];
                        $villageid = $this->request->data['ratereportchange']['village_id'];
                        $talid = $this->request->data['ratereportchange']['taluka_id'];
                        $distname = $_POST["hfdist"];
                        $talname = $_POST["hftal"];
                        $vilname = $_POST["hfvil"];
                        $html = '';
                        $rpt_title = "Rate Report";
//pr( $this->request->data);exit;


                        $sql = "select  a.*,unit.unit_desc_$lang,b.village_name_$lang ,c.developed_land_types_desc_$lang,
                    d.level_1_desc_$lang, h.list_1_desc_$lang,l.usage_main_catg_desc_$lang,m.usage_sub_catg_desc_$lang,a.prop_rate,dist.district_name_$lang,tal.taluka_name_$lang
                    from ngdrstab_mst_rate a
                    left outer join ngdrstab_conf_admblock7_village_mapping b on b.village_id = a.village_id	
                    left outer join ngdrstab_mst_developed_land_types c on c.developed_land_types_id = a.developed_land_types_id
                    left outer join ngdrstab_mst_location_levels_1_property d on d.level_1_id = a.level1_id
                    left join ngdrstab_conf_admblock3_district dist on dist.district_id=a.district_id
                    left join ngdrstab_conf_admblock5_taluka tal on tal.taluka_id=a.taluka_id
                    left outer join ngdrstab_mst_loc_level_1_prop_list h on h.prop_level1_list_id = a.level1_list_id 
                    left outer join ngdrstab_mst_usage_main_category l on l.usage_main_catg_id = a.usage_main_catg_id
                    left outer join ngdrstab_mst_usage_sub_category m on m.usage_sub_catg_id = a.usage_sub_catg_id
                    left outer join ngdrstab_mst_unit unit on unit.unit_id=a.prop_unit
                    where a.finyear_id=$fyear and a.add_flag='Y'";

//                        pr($sql);exit;
                        if (is_numeric($distid)) {
                            $sql .= " and a.district_id =" . $distid;
                        }
                        if (is_numeric($talid)) {
                            $sql .= " and a.taluka_id =" . $talid;
                        }
                        if (is_numeric($villageid)) {
                            $sql .= " and a.village_id =" . $villageid;
                        }
                        $sql .= " order by b.village_name_$lang asc";

                        //  pr($sql);exit;
                        $result = $this->User->query($sql);

                        if ($result) {
                            $html_body = "<tr>"
                                    . "<th style='text-align:center;'>Sr.No.</th>"
                                    . "<th style='text-align:center;'>District Name</th>"
                                    . "<th style='text-align:center;'>Taluka Name</th>"
                                    . "<th style='text-align:center;'>Village Name</th>"
                                    . "<th style='text-align:center;'>Developed Land Type</th>"
                                    . "<th style='text-align:center;'>Level 1 Name</th>"
                                    . "<th style='text-align:center;'>Level List 1 Name</th>"
                                    . "<th style='text-align:center;'>Usage Main Category</th>"
                                    . "<th style='text-align:center;'>Usage Sub Category</th>"
                                    . "<th style='text-align:center;'>Property Rate</th>"
                                    . "<th style='text-align:center;'>Unit</th>"
                                    . "<th style='text-align:center;'>Segment No</th>"
                                    . "</tr>";
                            $i = 1;
                            foreach ($result as $rs) {
                                $talname = $rs[0]['taluka_name_' . $lang];
                                $vilname = $rs[0]['village_name_' . $lang];
                                $html_body .= "<tr>"
                                        . "<td style='text-align:center;'>" . $i . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['district_name_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['taluka_name_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['village_name_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['developed_land_types_desc_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['level_1_desc_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['list_1_desc_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['usage_main_catg_desc_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['usage_sub_catg_desc_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['prop_rate'] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['unit_desc_' . $lang] . "</td>"
                                        . "<td style='text-align:center;'>" . $rs[0]['segment_no'] . "</td>"
                                        . "</tr>";
                                $i++;
                            }

                            $html = "<style>th{font-size:12px;} td{font-size:12px;align:center; padding:5px;}</style>"
                                    . "<html><body>"
                                    . "<h1 align=center>" . $rpt_title . "</h1>"
                                    . "<table align='center' style='border:0; width:50%'><tr style='border:0;'>";
                            if (is_numeric($distid)) {
                                $html .= "<td align=center style='border:0; font-weight: bold;'> District: " . $distname . "</td>";
                            }
                            if (is_numeric($distid) && is_numeric($talid)) {
                                $html .= "<td align=center style='border:0; font-weight: bold;'> Taluka: " . $talname . "</td>";
                            }

                            if (is_numeric($distid) && is_numeric($talid) && is_numeric($villageid)) {
                                $html .= "<td align=center style='border:0; font-weight: bold;'> Village: " . $vilname . "</td>";
                            }


                            $html .= "</tr></table> "
                                    . "<h6 align='center'>Report Date:" . date('d-m-Y') . "</h6>"
                                    . "<table width=100% align='center'>";
                            $html .= $html_body;
                        } else {
                            $this->Session->setFlash("No Record Found");
                            $this->redirect(array('controller' => 'Reports', 'action' => 'ratereportchange'));
                        }

                        $html .= "</table></body></html>";
                        //pr($html);exit;
                        if ($reporttype == 'p') {
                            $this->create_pdf($html, $rpt_title, 'A4-L', 'Rate');
                        } else {
                            $this->create_excel($html, 'rate_report');
                        }
                    }
                    if ($_POST['actiontype'] == 2) {
                        $this->redirect(array('controller' => 'Reports', 'action' => 'ratereportchange'));
                    }
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash(
                    __('Record Cannot be displayed. Error :' . $ex->getMessage())
            );
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_taluka_name() {
        try {
            $this->loadModel('damblkdpnd');
            $this->loadModel('taluka');
            $laug = $this->Session->read("sess_langauge");
            $this->set('laug', $laug);
            if (isset($this->request->data['district'])) {

                $district = $this->request->data['district'];
                $abc = ClassRegistry::init('damblkdpnd')->find('list', array('fields' => array('damblkdpnd.taluka_id'), 'conditions' => array('damblkdpnd.district_id' => array($district))));
                $talukaname = ClassRegistry::init('taluka')->find('list', array('fields' => array('taluka.taluka_id', 'taluka.taluka_name_en'), 'conditions' => array('taluka.taluka_id' => $abc), 'order' => array('taluka.taluka_name_en' => 'ASC')));

                $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json');
                $json = $file->read(true, 'r');
                $json2array = json_decode($json, TRUE);

                $json2array['taluka'] = $talukaname;
                $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json', true);
                $file->write(json_encode($json2array));

                echo json_encode($talukaname);
                exit;
            } else {
                header('Location:../cterror.html');
                exit;
            }
        } catch (Exception $e) {
            $this->redirect(array('action' => 'error404'));
        }
    }

    public function get_village_name() {
        //echo 1;exit;
        try {
            $this->loadModel('damblkdpnd');
            $laug = $this->Session->read("sess_langauge");
            $this->set('laug', $laug);

            if (isset($this->request->data['taluka'])) {

                $taluka = $this->request->data['taluka'];

                $abc = ClassRegistry::init('damblkdpnd')->find('list', array('fields' => array('damblkdpnd.village_id'), 'conditions' => array('damblkdpnd.taluka_id' => array($taluka))));
                $villagename = ClassRegistry::init('damblkdpnd')->find('list', array('fields' => array('damblkdpnd.village_id', 'damblkdpnd.village_name_en'), 'conditions' => array('damblkdpnd.village_id' => $abc), 'order' => array('damblkdpnd.village_name_en' => 'ASC')));

                $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json');
                $json = $file->read(true, 'r');
                $json2array = json_decode($json, TRUE);

                $json2array['village'] = $villagename;
                $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json', true);
                $file->write(json_encode($json2array));

                echo json_encode($villagename);
                exit;
            } else {
                header('Location:../cterror.html');
                exit;
            }
        } catch (Exception $e) {
            $this->redirect(array('action' => 'error404'));
        }
    }

    //==================================  Normal Village Rate Report End ===============================================//     
//--------------*-----------*----------------*----------------*---// Pre- Registration Docket(Annexure-11) \\--*---------*---------*------------*-----------*-----------*--------------*-----


    public function pre_doc_summary_report_30($doc_token_no, $flag = 'V', $lang = 'en', $doc_lang = 'en') {
        try {

            $this->autoRender = FALSE;
            $state_id = $this->Auth->user('state_id');
//           $doc_token_no = base64_decode($doc_token_no);

            if (is_integer((int) $doc_token_no) && is_numeric($doc_token_no)) {
                array_map(array($this, 'loadModel'), array('ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details', 'conf_reg_bool_info'));

                $rec_exist = $this->genernalinfoentry->find('first', array('conditions' => array('token_no' => $doc_token_no)));

                if (!empty($rec_exist)) {
                    $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
                    $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 3)));
                    $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
                    // $lang='en';
                    $currency_sign = '&#8377;';

                    $officename = ClassRegistry::init('genernalinfoentry')->find('all', array('fields' => array('off.office_name_en'),
                        'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=genernalinfoentry.office_id'))), 'conditions' => array('genernalinfoentry.token_no=' . $doc_token_no)));
                    if (!empty($officename)) {
                        $app_details = $this->genernalinfoentry->query('select a.interval_id,a.slot_no,t.slot_time_minute,a.sheduled_time ,a.appointment_date from ngdrstab_mst_timeslot t,'
                                . 'ngdrstab_mst_office o,ngdrstab_trn_appointment_details a where o.office_id=a.office_id '
                                . 'and o.slot_id=t.slot_id and a.token_no=?', array($doc_token_no));
                        // pr($app_details);exit;
                        if (!empty($app_details)) {

                            $total_min = ($app_details[0][0]['slot_time_minute'] * $app_details[0][0]['slot_no']) - $app_details[0][0]['slot_time_minute'];
                            $app_date = date('d-M-Y', strtotime($app_details[0][0]['appointment_date']));
                            if ($total_min >= 60) {
                                $time = explode('-', $app_details[0][0]['sheduled_time']);
                                if (!empty($time)) {
                                    $subtime = explode(':', $time[1]);
                                    $app_time = $time[1];
                                }
                            } else {
                                $time = explode('-', $app_details[0][0]['sheduled_time']);
                                if (!empty($time)) {
                                    $subtime = explode(':', $time[0]);
                                    $app_time = $subtime[0] . ':' . $total_min;
                                }
                            }
                        }

                        $off = $officename[0]['off']['office_name_en'];
                    } else {
                        $off = NULL;
                    }
                    $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
                    if ($state_id == 20) {

                        $totstamduty = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id=2 and article_id NOT IN (9998)");

                        //pr($totstamduty);exit;

                        $exmpstamduty = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id=2 and article_id IN (9998)");

                        $exmpwithoutsd = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id!=2 and article_id IN (9998)");
                        $paidsd = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id=9999036 and article_id NOT IN (9998)");

                        if (!empty($paidsd)) {
                            $paidsd = $paidsd[0][0]['final_value'];
                        } else {
                            $paidsd = 0;
                        }

                        $totwithoutsd = 0;
                        foreach ($exmpwithoutsd as $sd) {
                            $totwithoutsd = $totwithoutsd + $sd[0]['final_value'];
                        }



                        if (!empty($totstamduty) && empty($exmpstamduty)) {
                            $stamduty = $totstamduty[0][0]['final_value'];
                        } else if (!empty($totstamduty) && !empty($exmpstamduty)) {
                            $stamduty = $totstamduty[0][0]['final_value'] - $exmpstamduty[0][0]['final_value'];
                        } else {
                            $stamduty = 0;
                        }
                    }

                    //Common Information
                    $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));



                    foreach ($rptPropDtl as $prpt) {

                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }

                        $property_id = $prpt['property_details_entry']['property_id'];
                    }
                    $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value
                                                                from ngdrstab_trn_parameter as param
                                                                JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                                                                where 
                                                                param.token_id=? and param.property_id=?", array($doc_token_no, @$property_id));

//                     pr($serveyno);exit;

                    $imagedata = "img/30_Tripura.png";
                    $image = file_get_contents($imagedata);
                    $image_codes = base64_encode($image);
                    if ($flag == 'V') {
                        $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='70px' width='70px' /> ";
                    } else {
                        $img1 = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                    }



                    $design = "<table  width=100%>"
                            //."<tr><td align=left>" . $img1 . "</td></tr>"
                            . "<tr><td colspan=2 style='text-align:center;'> <h3>" . $rptlabels[86] . "</h3></td></tr>"
                            . "<tr style='border-bottom:1pt solid black;'><td> <b> Date :- </b>" . date('d-m-Y h:s a') . "</td> "
                            . " <td style='text-align:right;'> <br/><b> Office Name :- </b>" . $off . " <br/> <b> Token No:-  </b> " . $doc_token_no . "</td></tr>"
                            . "</table>";

                    if (isset($app_date) && isset($app_time)) {
                        $design .= "<table width=95%><tr><td style='text-align:left;'><b> Appoinment</b> :- $app_date  Time:- $app_time </td></tr></table><br>";
                    }

                    //Sonam changes for display extra no. of pages in pre-registration docket for Jharkhand
                    $regconf = $this->conf_reg_bool_info->find("all", array('conditions' => array('reginfo_id' => 114)));
                    if (!empty($regconf)) {
                        if ($regconf[0]['conf_reg_bool_info']['info_value'] == 'Y') {
                            $extra_pages = $this->number_of_pages($doc_token_no);
                            $citizen_pages = $rptData[0]['genernalinfoentry']['no_of_pages'];
                            $total_pages = $citizen_pages + $extra_pages + 4;
                        } else {
                            $total_pages = $rptData[0]['genernalinfoentry']['no_of_pages'];
                        }
                    } else {
                        $total_pages = $rptData[0]['genernalinfoentry']['no_of_pages'];
                    }


                    //Sonam changes for display extra no. of pages in pre-registration docket for Jharkhand

                    if (!empty($rptData)) {
                        $rptData = $rptData[0];
                        if ($state_id != 20) {


                            $design .= "<style> td{padding:3px;} table{border-collapse: collapse;'}</style>"
                                    . "<table width=50% border=1 align=center>"
                                    . "<tr> <td> " . $rptlabels[88] . " </td> <td width=60%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>"
                                    . "<tr> <td>  " . $rptlabels[89] . " </td> <td>" . (($rptData['genernalinfoentry']['exec_date']) ? date('d-M-Y', strtotime($rptData['genernalinfoentry']['exec_date'])) : '-') . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[90] . " </td> <td>" . $total_pages . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[91] . " </td> <td>$currency_sign" . $this->valuation->format_money_india(number_format((float) $rptData['sd']['final_amt'], 2, '.', '')) . ".</td></tr>"
                                    . "</table>"
                                    . "<hr style='color: #FA9;height: 5px;'/>";
                        } else {
                            //$totstamduty, $totstamduty[0][0]['final_value']= Stamp Duty, $rptData['sd']['final_amt']= Grand Total with all fees without exemption.
                            // $totwithoutsd= Exemption without stamp duty.
                            if (!empty($totstamduty)) {
                                $total1 = $rptData['sd']['final_amt'] - $totstamduty[0][0]['final_value'] - $paidsd;
                                $totalfee = $total1 - $totwithoutsd;
                            } else {
                                $total1 = $rptData['sd']['final_amt'] - $paidsd;
                                $totalfee = $total1 - $totwithoutsd;
                            }

                            $design .= "<style> td{padding:3px;} table{border-collapse: collapse;'}</style>"
                                    . "<table width=50% border=1 align=center>"
                                    . "<tr> <td> " . $rptlabels[88] . " </td> <td width=60%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>"
                                    . "<tr> <td>  " . $rptlabels[89] . " </td> <td>" . (($rptData['genernalinfoentry']['exec_date']) ? date('d-M-Y', strtotime($rptData['genernalinfoentry']['exec_date'])) : '-') . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[90] . " </td> <td>" . $total_pages . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[425] . " </td> <td>" . $stamduty . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[426] . " </td> <td>" . $paidsd . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[91] . " </td> <td>$currency_sign" . $this->valuation->format_money_india(number_format((float) $totalfee, 2, '.', '')) . ".</td></tr>"
                                    . "</table>"
                                    . "<hr style='color: #FA9;height: 5px;'/>";
                        }
                    }

                    $sroactiondata = $this->genernalinfoentry->query("select sro_action_flag, sro_remark from ngdrstab_trn_generalinformation where token_no=?", array($doc_token_no));
                    if (!empty($sroactiondata)) {

                        if ($sroactiondata[0][0]['sro_action_flag'] != 'N') {
                            if ($sroactiondata[0][0]['sro_action_flag'] != null) {
                                if ($sroactiondata[0][0]['sro_action_flag'] == 'A') {
                                    $sroaction = 'Accepted';
                                } else {
                                    $sroaction = 'Rejected';
                                }
                                $design .= "<style> td{padding:3px;} table{border-collapse: collapse;'}</style>"
                                        . "<table width=50% border=1 align=center>"
                                        . "<tr><td> SRO Action</td> <td>" . $sroaction . "</td> </tr>"
                                        . "<tr><td> SRO Remark</td> <td>" . $sroactiondata[0][0]['sro_remark'] . "</td> </tr>"
                                        . "</table>"
                                        . "<hr style='color: #FA9;height: 5px;'/>";
                            }
                        }
                    }


                    //General Info Details Article Dependant Fields
                    $artileData = ClassRegistry::init('conf_article_feerule_items')->find('all', array('fields' => array(' item.fee_item_id', 'item.fee_param_code', 'value.articledepfield_value', 'item.fee_item_desc_' . $lang, 'item.list_flag'), 'order' => 'item.display_order',
                        'conditions' => array('item.gen_dis_flag' => 'Y', 'value.articledepfield_value is NOT NULL', 'value.articledepfield_value !=' => ''),
                        'joins' => array(
                            array('table' => 'ngdrstab_mst_article_fee_items', 'alias' => 'item', 'conditions' => array('item.fee_item_id=conf_article_feerule_items.fee_item_id')),
                            array('table' => 'ngdrstab_trn_articledepfields', 'alias' => 'value', 'conditions' => array('value.articledepfield_id=conf_article_feerule_items.fee_param_code and value.article_id=conf_article_feerule_items.article_id and value.token_no=' . $doc_token_no))
                        )
                    ));
                    if ($artileData) {
                        $design .= "<table align=center width=95% border=1>";
                        foreach ($artileData as $idata) {

                            if ($idata['item']['list_flag'] == 'Y') {
                                $listname = ClassRegistry::init('conf_article_feerule_items')->query("select fee_item_list_desc_$lang from ngdrstab_conf_article_fee_items_list where  fee_item_id=? and fee_item_list_id=?", array($idata['item']['fee_item_id'], $idata['value']['articledepfield_value']));
                                if (!empty($listname)) {
                                    $listnameval = $listname[0][0]['fee_item_list_desc_' . $lang];
                                } else {
                                    $listnameval = (($idata['value']['articledepfield_value']) ? $idata['value']['articledepfield_value'] : '-');
                                }
                            } else {
                                $listnameval = (($idata['value']['articledepfield_value']) ? $idata['value']['articledepfield_value'] : '-');
                            }

//                               pr($listname);exit;
                            $design .= "<tr>"
                                    . "<td width=30%>" . $idata['item']['fee_item_desc_' . $lang] . "</td>"
                                    . "<td>" . $listnameval . "</td>"
                                    . "</tr>";
                        }

                        $design .= "</table><br>";
                    }
                    $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
                    if (isset($rptData[0]['article']['article_id']) && $rptData[0]['article']['article_id'] == 63) {
                        $party_party = $this->party_entry->get_party_entry($lang, $doc_token_no);
                        if (!empty($party_party)) {
                            $design .= "<table>"
                                    . "<tr>"
                                    . "<td width=30%>" . $rptlabels[105] . " :- </td> <td>" . $party_party[0]['village']['village_name_' . $lang] . "</td>"
                                    . "</tr>"
                                    . "</table>";
                        }
                    }

                    $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));

                    if ($rptPropDtl) {
                        foreach ($rptPropDtl as $prpt) {
                            $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
                            $property_address = array();
                            if ($tmp_property_address) {
                                foreach ($tmp_property_address as $tmp_property_address) {
                                    array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                                }
                            }
                            $prop_boundaries = '<b>Property Boundaries</b> <br>East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];

                            $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
                            $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';

                            $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                            $tmp_prop_area = array();
                            foreach ($prop_area as $parea) {
                                if ($parea['item']['is_list_field_flag'] == 'Y')
                                    $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                                array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                            }



                            $design .= 'Property Id: <b>' . $prpt['property_details_entry']['property_id'] . "</b><table  width=95% border=1 align=center>"
                                    . "<tr> <td width=30%>" . $rptlabels[105] . " </td> <td>" . $prpt['village']['village_name_' . $lang] . ", " . $prpt['taluka']['taluka_name_' . $lang] . ", " . $prpt['district']['district_name_' . $lang] . "</td> </tr>"
                                    . "<tr> <td> " . $rptlabels[98] . "</td> <td>" . $prop_boundaries . " </td> </tr>"
                                    . "<tr> <td> " . $rptlabels[99] . "</td> <td>" . implode(', ', $tmp_prop_area) . "</td></tr>";
                            foreach ($serveyno as $attribute) {
                                $design .= "<tr> <td>" . $rptlabels[100] . "</td> <td>" . implode(', ', $property_address) . " <b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> - " . $attribute[0]['paramter_value'] . "</td> </tr>";
                            }
                            $design .= "<tr> <td>" . $rptlabels[101] . " </td> <td>" . $prpt_valuation . "</td></tr>"
                                    . "<tr> <td> " . $rptlabels[102] . " </td> <td>" . $cons_amt . "</td> </tr>"
                                    . "</table> <hr/>";

                            //----------------------------------------------------for party Details----------------------------------------------------------------------
                            $design .= $this->get_party_details_pre_reg_doc($lang, $doc_token_no);
                        }
                    } else {
                        $design .= $this->get_party_details_pre_reg_doc($lang, $doc_token_no);
                    }

                    //----------------------------------------------------------------for Witness----------------------------------------------------------------------
                    $witness = array();
                    $witness_detail = $this->witness->get_witness($lang, $doc_token_no);
//                  pr($witness_detail);
                    if ($witness_detail) {
                        foreach ($witness_detail as $wit) {
                            $tmp_witness_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $wit['witness']['witness_id'], $doc_token_no, '3', $doc_lang);
                            $witness_address = array();
                            foreach ($tmp_witness_address as $tmp_address) {
                                array_push($witness_address, $tmp_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }

                            $key = "";
                            $final_strv = (hex2bin(trim($wit['witness']['uid_no'])));
                            $dec = openssl_decrypt($final_strv, 'bf-ecb', $key, true);

                            if ($dec == NULL) {
                                $ad = '';
                            } else {
                                $ad = '<b>UID : </b>' . str_repeat("*", strlen($dec) - 4) . substr($dec, -4);
                            }

                            if ($wit['witness']['witness_full_name_' . $lang] == NULL) {
                                array_push($witness, '<b>Full Name:</b>' . $wit['saluation']['salutation_desc_' . $lang] . ' ' . $wit['witness']['fname_' . $lang] . ' ' . $wit['witness']['mname_' . $lang] . ' ' . $wit['witness']['lname_' . $lang] . ',<b> Father/Husband Name-</b>' . $wit['witness']['father_full_name_' . $lang] . ',<b>Address</b>:' . $wit['witness']['address_' . $lang] . ',<b>Gender:</b>' . $wit['gender']['gender_desc_' . $lang] . ',' . implode(',', $witness_address) . ',<b>Occupation:</b>' . $wit['occupation']['occupation_name_' . $lang] . ',' . $ad . '');
                            } else {
                                array_push($witness, '<b>Full Name:</b>' . $wit['saluation']['salutation_desc_' . $lang] . ' ' . $wit['witness']['witness_full_name_' . $lang] . ',<b> Father/Husband Name-</b>' . $wit['witness']['father_full_name_' . $lang], ', <b>Address:</b>' . $wit['witness']['address_' . $lang] . ',' . implode(',', $witness_address) . ',<b>Gender:</b>' . $wit['gender']['gender_desc_' . $lang] . ',' . $ad . '');
                            }
                        }
                        //Party,Withness Details //RE-display from witness table 14 sep 2020
                        $design .= '<table width=95% border=1 align=center>'
                                . "<tr> <td width=30%> " . $rptlabels[92] . "</td> <td>" . implode('<br>', $witness) . "</td> </tr>"
                                . "</table>"
                                . "<hr style='color: #FA9;height: 5px;'/>";
                    }
                    //----------------------------------------------------------------for Identification----------------------------------------------------------------------
                    $identification = array();
//        $prop_witness = $this->witness->get_witness($doc_lang, $doc_token_no);//not to use
                    $identifier_detail = $this->identification->get_identification($lang, $doc_token_no);
                    if ($identifier_detail) {
                        //pr($identifier_detail);
                        foreach ($identifier_detail as $identifier) {
                            $tmp_identifier_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $identifier['identification']['identification_id'], $doc_token_no, '5', $doc_lang);
                            $identifier_address = array();
                            foreach ($tmp_identifier_address as $tmp_address) {
                                array_push($identifier_address, $tmp_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }

                            $key = "";
                            $final_strv = (hex2bin(trim($identifier['identification']['uid_no'])));
                            $dec = openssl_decrypt($final_strv, 'bf-ecb', $key, true);

                            if ($dec == NULL) {
                                $ad = '';
                            } else {
                                $ad = '<b>UID : </b>' . str_repeat("*", strlen($dec) - 4) . substr($dec, -4);
                            }

                            if ($identifier['identification']['identification_full_name_' . $lang] == NULL) {
                                array_push($identification, '<b>' . $rptlabels[632] . ':</b>' . $identifier['saluation']['salutation_desc_' . $lang] . ' ' . $identifier['identification']['fname_' . $lang] . ' ' . $identifier['identification']['mname_' . $lang] . ' ' . $identifier['identification']['lname_' . $lang] . ',<b> ' . $rptlabels[633] . ':</b>' . $identifier['identification']['father_full_name_' . $lang] . ',<b>' . $rptlabels[634] . ':</b>:' . $identifier['identification']['address_' . $lang] . ',<b>' . $rptlabels[635] . ':</b>' . $identifier['gender']['gender_desc_' . $lang] . ',' . implode(',', $identifier_address) . ',' . $ad . ''); //<b>' . $rptlabels[636] . ':</b>' . $identifier['identification']['occupation_name_'. $lang] . ',
                            } else {
                                array_push($identification, '<b>' . $rptlabels[632] . ':</b>' . $identifier['saluation']['salutation_desc_' . $lang] . ' ' . $identifier['identification']['identification_full_name_' . $lang] . ',<b> ' . $rptlabels[633] . ':</b>' . $identifier['identification']['father_full_name_' . $lang], ', <b>' . $rptlabels[634] . ':</b>' . $identifier['identification']['address_' . $lang] . ',<b>' . $rptlabels[635] . ':</b>' . $identifier['gender']['gender_desc_' . $lang] . ',' . implode(',', $identifier_address) . ',' . $ad . '');
                            }
                        }
                        //Party,Withness Details
                        /*  $design .= '<table width=95% border=1 align=center>'
                          . "<tr> <td width=30%>" . $rptlabels[92] . "</td> <td>" . implode('<br>', $identification) . "</td> </tr>"//witness label
                          . "</table>"
                          . "<hr style='color: #FA9;height: 5px;'/>"; */
                    }


//goshvara
//                  ============================== Payment  =========================================
//                $design.=$this->requestAction(array('controller' => 'Reports', 'action' => 'rpt_reg_summary1', $doc_token_no, 'V'));
//                ==============================  Stamp Duty =========================================
                    $design .= $this->requestAction(array('controller' => 'Fees', 'action' => 'view_sd_calc', $doc_token_no, 0, $lang));
                    $design .= $this->requestAction(array('controller' => 'Fees', 'action' => 'view_exemption', $doc_token_no, $lang));

//                    $design.="<br/><br/><table width=95% border=1 align=center>"
//                            . "<tr><td colspan=2> " . $rptlabels[95] . " </td> </tr>"
//                            . "<tr><td colspan=2 style=height:25px;></td></tr>"
//                            . "<tr><td align=center> <b>(" . $rptlabels[96] . " ) </b></td> <td align=center><b>(" . $rptlabels[97] . ")</b></td> </tr>"
//                            . "</table>";
                    //officer sign
                    $design .= "<br><br>";
                    $design .= "<table style=' border: 1px solid black;' width='100%'>"
                            . "<tr><td colspan=3 style='text-align:center;'><h3><strong><u><em>Declaration To Be Made In The Data Entry Summary Sheet Print Out</em></u></strong></h3></td></tr>"
                            . "<tr><td colspan=3 style='padding-left:5px; padding-right:5px;' align='justify'>All the entries made, have been verified by me and are found same as the entries of the document presented.</td></tr>"
                            . "<tr><td colspan=3 style='padding-left:5px; padding-right:5px;' align='justify'>Disclaimer : | hereby declare that all the contents of uploaded document and the original document are exactly same, "
                            . "and all the information provided by me are true to itself. The detail of property's holding number has been verified by meat the time of entry "
                            . "through alert generated by the system. | am satisfied with the verification and hence proceeding further for registration after seeing the alert.</td></tr>"
                            . "<tr height='80px'>"
                            . "<td valign='bottom'><b>Deed Writer / Advocate </td>"
                            . "<td valign='bottom'><b> Vendee/Claimant : </b> </td>"
                            . "<td valign='bottom'><b>Vendor / Executant</b></td>"
                            . "</tr>"
                            . "</table>";

                    $design .= "<br/><br/><table width=95% border=0 align=center>"
                            . "<tr><td colspan=2 style=height:25px;></td></tr>"
                            . "<tr><td style='text-align:right;'> <b>( Party Signature ) </b></td></tr>"
                            . "</table>";
                    if ($flag == 'D') {
                        $this->create_pdf($design, "doc_" . $doc_token_no, 'A4-P');
                    } else if ($flag == 'V') {
                        return $design;
                    } else {
                        return 'invalid input';
                    }
                } else {
                    return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
                }
            } else {
                return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function pre_doc_summary_report($doc_token_no, $flag = 'V', $lang = 'en', $doc_lang = 'en') {
        try {
//             pr('hi');exit;
            $this->autoRender = FALSE;
            $state_id = $this->Auth->user('state_id');
//            $doc_token_no = base64_decode($doc_token_no);

            if (is_integer((int) $doc_token_no) && is_numeric($doc_token_no)) {
                array_map(array($this, 'loadModel'), array('ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details', 'conf_reg_bool_info'));

                $rec_exist = $this->genernalinfoentry->find('first', array('conditions' => array('token_no' => $doc_token_no)));

                if (!empty($rec_exist)) {
                    $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
                    $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 3)));
                    $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
                    // $lang='en';
                    $currency_sign = '&#8377;';

                    $officename = ClassRegistry::init('genernalinfoentry')->find('all', array('fields' => array('off.office_name_en'),
                        'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=genernalinfoentry.office_id'))), 'conditions' => array('genernalinfoentry.token_no=' . $doc_token_no)));
                    if (!empty($officename)) {
                        $app_details = $this->genernalinfoentry->query('select a.interval_id,a.slot_no,t.slot_time_minute,a.sheduled_time ,a.appointment_date from ngdrstab_mst_timeslot t,'
                                . 'ngdrstab_mst_office o,ngdrstab_trn_appointment_details a where o.office_id=a.office_id '
                                . 'and o.slot_id=t.slot_id and a.token_no=?', array($doc_token_no));
                        // pr($app_details);exit;
                        if (!empty($app_details)) {

                            $total_min = ($app_details[0][0]['slot_time_minute'] * $app_details[0][0]['slot_no']) - $app_details[0][0]['slot_time_minute'];
                            $app_date = date('d-M-Y', strtotime($app_details[0][0]['appointment_date']));
                            if ($total_min >= 60) {
                                $time = explode('-', $app_details[0][0]['sheduled_time']);
                                if (!empty($time)) {
                                    $subtime = explode(':', $time[1]);
                                    $app_time = $time[1];
                                }
                            } else {
                                $time = explode('-', $app_details[0][0]['sheduled_time']);
                                if (!empty($time)) {
                                    $subtime = explode(':', $time[0]);
                                    $app_time = $subtime[0] . ':' . $total_min;
                                }
                            }
                        }

                        $off = $officename[0]['off']['office_name_en'];
                    } else {
                        $off = NULL;
                    }
                    $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
                    
                    if ($state_id == 20) {

                        $totstamduty = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id=2 and article_id NOT IN (9998)");

                        //pr($totstamduty);exit;

                        $exmpstamduty = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id=2 and article_id IN (9998)");

                        $exmpwithoutsd = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id!=2 and article_id IN (9998)");
                        $paidsd = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id=9999036 and article_id NOT IN (9998)");

                        if (!empty($paidsd)) {
                            $paidsd = $paidsd[0][0]['final_value'];
                        } else {
                            $paidsd = 0;
                        }

                        $totwithoutsd = 0;
                        foreach ($exmpwithoutsd as $sd) {
                            $totwithoutsd = $totwithoutsd + $sd[0]['final_value'];
                        }

                        if (!empty($totstamduty) && empty($exmpstamduty)) {
                            $stamduty = $totstamduty[0][0]['final_value'];
                        } else if (!empty($totstamduty) && !empty($exmpstamduty)) {
                            $stamduty = $totstamduty[0][0]['final_value'] - $exmpstamduty[0][0]['final_value'];
                        } else {
                            $stamduty = 0;
                        }
                    }

                    //Common Information
                    $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));



                    foreach ($rptPropDtl as $prpt) {

                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }

                        $property_id = $prpt['property_details_entry']['property_id'];
                    }
                    $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value
                                                                from ngdrstab_trn_parameter as param
                                                                JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                                                                where 
                                                                param.token_id=? and param.property_id=?", array($doc_token_no, @$property_id));

//                     pr($serveyno);exit;

                    $imagedata = "img/JH_logo.png";
                    $image = file_get_contents($imagedata);
                    $image_codes = base64_encode($image);
                    if ($flag == 'V') {
                        $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='70px' width='70px' /> ";
                    } else {
                        $img1 = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                    }



                    $design = "<table  width=100%>"
                            //. "<tr><td align=left>" . $img1 . "</td></tr>"
                            . "<tr><td colspan=2 style='text-align:center;'> <h3>" . $rptlabels[86] . "</h3></td></tr>"
                            . "<tr style='border-bottom:1pt solid black;'><td> <b> Date :- </b>" . date('d-m-Y h:s a') . "</td> "
                            . " <td style='text-align:right;'> <br/><b> Office Name :- </b>" . $off . " <br/> <b> Token No:-  </b> " . $doc_token_no . "</td></tr>"
                            . "</table>";

                    if (isset($app_date) && isset($app_time)) {
                        $design .= "<table width=95%><tr><td style='text-align:left;'><b> Appoinment</b> :- $app_date  Time:- $app_time </td></tr></table><br>";
                    }

                    //Sonam changes for display extra no. of pages in pre-registration docket for Jharkhand
                    $regconf = $this->conf_reg_bool_info->find("all", array('conditions' => array('reginfo_id' => 114)));
                    $total_pages = 0;
                    if (!empty($regconf)) {
                        if ($regconf[0]['conf_reg_bool_info']['info_value'] == 'Y') {
                            $extra_pages = $this->number_of_pages($doc_token_no);
                            $citizen_pages = $rptData[0]['genernalinfoentry']['no_of_pages'];
                            $total_pages = $citizen_pages + $extra_pages + 4;
                        } else {
                            $total_pages = $rptData[0]['genernalinfoentry']['no_of_pages'];
                        }
                    } else {
                        $total_pages = $rptData[0]['genernalinfoentry']['no_of_pages'];
//                        
                    }

                    //Sonam changes for display extra no. of pages in pre-registration docket for Jharkhand

                    if (!empty($rptData)) {
                        $rptData = $rptData[0];
                        if ($state_id != 20) {
                            
                            $totstamduty = $this->genernalinfoentry->query("select a.final_value 
                                from ngdrstab_trn_fee_calculation_detail a
                                inner join ngdrstab_trn_fee_calculation b on a.fee_calc_id= b.fee_calc_id
                                where b.token_no=$doc_token_no and a.fee_item_id=2 and article_id NOT IN (9998)");

                            $design .= "<style> td{padding:3px;} table{border-collapse: collapse;'}</style>"
                                    . "<table width=50% border=1 align=center>"
                                    . "<tr> <td> " . $rptlabels[88] . " </td> <td width=60%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>"
                                    . "<tr> <td>  " . $rptlabels[89] . " </td> <td>" . (($rptData['genernalinfoentry']['exec_date']) ? date('d-M-Y', strtotime($rptData['genernalinfoentry']['exec_date'])) : '-') . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[90] . " </td> <td>" . $total_pages . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[91] . " </td> <td>$currency_sign" . $this->valuation->format_money_india(number_format((float) $totstamduty[0][0]['final_value'], 2, '.', '')) . ".</td></tr>"
                                    . "</table>"
                                    . "<hr style='color: #FA9;height: 5px;'/>";
                        } else {
                            //$totstamduty, $totstamduty[0][0]['final_value']= Stamp Duty, $rptData['sd']['final_amt']= Grand Total with all fees without exemption.
                            // $totwithoutsd= Exemption without stamp duty.
                            if (!empty($totstamduty)) {
                                $total1 = $rptData['sd']['final_amt'] - $totstamduty[0][0]['final_value'] - $paidsd;
                                $totalfee = $total1 - $totwithoutsd;
                            } else {
                                $total1 = $rptData['sd']['final_amt'] - $paidsd;
                                $totalfee = $total1 - $totwithoutsd;
                            }

                            $design .= "<style> td{padding:3px;} table{border-collapse: collapse;'}</style>"
                                    . "<table width=50% border=1 align=center>"
                                    . "<tr> <td> " . $rptlabels[88] . " </td> <td width=60%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>"
                                    . "<tr> <td>  " . $rptlabels[89] . " </td> <td>" . (($rptData['genernalinfoentry']['exec_date']) ? date('d-M-Y', strtotime($rptData['genernalinfoentry']['exec_date'])) : '-') . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[90] . " </td> <td>" . $total_pages . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[425] . " </td> <td>" . $stamduty . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[426] . " </td> <td>" . $paidsd . "</td> </tr>"
                                    . "<tr> <td>  " . $rptlabels[91] . " </td> <td>$currency_sign" . $this->valuation->format_money_india(number_format((float) $totalfee, 2, '.', '')) . ".</td></tr>"
                                    . "</table>"
                                    . "<hr style='color: #FA9;height: 5px;'/>";
                        }
                    }

                    $sroactiondata = $this->genernalinfoentry->query("select sro_action_flag, sro_remark from ngdrstab_trn_generalinformation where token_no=?", array($doc_token_no));
                    if (!empty($sroactiondata)) {

                        if ($sroactiondata[0][0]['sro_action_flag'] != 'N') {
                            if ($sroactiondata[0][0]['sro_action_flag'] != null) {
                                if ($sroactiondata[0][0]['sro_action_flag'] == 'A') {
                                    $sroaction = 'Accepted';
                                } else {
                                    $sroaction = 'Rejected';
                                }
                                $design .= "<style> td{padding:3px;} table{border-collapse: collapse;'}</style>"
                                        . "<table width=50% border=1 align=center>"
                                        . "<tr><td> SRO Action</td> <td>" . $sroaction . "</td> </tr>"
                                        . "<tr><td> SRO Remark</td> <td>" . $sroactiondata[0][0]['sro_remark'] . "</td> </tr>"
                                        . "</table>"
                                        . "<hr style='color: #FA9;height: 5px;'/>";
                            }
                        }
                    }


                    //General Info Details Article Dependant Fields
                    $artileData = ClassRegistry::init('conf_article_feerule_items')->find('all', array('fields' => array(' item.fee_item_id', 'item.fee_param_code', 'value.articledepfield_value', 'item.fee_item_desc_' . $lang, 'item.list_flag'), 'order' => 'item.display_order',
                        'conditions' => array('item.gen_dis_flag' => 'Y', 'value.articledepfield_value is NOT NULL', 'value.articledepfield_value !=' => ''),
                        'joins' => array(
                            array('table' => 'ngdrstab_mst_article_fee_items', 'alias' => 'item', 'conditions' => array('item.fee_item_id=conf_article_feerule_items.fee_item_id')),
                            array('table' => 'ngdrstab_trn_articledepfields', 'alias' => 'value', 'conditions' => array('value.articledepfield_id=conf_article_feerule_items.fee_param_code and value.article_id=conf_article_feerule_items.article_id and value.token_no=' . $doc_token_no))
                        )
                    ));
                    if ($artileData) {
                        $design .= "<table align=center width=95% border=1>";
                        foreach ($artileData as $idata) {

                            if ($idata['item']['list_flag'] == 'Y') {
                                $listname = ClassRegistry::init('conf_article_feerule_items')->query("select fee_item_list_desc_$lang from ngdrstab_conf_article_fee_items_list where  fee_item_id=? and fee_item_list_id=?", array($idata['item']['fee_item_id'], $idata['value']['articledepfield_value']));
                                if (!empty($listname)) {
                                    $listnameval = $listname[0][0]['fee_item_list_desc_' . $lang];
                                } else {
                                    $listnameval = (($idata['value']['articledepfield_value']) ? $idata['value']['articledepfield_value'] : '-');
                                }
                            } else {
                                $listnameval = (($idata['value']['articledepfield_value']) ? $idata['value']['articledepfield_value'] : '-');
                            }

//                               pr($listname);exit;
                            $design .= "<tr>"
                                    . "<td width=30%>" . $idata['item']['fee_item_desc_' . $lang] . "</td>"
                                    . "<td>" . $listnameval . "</td>"
                                    . "</tr>";
                        }

                        $design .= "</table><br>";
                    }
                    $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
                    if (isset($rptData[0]['article']['article_id']) && $rptData[0]['article']['article_id'] == 63) {
                        $party_party = $this->party_entry->get_party_entry($lang, $doc_token_no);
                        if (!empty($party_party)) {
                            $design .= "<table>"
                                    . "<tr>"
                                    . "<td width=30%>" . $rptlabels[105] . " :- </td> <td>" . $party_party[0]['village']['village_name_' . $lang] . "</td>"
                                    . "</tr>"
                                    . "</table>";
                        }
                    }

                    $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
                    if ($rptPropDtl) {
                        foreach ($rptPropDtl as $prpt) {
                            $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
                            $property_address = array();
                            if ($tmp_property_address) {
                                foreach ($tmp_property_address as $tmp_property_address) {
                                    array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                                }
                            }
                            $prop_boundaries = '<b>Property Boundaries</b> <br>East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];

                            $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
                            $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';

                            $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                            $tmp_prop_area = array();
                            foreach ($prop_area as $parea) {
                                if ($parea['item']['is_list_field_flag'] == 'Y')
                                    $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                                array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                            }



                            $design .= 'Property Id: <b>' . $prpt['property_details_entry']['property_id'] . "</b><table  width=95% border=1 align=center>"
                                    . "<tr> <td width=30%>" . $rptlabels[105] . " </td> <td>" . $prpt['village']['village_name_' . $lang] . ", " . $prpt['taluka']['taluka_name_' . $lang] . ", " . $prpt['district']['district_name_' . $lang] . "</td> </tr>"
                                    . "<tr> <td> " . $rptlabels[98] . "</td> <td>" . $prop_boundaries . " </td> </tr>"
                                    . "<tr> <td> " . $rptlabels[99] . "</td> <td>" . implode(', ', $tmp_prop_area) . "</td></tr>";
                            foreach ($serveyno as $attribute) {
                                $design .= "<tr> <td>" . $rptlabels[100] . "</td> <td>" . implode(', ', $property_address) . " <b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> - " . $attribute[0]['paramter_value'] . "</td> </tr>";
                            }
                            $design .= "<tr> <td>" . $rptlabels[101] . " </td> <td>" . $prpt_valuation . "</td></tr>"
                                    . "<tr> <td> " . $rptlabels[102] . " </td> <td>" . $cons_amt . "</td> </tr>"
                                    . "</table> <hr/>";

                            //----------------------------------------------------for party Details----------------------------------------------------------------------
                            $design .= $this->get_party_details_pre_reg_doc($lang, $doc_token_no, $prpt['property_details_entry']['property_id']);
                        }
                    } else {
                        $design .= $this->get_party_details_pre_reg_doc($lang, $doc_token_no);
                    }

                    //----------------------------------------------------------------for Witness----------------------------------------------------------------------
                    $witness = array();
                    $witness_detail = $this->witness->get_witness($lang, $doc_token_no);

                    if ($witness_detail) {
                        foreach ($witness_detail as $wit) {
                            $tmp_witness_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $wit['witness']['witness_id'], $doc_token_no, '3', $doc_lang);
                            $witness_address = array();
                            foreach ($tmp_witness_address as $tmp_address) {
                                array_push($witness_address, $tmp_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                            if ($wit['witness']['witness_full_name_' . $lang] == NULL) {
                                array_push($witness, '<b>' . $wit['saluation']['salutation_desc_' . $lang] . ' ' . $wit['witness']['fname_' . $lang] . ' ' . $wit['witness']['mname_' . $lang] . ' ' . $wit['witness']['lname_' . $lang] . '</b>, ' . implode(',', $witness_address) . ', ' . $wit['village']['village_name_' . $lang] . ', ' . $wit['taluka']['taluka_name_' . $lang] . ', ' . $wit['district']['district_name_' . $lang]);
                            } else {
                                //array_push($witness, '<b>' . $wit['saluation']['salutation_desc_' . $lang] . ' ' . $wit['witness']['witness_full_name_' . $lang] . ' ' . '</b>, ' . implode(',', $witness_address) . ', ' . $wit['village']['village_name_' . $lang] . ', ' . $wit['taluka']['taluka_name_' . $lang] . ', ' . $wit['district']['district_name_' . $lang].','.',<b>Father Name-</b> ' . $wit['witness']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $wit['witness']['age'] . ', <b>Gender:</b>' . $wit['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $wit['occupation']['occupation_name_' . $lang]);
                                array_push($witness, '<b>' . $wit['saluation']['salutation_desc_' . $lang] . ' ' . $wit['witness']['witness_full_name_' . $lang] . ' ' . ',<b>Father Name-</b> ' . $wit['witness']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $wit['witness']['age'] . ', <b>Gender:</b>' . $wit['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $wit['occupation']['occupation_name_' . $lang]);
                            }
                        }
                        //Party,Withness Details
                        $design .= '<table width=95% border=1 align=center>'
                                . "<tr> <td width=30%> " . $rptlabels[92] . "</td> <td>" . implode('<br>', $witness) . "</td> </tr>"
                                . "</table>"
                                . "<hr style='color: #FA9;height: 5px;'/>";
                    }
                    //----------------------------------------------------------------for Identification----------------------------------------------------------------------
                    $identification = array();
//        $prop_witness = $this->witness->get_witness($doc_lang, $doc_token_no);//not to use
                    $identifier_detail = $this->identification->get_identification($lang, $doc_token_no);
                    if ($identifier_detail) {

                        foreach ($identifier_detail as $identifier) {
                            $tmp_identifier_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $identifier['identification']['identification_id'], $doc_token_no, '5', $doc_lang);
                            $identifier_address = array();
                            foreach ($tmp_identifier_address as $tmp_address) {
                                array_push($identifier_address, $tmp_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                            if ($identifier['identification']['identification_full_name_' . $lang] == NULL) {
                                array_push($identification, '<b>' . $identifier['saluation']['salutation_desc_' . $lang] . ' ' . $identifier['identification']['fname_' . $lang] . ' ' . $identifier['identification']['mname_' . $lang] . ' ' . $identifier['identification']['lname_' . $lang] . '</b>, ' . implode(',', $identifier_address) . ', ' . $identifier['village']['village_name_' . $lang] . ', ' . $identifier['taluka']['taluka_name_' . $lang] . ', ' . $identifier['district']['district_name_' . $lang]);
                            } else {
                                //array_push($identification, '<b>' . $identifier['saluation']['salutation_desc_' . $lang] . ' ' . $identifier['identification']['identification_full_name_' . $lang] . ' ' . '</b>, ' . implode(',', $identifier_address) . ', ' . $identifier['village']['village_name_' . $lang] . ', ' . $identifier['taluka']['taluka_name_' . $lang] . ', ' . $identifier['district']['district_name_' . $lang].','.',<b>Father Name-</b> ' . $identifier['identification']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $identifier['identification']['age'] . ', <b>Gender:</b>' . $identifier['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $identifier['occupation']['occupation_name_' . $lang]);
                                array_push($identification, '<b>' . $identifier['saluation']['salutation_desc_' . $lang] . ' ' . $identifier['identification']['identification_full_name_' . $lang] . ' ' . ',<b>Father Name-</b> ' . $identifier['identification']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $identifier['identification']['age'] . ', <b>Gender:</b>' . $identifier['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $identifier['occupation']['occupation_name_' . $lang]);
                            }
                        }
                        //Party,Withness Details
                        $design .= '<table width=95% border=1 align=center>'
                                . "<tr> <td width=30%>" . $rptlabels[93] . "</td> <td>" . implode('<br>', $identification) . "</td> </tr>"
                                . "</table>"
                                . "<hr style='color: #FA9;height: 5px;'/>";
                    }


//goshvara
//                  ============================== Payment  =========================================
//                $design.=$this->requestAction(array('controller' => 'Reports', 'action' => 'rpt_reg_summary1', $doc_token_no, 'V'));
//                ==============================  Stamp Duty =========================================
                    $design .= $this->requestAction(array('controller' => 'Fees', 'action' => 'view_sd_calc', $doc_token_no, 0, $lang));
                    $design .= $this->requestAction(array('controller' => 'Fees', 'action' => 'view_exemption', $doc_token_no, $lang));

//                    $design.="<br/><br/><table width=95% border=1 align=center>"
//                            . "<tr><td colspan=2> " . $rptlabels[95] . " </td> </tr>"
//                            . "<tr><td colspan=2 style=height:25px;></td></tr>"
//                            . "<tr><td align=center> <b>(" . $rptlabels[96] . " ) </b></td> <td align=center><b>(" . $rptlabels[97] . ")</b></td> </tr>"
//                            . "</table>";
                    //officer sign
                    $design .= "<br><br>";
                    $design .= "<table style=' border: 1px solid black;' width='100%'>"
                            . "<tr><td colspan=3 style='text-align:center;'><h3><strong><u><em>Declaration To Be Made In The Data Entry Summary Sheet Print Out</em></u></strong></h3></td></tr>"
                            . "<tr><td colspan=3 style='padding-left:5px; padding-right:5px;' align='justify'>All the entries made, have been verified by me and are found same as the entries of the document presented.</td></tr>"
                            . "<tr><td colspan=3 style='padding-left:5px; padding-right:5px;' align='justify'>Disclaimer : | hereby declare that all the contents of uploaded document and the original document are exactly same, "
                            . "and all the information provided by me are true to itself. The detail of property's holding number has been verified by meat the time of entry "
                            . "through alert generated by the system. | am satisfied with the verification and hence proceeding further for registration after seeing the alert.</td></tr>"
                            . "<tr height='80px'>"
                            . "<td valign='bottom'><b>Deed Writer / Advocate </td>"
                            . "<td valign='bottom'><b> Vendee/Claimant : </b> </td>"
                            . "<td valign='bottom'><b>Vendor / Executant</b></td>"
                            . "</tr>"
                            . "</table>";

                    $design .= "<br/><br/><table width=95% border=0 align=center>"
                            . "<tr><td colspan=2 style=height:25px;></td></tr>"
                            . "<tr><td style='text-align:right;'> <b>( Party Signature ) </b></td></tr>"
                            . "</table>";
                    if ($flag == 'D') {
                        $this->create_pdf($design, "doc_" . $doc_token_no, 'A4-P');
                    } else if ($flag == 'V') {
                        return $design;
                    } else {
                        return 'invalid input';
                    }
                } else {
                    return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
                }
            } else {
                return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function pre_registration_docket($doc_token_no, $flag = 'D', $lang = 'en', $doc_lang = 'en') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = base64_decode($doc_token_no);
        switch ($state_id) {

            case 28 : //  state AndraP
                return $this->pre_doc_summary_report_30($doc_token_no, $flag, $lang = 'en', $doc_lang = 'en');
                break;

            default : // Goa, Punjab as property and party wise
                return $this->pre_doc_summary_report($doc_token_no, $flag, $lang = 'en', $doc_lang = 'en');
        }
    }

    public function get_identification_data_maharashtra($doc_token_no, $lang = 'en', $rptlabels = NULL, $report_type, $view_flag = NULL) {
        try {
            array_map([$this, 'loadModel'], ['file_config', 'identification', 'party_entry', 'TrnBehavioralPatterns']);
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $party_html = NULL;
            $identification_detail = $this->identification->get_identification($lang, $doc_token_no, $report_type);
//            pr($identification_detail);exit;
            $c = count($identification_detail);

            if (!empty($identification_detail)) {

                $party_html = "<p style='text-align:left'><b>Identification</p>";

                if ($doc_token_no && $lang) {
                    $party_html .= "<table width=100% class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                           <th style='text-align: center;'>Sr.NO</th> 
                            <th style='text-align: center;'>Party Name and Address</th>
                            <th style='text-align: center;'>Signature</th>
                        </tr>
                    </thead>
                    <tbody>";

//                pr($identification_detail);exit;<th style='text-align: center;'>Photo</th>
                    //<th style='text-align: center;'>FingerPrint</th> 
                    $counter = 0;
                    foreach ($identification_detail as $id_rc) {
//                    pr($id_rc);exit;

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $id_rc['identification']['identification_id'], $doc_token_no, '3');

                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                        }
//                     if($identification_detail[0]['identification']['biometric_img']!= NULL || $identification_detail[0]['identification']['photo_img'] != NULL ){   
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td style='text-align: center;'> <b>" . $id_rc['identification']['identification_full_name_en'] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $id_rc['village']['village_name_' . $lang] . ', ' . $id_rc['taluka']['taluka_name_' . $lang] . ', ' . $id_rc['district']['district_name_' . $lang] . ', ' . $id_rc['state']['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $id_rc['identification']['pan_no'] . "</td>";
//                            . "<td><br>" . $id_rc['identification_type']['desc_' . $lang] . "</td>"
//                                . "<td>" . $id_rc['identification_type']['desc_' . $lang] . "<br><b>Age:</b>" . $id_rc['identification']['age'] . " <br><b> </b> </td>"
                        /*  . "<td style='text-align: center;'>";
                          $imagedata = $path['file_config']['filepath'] . $id_rc['identification']['photo_img'];
                          $img1 = '';
                          if ($id_rc['identification']['photo_img'] != null && file_exists($imagedata)) {
                          $image = file_get_contents($imagedata);
                          $image_codes = base64_encode($image);

                          if ($view_flag == 'V') {
                          $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='70px' width='70px' /> ";
                          } else {
                          $img1 = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                          }
                          } else {
                          $image_codes = null;
                          }

                          $party_html .= "" . $img1 . " </td>
                          <td style='text-align: center;'>";
                          $imagedata1 = $path['file_config']['filepath'] . $id_rc['identification']['biometric_img'];
                          $img2 = '';
                          if ($id_rc['identification']['biometric_img'] != null && file_exists($imagedata1)) {
                          $image1 = file_get_contents($imagedata1);
                          $image_codes1 = base64_encode($image1);

                          if ($view_flag == 'V') {
                          $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                          } else {
                          $img2 = "<img src='" . $imagedata1 . "' height='70px' width='70px' />";
                          }
                          } else {
                          $image_codes1 = null;
                          }
                          $party_html .= "" . $img2 . "</td>"
                          . "<td></td>" */
                        $party_html .= "<td></td></tr>";
                    }
                    $party_html .= "</tbody> </table>";
                }
                return $party_html;
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_party_data_maharashtra($doc_token_no = NULL, $lang = 'en', $rptlabels = NULL, $report_type, $view_flag = NULL) {
        $this->loadModel('file_config');
        $this->loadModel('party_entry');
        $this->loadModel('TrnBehavioralPatterns');
        $path = $this->file_config->find('first', array('fields' => array('filepath')));
        $doc_lang = $this->Session->read('doc_lang');
//        pr($report_type);exit;
        try {
            $party_html = NULL;
            if ($doc_token_no && $lang) {
                $party_html = "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                            <th style='text-align: center;'>Sr.NO</th> 
                            <th style='text-align: center;'>Party Name and Address</th>
                            <th style='text-align: center;'>Party Type</th>
                            <th style='text-align: center;'>Photo</th>
                            <th style='text-align: center;'>FingerPrint</th>
                            <th style='text-align: center;'>Signature</th> 
                           
                        </tr>
                    </thead>
                    <tbody>";
                $party_date = $this->party_entry->query("SELECT p.* FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_conf_admblock7"
                        . "_village_mapping village on village.village_id=p.village_id "
                        . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                        . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                        . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                        . " where p.token_no=?", array($doc_token_no));
//                pr($party_date);
//                exit;

                foreach ($party_date as $party_date1) {
                    $bio_date = $party_date1[0]['biometric_upload'];
                    $pho_upload_date = $party_date1[0]['photo_upload'];
                }

                if ($report_type == 'P') {
                    $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_en,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7"
                            . "_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=? AND DATE(p.biometric_upload)=? AND DATE(p.photo_upload)=?", array($doc_token_no, $bio_date, $pho_upload_date));
                } else {
                    $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_en,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=?", array($doc_token_no));
                }
                $counter = 1;
//                  pr($party);exit;
                foreach ($party as $party) {
//                    pr($party);
                    $poa = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_en,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=? and p.power_attoney_party_id=? ", array($doc_token_no, $party[0]['party_id']));
//                    pr($party);exit;

                    if (empty($poa)) {


                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }

//                        if ($party[0]['biometric_img'] != NULL || $party[0]['photo_img'] != NULL) {
//                            if ($party[0]['photo_img'] != NULL) {


                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $counter++ . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party[0]['party_full_name_en'] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party[0]['village_name_' . $lang] . ', ' . $party[0]['taluka_name_' . $lang] . ', ' . $party[0]['district_name_' . $lang] . ', ' . $party[0]['state_name_' . $lang] . "<br><b> $rptlabels[296]:</b> " . $party[0]['pan_no'] . ",<b>$rptlabels[298]:</b>" . $party[0]['age'] . "</td>"
                                . "<td>" . $party[0]['party_type_desc_' . $lang] . " </td>"
                                . "<td style='text-align: center;'>";

                        $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];

                        $img1 = '';
                        if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='70px' width='70px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }


                        $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;'>";
                        $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                        $img2 = '';

                        if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                            $image1 = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image1);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='70px' width='70px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='70px' width='70px' />";
                            }
                        } else {
                            $image_codes1 = null;
                        }

                        $party_html .= "" . $img2 . "</td>"
                                . "<td></td>"
                                . "</tr>";
//                            }
//                        } // photo and biometric closing
                    } else {


                        $party_html = "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                             <th style='text-align: center;'>Sr.NO</th> 
                            <th style='text-align: center;'>Party Name and Address</th>
                            <th style='text-align: center;'>Party Type</th>
                            <th style='text-align: center;'>Photo</th>
                            <th style='text-align: center;'>FingerPrint</th> 
                            <th style='text-align: center;'>Signature</th>
                               
                        </tr>
                    </thead>
                    <tbody>";

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
//                        pr($tmp_party_address);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $counter++ . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party[0]['party_full_name_en'] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party[0]['village_name_' . $lang] . ', ' . $party[0]['taluka_name_' . $lang] . ', ' . $party[0]['district_name_' . $lang] . ', ' . $party[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party[0]['pan_no'] . ",<b>$rptlabels[298]:</b>" . $party[0]['age'] . "</td>"
                                . "<td>" . $party[0]['party_type_desc_' . $lang] . " </td>"
                                . "<td style='text-align: center;'>";

                        $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];
                        $img1 = '';
                        if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='70px' width='70px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }


                        $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;'>";
                        $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                        $img2 = '';

                        if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                            $image1 = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image1);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='70px' width='70px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='70px' width='70px' />";
                            }
                        } else {
                            $image_codes1 = null;
                        }

                        $party_html .= "" . $img2 . "</td>"
                                . "<td></td>"
                                . "</tr>";

//                        $party_html.="<hr/>";
                    }
                }


                $party_html .= "</tbody> </table>";
                //if doc reg no compl
            }
            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_party_details_pre_reg_doc_new($lang = NULL, $doc_token_no = NULL, $prpt_id = NULL) {
        try {
            $doc_lang = $this->Session->read('doc_lang');
            $prop_party = $this->party_entry->get_party_entry_new($lang, $doc_token_no, $prpt_id);
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 9)));
            $seller = $purchaser = array();
            $seller_label = $purchaser_label = '';
//            pr($prop_party);exit;
            foreach ($prop_party as $p_party) {
                $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $p_party['party_entry']['party_id'], $doc_token_no, '2', $doc_lang);

                $party_address = array();
                foreach ($tmp_party_address as $tmp_party_address) {
                    array_push($party_address, $tmp_party_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                }

                if ($p_party['party_entry']['village_id'] == null) {
                    $party_address['address1'] = '<b>Address - </b>' . $p_party['party_entry']['address_' . $lang] . '- ' . $p_party['party_entry']['address2_' . $lang];
                    //$party_address['address2'] = '<b>Address2 - </b>' . $p_party['party_entry']['address2_' . $lang];
//                   pr($party_address);exit;
                }
//             pr($p_party);exit;
//               
//              
                $pan_no = $ad = '';
                $party_uid = $p_party['party_entry']['uid'];
                $var = $this->dec($party_uid);
                if ($var == NULL) {
                    echo '';
                } else {
                    $ad = str_repeat("*", strlen($var) - 4) . substr($var, -4);
                }
                $p_pan = $p_party['party_entry']['pan_no'];
                if ($p_pan == NULL) {
                    echo '';
                } else {
                    $pan_no = str_repeat("*", strlen($p_pan) - 4) . substr($p_pan, -4);
                }

                $seller_label = $p_party['party_type']['party_type_desc_' . $lang];
//                pr($p_party);exit;
                $display_flag = $p_party['party_art']['display_order_flag'];
                $seller_label = $display_flag . "|" . $seller_label;
                if ($p_party['party_catg']['authorised_signatory'] == 'N') {
                    if ($p_party['party_entry']['party_full_name_en'] == NULL) {
                        $seller[$seller_label][$p_party['party_entry']['id']] = '<b>' . $p_party['saluation']['salutation_desc_' . $lang] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . ',<b>Father Name-</b> ' . $p_party['party_entry']['father_full_name_' . $lang] . ',<b>Permission Case No.- </b>' . $p_party['party_entry']['permission_case_number'] . ', <b>Aadhaar No.</b> ' . $ad . '<br>';
                    } else {
                        $seller[$seller_label][$p_party['party_entry']['id']] = '<b>' . $p_party['party_entry']['org_name_en'] . '</b>-<b>' . $p_party['saluation']['salutation_desc_' . $lang] . '</b> <b> ' . $p_party['party_entry']['party_full_name_en'] . '</b>, ' . implode(', ', $party_address) . ',<b>Father Name-</b> ' . $p_party['party_entry']['father_full_name_' . $lang] . ' , <b>PAN No.- </b>' . $pan_no . ',<b>Permission Case No.- </b>' . $p_party['party_entry']['permission_case_number'] . ', <b>Aadhaar No.</b> ' . $ad . '<br>';
                    }
                } else {

                    if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                        $seller[$seller_label][$p_party['party_entry']['id']] = '<b>' . $p_party['party_entry']['org_name_en'] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . '</b>, ' . implode(', ', $party_address) . ',<b>Father Name-</b> ' . $p_party['party_entry']['father_full_name_' . $lang] . ',<b>Permission Case No.- </b>' . $p_party['party_entry']['permission_case_number'] . ', <b>Aadhaar No.</b> ' . $ad . '<br>';
                    } else {
                        $seller[$seller_label][$p_party['party_entry']['id']] = '<b>' . $p_party['party_entry']['org_name_en'] . ' ' . ", </b>  Representative Name :- <b>" . $p_party['party_entry']['party_full_name_en'] . '</b>, ' . implode(', ', $party_address) . ',<b>Father Name-</b> ,' . $p_party['party_entry']['father_full_name_' . $lang] . ' , <b>PAN No.- </b>' . $pan_no . ',<b>Permission Case No.- </b>' . $p_party['party_entry']['permission_case_number'] . ', <b>Aadhaar No.</b> ' . $ad . '<br>';
                    }
                }
            }
//            pr($seller);exit;
            ksort($seller); //
            if ($seller) {
                $design = "<table  width=100% border=1 align=center>";
                foreach ($seller as $key => $single) {

                    foreach ($single as $key1 => $singleparty) {
                        //pr($singleparty);exit;
                        $arr_ptype = explode("|", $key); //
                        $design .= "<tr> <td width=30%>  " . @$arr_ptype[1] . "  </td> <td>" . $singleparty . "</td> </tr>";
                        $key = '';
                    }
                }
                $design .= "</table> <hr style='color: #FA9;height: 5px;'/>";

                return $design;
            } else {
                return;
            }
            $this->Session->write("randamkey", rand(111111, 999999));
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_party_data_GOA($doc_token_no = NULL, $lang = 'en', $rptlabels = NULL, $report_type, $view_flag = NULL) {

        $this->loadModel('file_config');
        $path = $this->file_config->find('first', array('fields' => array('filepath')));
        $doc_lang = $this->Session->read('doc_lang');
//        pr($report_type);exit;
        try {
            $party_html = NULL;
            if ($doc_token_no && $lang) {
                $party = $this->party_entry->query("SELECT p.*,p.id,gen.gender_desc_$lang,occ.occupation_name_$lang,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                        . " left join ngdrstab_mst_occupation occ on occ.occupation_id=p.occupation_id "
                        . " left join ngdrstab_mst_gender gen on gen.gender_id=p.gender_id "
                        . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                        . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                        . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                        . " where p.is_presenter='Y' and p.token_no=?", array($doc_token_no));

//                $party_html="<table width='100%'><tr><td style='text-align: left;'> Presenter List</td></tr></table>";
                $party_html = "<h4 style='text-align: left;'> <b>Presenter </b></h4>";
                $party_html .= "<table width='100%' border=1 style='border: 2px solid black;'  >
                    <thead>
                        <tr style='border: 3px solid black;'>
                            <th style='text-align: center;border: 2px solid black;' width='5%'>Sr.NO</th> 
                            <th style='text-align: center;border: 2px solid black;' width='60%'>Party Name and Address</th>
                            <th style='text-align: center;border: 2px solid black;' width='10%'>Photo</th>
                            <th style='text-align: center;border: 2px solid black;' width='10%'>Thumb</th> 
                            <th style='text-align: center;border: 2px solid black;' width='15%'>Signature</th> 
                        </tr>
                    </thead>
                    <tbody>";
                $counter = 1;
                foreach ($party as $party) {
                    $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
                    $party_address = array();
                    foreach ($tmp_party_address as $tmp_party_address) {
                        array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                    }

                    if ($party[0]['village_id'] == null) {
                        $party_address['address1'] = '<b>Address1 - </b>' . $party[0]['address_' . $lang];
                        $party_address['address2'] = '<b>Address2 - </b>' . $party[0]['address2_' . $lang];
                    }

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;border: 2px solid black;'>" . $counter++ . "</td>"
                            . "<td style='text-align: center;border: 2px solid black;'> <b>" . $party[0]['party_full_name_' . $lang] . " </b>,S/o - D/o <b>" . $party[0]['father_full_name_' . $lang] . " </b> <br><b>Age:</b> " . $party[0]['age'] . ",<b>Gender:</b>" . $party[0]['gender_desc_' . $lang] . ",<b>Occupation:</b> " . $party[0]['occupation_name_' . $lang] . ", " . implode(', ', $party_address) . ",<br><b> PAN No.:</b> " . $party[0]['pan_no'] . "</td>"
                            . "<td style='text-align: center;border: 2px solid black;'>";

                    $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];

                    $img1 = '';
                    if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                        $image = file_get_contents($imagedata);
                        $image_codes = base64_encode($image);
                        if ($view_flag == 'V') {
                            $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='70px' width='70px' /> ";
                        } else {
                            $img1 = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                        }
                    } else {
                        $image_codes = null;
                        $btnaccept = 0;
                    }


                    $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;border: 2px solid black;'>";
                    $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                    $img2 = '';

                    if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                        $image1 = file_get_contents($imagedata1);
                        $image_codes1 = base64_encode($image1);
                        if ($view_flag == 'V') {
                            $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                        } else {
                            $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                        }
                    } else {
                        $image_codes1 = null;
                    }

                    $party_html .= "" . $img2 . "</td>"
                            . "<td style='border: 2px solid black;'></td>"
                            . "</tr>";
                }

                $party_html .= "</tbody> </table>";

//              pr($party_html);exit;  
                $party_html .= "<hr>";
//    ======================================================Exxecuter List ===============================================================================================            
                $party = $this->party_entry->query("SELECT p.*, gen.gender_desc_$lang,occ.occupation_name_$lang, p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                        . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                        . " left join ngdrstab_mst_occupation occ on occ.occupation_id=p.occupation_id "
                        . " left join ngdrstab_mst_gender gen on gen.gender_id=p.gender_id "
                        . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                        . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                        . " where p.is_executer='Y' and p.token_no=?", array($doc_token_no));

//                $party_html="<table width='100%'><tr><td style='text-align: left;'> Presenter List</td></tr></table>";
                $party_html .= "<h4 style='text-align: left;'> <b>Executer</b></h4>";
                $party_html .= "<table width='100%'  border=1 style='border: 2px solid black;'>
                    <thead>
                        <tr style='border: 3px solid black;'>
                            <th style='text-align: center;border: 2px solid black;'>Sr.NO</th> 
                            <th style='text-align: center;border: 2px solid black;'>Party Name and Address</th>
                            <th style='text-align: center;border: 2px solid black;'>Photo</th>
                            <th style='text-align: center;border: 2px solid black;'>Thumb</th> 
                            <th style='text-align: center;border: 2px solid black;'>Signature</th> 
                        </tr>
                    </thead>
                    <tbody>";
                $srno = 1;
                foreach ($party as $party) {
                    $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
                    $party_address = array();
                    foreach ($tmp_party_address as $tmp_party_address) {
                        array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                    }

                    if ($party[0]['village_id'] == null) {
                        $party_address['address1'] = '<b>Address1 - </b>' . $party[0]['address_' . $lang];
                        $party_address['address2'] = '<b>Address2 - </b>' . $party[0]['address2_' . $lang];
                    }


                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold; border: 2px solid black;'>" . $srno++ . "</td>"
                            . "<td style='text-align: center;border: 2px solid black;'> <b>" . $party[0]['party_full_name_' . $lang] . " </b>,S/o - D/o <b>" . $party[0]['father_full_name_' . $lang] . " </b> <br><b>Age:</b> " . $party[0]['age'] . ",<b>Gender:</b>" . $party[0]['gender_desc_' . $lang] . ",<b>Occupation:</b> " . $party[0]['occupation_name_' . $lang] . ", " . implode(', ', $party_address) . ",<br><b> PAN No.:</b> " . $party[0]['pan_no'] . "</td>"
                            . "<td style='text-align: center;border: 2px solid black;'>";

                    $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];

                    $img1 = '';
                    if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                        $image = file_get_contents($imagedata);
                        $image_codes = base64_encode($image);
                        if ($view_flag == 'V') {
                            $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='70px' width='70px' /> ";
                        } else {
                            $img1 = "<img src='" . $imagedata . "' height='50px' width='50px' />";
                        }
                    } else {
                        $image_codes = null;
                        $btnaccept = 0;
                    }


                    $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;border: 2px solid black;'>";
                    $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                    $img2 = '';

                    if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                        $image1 = file_get_contents($imagedata1);
                        $image_codes1 = base64_encode($image1);
                        if ($view_flag == 'V') {
                            $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                        } else {
                            $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                        }
                    } else {
                        $image_codes1 = null;
                    }

                    $party_html .= "" . $img2 . "</td>"
                            . "<td style='border: 2px solid black;'></td>"
                            . "</tr>";
                }

                $party_html .= "</tbody> </table>";
            }
            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_party_details_pre_reg_doc($lang = NULL, $doc_token_no = NULL, $prpt_id = NULL) {

        try {
            $doc_lang = $this->Session->read('doc_lang');
            $prop_party = $this->party_entry->get_party_entry($lang, $doc_token_no, $prpt_id);

            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 9)));
            $seller = $purchaser = array();
            $seller_label = $purchaser_label = '';
            foreach ($prop_party as $p_party) {

                $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $p_party['party_entry']['party_id'], $doc_token_no, '2', $doc_lang);

                $party_address = array();
                foreach ($tmp_party_address as $tmp_party_address) {
                    array_push($party_address, $tmp_party_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                }
//                pr($p_party);
                if ($p_party['party_entry']['village_id'] == null) {
                    $party_address['address1'] = '<b>Address1 - </b>' . $p_party['party_entry']['address_' . $lang];
//                   $party_address['address2'] = '<b>Address2 - </b>' .$p_party['party_entry']['address2_'. $lang];
                }

                $panstr = '';
                if ($p_party['party_entry']['pan_form_list'] == 9) {
                    $panstr = 'FORM 60/61 is uploaded';
                } else {
                    $panstr = $p_party['party_entry']['pan_no'];
                }

                $party_uid = $p_party['party_entry']['uid'];
                $var = $this->dec($party_uid);

                if ($var == NULL) {
                    $ad = '';
                } else {
                    $ad = str_repeat("*", strlen($var) - 4) . substr($var, -4);
                }

                if ($p_party['party_type']['party_type_flag'] == '1') {//seller
                    if ($p_party['party_catg']['authorised_signatory'] == 'N') {

                        if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                            array_push($seller, '<b>' . $p_party['saluation']['salutation_desc_' . $lang] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . ',<b>Father Name-</b> ' . $p_party['party_entry']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $p_party['party_entry']['age'] . ', <b>Gender:</b>' . $p_party['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $p_party['occupation']['occupation_name_' . $lang] . ',<b>PAN No./Form(60/61) - </b>' . $panstr . ', <b>Aadhaar No.</b> ' . $ad . '<br>');
                        } else {

                            array_push($seller, '<b>' . $p_party['party_entry']['org_name_en'] . '</b>-<b>' . $p_party['saluation']['salutation_desc_' . $lang] . '</b> <b> ' . $p_party['party_entry']['party_full_name_en'] . '</b>, ' . implode(', ', $party_address) . ',<b>Father Name-</b> ' . $p_party['party_entry']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $p_party['party_entry']['age'] . ', <b>Gender:</b>' . $p_party['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $p_party['occupation']['occupation_name_' . $lang] . ',<b>PAN No./Form(60/61) - </b>' . $panstr . ', <b>Aadhaar No.</b> ' . $ad . '<br>');
                        }
                        $seller_label = $p_party['party_type']['party_type_desc_' . $lang];
                    } else {

                        if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                            array_push($seller, '<b>' . $p_party['party_entry']['org_name_en'] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . '</b>, ' . implode(', ', $party_address) . ',<b>Father Name-</b> ' . $p_party['party_entry']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $p_party['party_entry']['age'] . ', <b>Gender:</b>' . $p_party['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $p_party['occupation']['occupation_name_' . $lang] . ',<b>PAN No./Form(60/61) - </b>' . $panstr . ', <b>Aadhaar No.</b> ' . $ad . '<br>');
                        } else {

                            array_push($seller, '<b>' . $p_party['party_entry']['org_name_en'] . ' ' . ", </b>  Representative Name :- <b>" . $p_party['party_entry']['party_full_name_en'] . '</b>, ' . implode(', ', $party_address) . ',<b>Father Name-</b> ,' . $p_party['party_entry']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $p_party['party_entry']['age'] . ', <b>Gender:</b>' . $p_party['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $p_party['occupation']['occupation_name_' . $lang] . ',<b>PAN No./Form(60/61) - </b>' . $panstr . ', <b>Aadhaar No.</b> ' . $ad . '<br>');
                        }
                        $seller_label = $p_party['party_type']['party_type_desc_' . $lang];
                    }
                }
                if ($p_party['party_type']['party_type_flag'] == '0') {//purchaser
                    if ($p_party['party_catg']['authorised_signatory'] == 'N') {

                        if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                            array_push($purchaser, '<b>' . $p_party['saluation']['salutation_desc_' . $lang] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . '</b>, ' . implode(', ', $party_address) . ' ,<b>Age:</b> ' . $p_party['party_entry']['age'] . ', <b>Gender:</b>' . $p_party['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $p_party['occupation']['occupation_name_' . $lang] . ',<b>PAN No./Form(60/61) - </b>' . $panstr . ', <b>Aadhaar No.</b> ' . $ad . '<br>');
                        } else {
                            array_push($purchaser, '<b>' . $p_party['party_entry']['org_name_en'] . '</b>-<b>' . $p_party['saluation']['salutation_desc_' . $lang] . '  </b>   ' . $p_party['party_entry']['party_full_name_en'] . ', ' . implode(', ', $party_address) . ',<b>Father Name-</b> ' . $p_party['party_entry']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $p_party['party_entry']['age'] . ', <b>Gender:</b>' . $p_party['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $p_party['occupation']['occupation_name_' . $lang] . ',<b>PAN No./Form(60/61) - </b>' . $panstr . ', <b>Aadhaar No.</b> ' . $ad . '<br>');
                        }

                        $purchaser_label = $p_party['party_type']['party_type_desc_' . $lang];
                    } else {
                        if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                            array_push($purchaser, '<b>' . $p_party['party_entry']['org_name_en'] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . '</b>, ' . implode(', ', $party_address) . ' ,<b>Age:</b> ' . $p_party['party_entry']['age'] . ', <b>Gender:</b>' . $p_party['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $p_party['occupation']['occupation_name_' . $lang] . ',<b>PAN No./Form(60/61) - </b>' . $panstr . ', <b>Aadhaar No.</b> ' . $ad . '<br>');
                        } else {
                            array_push($purchaser, '<b>' . $p_party['party_entry']['org_name_en'] . ' ' . ", </b>  Representative Name :- <b>" . $p_party['party_entry']['party_full_name_en'] . '</b>, ' . implode(', ', $party_address) . ',<b>Father Name-</b> ' . $p_party['party_entry']['father_full_name_' . $lang] . ' ,<b>Age:</b> ' . $p_party['party_entry']['age'] . ', <b>Gender:</b>' . $p_party['gender']['gender_desc_' . $lang] . ', <b>Occupation:</b> ' . $p_party['occupation']['occupation_name_' . $lang] . ',<b>PAN No./Form(60/61) - </b>' . $panstr . ', <b>Aadhaar No.</b> ' . $ad . '<br>');
                        }
                        $purchaser_label = $p_party['party_type']['party_type_desc_' . $lang];
                    }
                }
            }


            if ($seller || $purchaser) {
                $design = "<table  width=95% border=1 align=center>"
                        . "<tr> <td width=30%>  " . $seller_label . "  </td> <td>" . implode('<br>', $seller) . "</td> </tr>"
                        . "<tr> <td> " . $purchaser_label . " </td> <td>" . implode('<br>', $purchaser) . "</td> </tr>"
                        . "</table>"
                        . "<hr style='color: #FA9;height: 5px;'/>";
                return $design;
            } else {
                return;
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_party_details_pre_reg_doc_3($lang = NULL, $doc_token_no = NULL, $prpt_id = NULL) { //HP STATE
        try {
            $doc_lang = $this->Session->read('doc_lang');
            $prop_party = $this->party_entry->get_party_entry($lang, $doc_token_no, $prpt_id);
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 9)));
            $seller = $purchaser = array();
            $seller_label = $purchaser_label = '';
            //pr($prop_party);
            foreach ($prop_party as $p_party) {
                $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $p_party['party_entry']['party_id'], $doc_token_no, '2', $doc_lang);

                $party_address = array();
                foreach ($tmp_party_address as $tmp_party_address) {
                    array_push($party_address, $tmp_party_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                }

                if ($p_party['party_entry']['village_id'] == null) {
                    $party_address['address1'] = '' . $p_party['party_entry']['address_' . $lang] . '- ' . $p_party['party_entry']['address2_' . $lang];
                    //$party_address['address2'] = '<b>Address2 - </b>' . $p_party['party_entry']['address2_' . $lang];
//                   pr($party_address);exit;
                }
//             pr($p_party);exit;
//               
//              
                $party_uid = $p_party['party_entry']['uid'];
                $ad = $this->dec($party_uid);

                $panstr = '';
                if ($p_party['party_entry']['pan_form_list'] == 9) {
                    $panstr = 'FORM 60/61 is uploaded';
                } else {
                    $panstr = $p_party['party_entry']['pan_no'];
                }

                if ($p_party['party_type']['party_type_flag'] == '1') {//seller
                    if ($p_party['party_catg']['authorised_signatory'] == 'N') {

                        if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                            array_push($seller, '' . $p_party['saluation']['salutation_desc_' . $lang] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . ', ' . $p_party['party_entry']['father_full_name_' . $lang] . ',' . $p_party['party_entry']['permission_case_number'] . ', ' . $ad . ', ' . $panstr . ', ' . $p_party['gender']['gender_desc_' . $lang] . '<br>');
                        } else {

                            array_push($seller, '' . $p_party['party_entry']['org_name_en'] . '</b>-<b>' . $p_party['saluation']['salutation_desc_' . $lang] . '</b> <b> ' . $p_party['party_entry']['party_full_name_en'] . '</b>, ' . implode(', ', $party_address) . ', ' . $p_party['party_entry']['father_full_name_' . $lang] . ' ,' . $p_party['party_entry']['pan_no'] . ',' . $p_party['party_entry']['permission_case_number'] . ', ' . $ad . ', ' . $panstr . ', ' . $p_party['gender']['gender_desc_' . $lang] . '<br>');
                        }
                        $seller_label = $p_party['party_type']['party_type_desc_' . $lang];
                    } else {

                        if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                            array_push($seller, '' . $p_party['party_entry']['org_name_en'] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . '</b>, ' . implode(', ', $party_address) . ',' . $p_party['party_entry']['father_full_name_' . $lang] . ',' . $p_party['party_entry']['permission_case_number'] . ', ' . $ad . ', ' . $panstr . ', ' . $p_party['gender']['gender_desc_' . $lang] . '<br>');
                        } else {
                            array_push($seller, '' . $p_party['party_entry']['org_name_en'] . ' ' . ", " . $p_party['party_entry']['party_full_name_en'] . '</b>, ' . implode(', ', $party_address) . ', ,' . $p_party['party_entry']['father_full_name_' . $lang] . ' , ' . $p_party['party_entry']['pan_no'] . ',' . $p_party['party_entry']['permission_case_number'] . ', ' . $ad . ', ' . $panstr . ', ' . $p_party['gender']['gender_desc_' . $lang] . '<br>');
                        }
                        $seller_label = $p_party['party_type']['party_type_desc_' . $lang];
                    }
                }
                if ($p_party['party_type']['party_type_flag'] == '0') {//purchaser
                    if ($p_party['party_catg']['authorised_signatory'] == 'N') {

                        if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                            array_push($purchaser, '' . $p_party['saluation']['salutation_desc_' . $lang] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . '</b>, ' . implode(', ', $party_address) . ',' . $p_party['party_entry']['permission_case_number'] . ',  ' . $ad . ', ' . $panstr . ', ' . $p_party['gender']['gender_desc_' . $lang] . '<br>');
                        } else {
                            array_push($purchaser, '' . $p_party['party_entry']['org_name_en'] . '</b>-<b>' . $p_party['saluation']['salutation_desc_' . $lang] . '  </b>   ' . $p_party['party_entry']['party_full_name_en'] . ', ' . implode(', ', $party_address) . ', ' . $p_party['party_entry']['father_full_name_' . $lang] . ' ,' . $p_party['party_entry']['pan_no'] . ',' . $p_party['party_entry']['permission_case_number'] . ', ' . $ad . ', ' . $panstr . ', ' . $p_party['gender']['gender_desc_' . $lang] . '<br>');
                        }

                        $purchaser_label = $p_party['party_type']['party_type_desc_' . $lang];
                    } else {
                        if ($p_party['party_entry']['party_full_name_en'] == NULL) {

                            array_push($purchaser, '' . $p_party['party_entry']['org_name_en'] . ' ' . $p_party['party_entry']['party_fname_en'] . ' ' . $p_party['party_entry']['party_mname_en'] . ' ' . $p_party['party_entry']['party_lname_en'] . '</b>, ' . implode(', ', $party_address) . ',' . $p_party['party_entry']['permission_case_number'] . ',  ' . $ad . ', ' . $panstr . ', ' . $p_party['gender']['gender_desc_' . $lang] . '<br>');
                        } else {
                            array_push($purchaser, '' . $p_party['party_entry']['org_name_en'] . ' ' . "," . $p_party['party_entry']['party_full_name_en'] . '</b>, ' . implode(', ', $party_address) . ', ' . $p_party['party_entry']['father_full_name_' . $lang] . ' , ' . $p_party['party_entry']['pan_no'] . ',' . $p_party['party_entry']['permission_case_number'] . ', ' . $ad . ', ' . $panstr . ', ' . $p_party['gender']['gender_desc_' . $lang] . '<br>');
                        }
                        $purchaser_label = $p_party['party_type']['party_type_desc_' . $lang];
                    }
                }
//                
            }
            //  pr($seller);

            if ($seller || $purchaser) {
                $design = "<table  width=95% border=1 align=center>"
                        /* ."<tr> <td width=30%>  " . $seller_label . "  </td> <td>" . implode('<br>', $seller) . ""; */
                        . "<tr> <td width=30%>  " . $seller_label . "  </td> <td>";
                foreach ($seller as $s) {

                    $sell = explode(',', $s);
                    //pr($sell);
                    $design .= "<table width='100%' border='1'>
                                    <tr>

                                      <td><b>Name</b></td>
                                      <td><b>Gender</b></td>
                                      <td><b>Father/ Husband Name</b></td>
                                      <td><b>Address</b></td>
                                      <td><b>PAN/Form 60/61</b></td>
                                    </tr>
                                    <tr>

                                      <td>" . $sell[0] . "</td>
                                      <td>" . $sell[7] . "</td>
                                      <td>" . $sell[2] . "</td>
                                      <td>" . $sell[1] . "</td>
                                      <td>" . $panstr . "</td>
                                    </tr>
                                  </table>";
                }

                $design .= "</td></tr>  "
                        /* . "<tr> <td> " . $purchaser_label . " </td> <td>" . implode('<br>', $purchaser) . "</td> </tr>" */
                        . "<tr> <td> " . $purchaser_label . " </td> <td>";
                foreach ($purchaser as $p) {
                    $purc = explode(',', $p);
                    //pr($purc);
                    $design .= "<table width='100%' border='1'>
                                <tr>
                                  <td><b>Name</b></td>
                                  <td><b>Gender</b></td>
                                  <td><b>Father/ Husband Name</b></td>
                                  <td><b>Address</b></td>
                                  <td><b>PAN/Form 60/61</b></td>
                                </tr>
                                <tr>
                                  <td>" . $purc[0] . "</td>
                                  <td>" . $purc[7] . "</td>
                                  <td>" . $purc[2] . "</td>
                                  <td>" . $purc[1] . "</td>
                                  <td>" . $panstr . "</td>
                                </tr>
                              </table> ";
                }
                $design .= "</td></tr>"
                        . "</table>"
                        . "<hr style='color: #FA9;height: 5px;'/>";
//                 pr($seller);exit;
                return $design;

//                pr($seller);exit;
            } else {
                return;
            }
            $this->Session->write("randamkey", rand(111111, 999999));
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

//--------------*-----------*----------------*----------------*---\\ End of Pre- Registration Docket(Annexure-11)//--*---------*---------*------------*-----------*-----------*--------------*-----
//--------------*-----------*----------------*----------------*---// Payment Recceipt for Citizen Entry \\--*---------*---------*------------*-----------*-----------*--------------*-----
    public function doc_payment_receipt($payment_id = NULL, $water_mark = "") {
        try {
            $this->autoRender = FALSE;
            $lang = $this->Session->read("sess_langauge");
            $doc_token_no = $this->Session->read('reg_token');
            if (is_numeric($payment_id) && $doc_token_no) {
                //load Models
                array_map([$this, 'loadModel'], ['payment', 'PaymentPreference', 'num_to_words', 'valuation']);
                $pmt_dtl = $this->payment->get_payment_detail($doc_token_no, $payment_id, $lang);
                $acc_head_detail = $this->payment->get_payment_acc_head_detail($doc_token_no, $payment_id);

                // $acc_head_detail= $this->payment->get_account_wise_payment($doc_token_no);

                $arr = array_map(function($el) {
                    return $el['item']['fee_item_desc_en'];
                }, $acc_head_detail);

                if ($pmt_dtl && $acc_head_detail) {
                    $html_design = "<h1 align=center> CHALLEN <br/></h1> "
                            . "<table width=100% >"
                            . "<tr> <td width=50%> <b>Receipt No. : </b>" . (($acc_head_detail[0]['receipt']['receipt_id']) ? $acc_head_detail[0]['receipt']['receipt_id'] : $pmt_dtl['payment']['payment_id']) . "</td><td width=50% align='right'> <b>MTR Form Number -6</b></td> </tr>"
                            . "</table>"
                            . "<style>table {border-collapse: collapse;} td{padding:5px;}</style>"
                            . "<table width=100% border=1>"
                            . "<tr> <td width=50%> <b>GRN : </b>" . (($pmt_dtl['payment']['grn_no']) ? $pmt_dtl['payment']['grn_no'] : '-') . "</td><b>BARCODE : </b>" . "<td> <b>Date : </b> " . date('d-m-Y', strtotime(($pmt_dtl['payment']['pdate']) ? $pmt_dtl['payment']['pdate'] : date("Y-m-d"))) . "</td> </tr>"
                            . "</table>";

                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td width=50%> <b>Department : </b> Inspector General of Registration</td> <td align=center> <h3> Payment Detail </td> </tr>"
                            . "<tr> <td rowspan=2> <b>Type of Payment : </b> <br><ul><li>" . implode('<li>', $arr) . "</ul></td> <td> <b> TAX ID(if Any)</b>" . "</td></tr>"
                            . "<tr> <td> <b>PAN No.(if Applicable)<b>" . "</td></tr>"
                            . "</table><br/>";

                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td width=50%> <b>Office Name : </b>" . $pmt_dtl['office']['office_name_en'] . "</td> <td> <b> Full Name : </b>" . $pmt_dtl['payment']['payee_fname_en'] . ' ' . $pmt_dtl['payment']['payee_mname_en'] . ' ' . $pmt_dtl['payment']['payee_lname_en'] . " </td> </tr>"
                            . "<tr> <td> <b>Year : <b>" . "</td> <td> <b> Address : </b>" . " </td> </tr>"
                            . "</table> <br/>";
                    // for Account Head Detail
                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td width=50% align=center> <b>Account Head Details <b></td> <td align=center> <b> Amount in Rupees </b></td></tr>";
                    $total = 0;

                    foreach ($acc_head_detail as $ahd) {
                        $html_design .= "<tr> <td> <b>" . $ahd['item']['fee_item_desc_en'] . " <b>" . "</td> <td align=right> &#8377;" . $this->valuation->format_money_india(number_format((float) $ahd['payment']['pamount'], 2, '.', '')) . " </td></tr>";
                        $total += $ahd['payment']['pamount'];
                    }

                    $html_design .= "<tr> <td align=center> <b>Total <b> </td> <td align=right> <b> &#8377;" . $this->valuation->format_money_india(number_format((float) $total, 2, '.', '')) . "</b> </td> </tr>"
                            . "<tr> <td colspan=2> <b>Amount in Words : </b> " . $this->num_to_words->in_words($total) . "Rupees only. </td> </tr>"
                            . "</table> <br/>";

                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td> <b>Remarks (if Any) : </b> <br>" . "</td></tr>"
                            . "</table> <br/>";

                    $payment_detail = "<table width=100% border=1>"
                            . "<tr> <td colspan=2 align=center><b>Cheque/DD Details</b></tr>"
                            . "<tr> <td>Cheque/DD No</td> <td>" . "</td> </tr>"
                            . "<tr> <td>Name of Bank</td> <td align=center>" . (($pmt_dtl['bank']['bank_name_' . $lang]) ? $pmt_dtl['bank']['bank_name_' . $lang] : ' - ') . "</td> </tr>"
                            . "<tr> <td>Bank Branch</td> <td align=center>" . (($pmt_dtl['bank_branch']['branch_name_' . $lang]) ? $pmt_dtl['bank_branch']['branch_name_' . $lang] : ' - ') . "</td> </tr>"
                            . "</table>";

                    $receiving_bank = "<table width=100% border=1>"
                            . "<tr> <td width=25%><b>Bank CIN</b></td> <td width=30%>" . (($pmt_dtl['payment']['cin_no']) ? $pmt_dtl['payment']['cin_no'] : " - " ) . "</td> <td width=20%><b>REF No.</b></td width=25%> <td>" . "</td> </tr>"
                            . "<tr> <td colspan=2>Date</td> <td colspan=2>" . date('d-m-Y', strtotime(($pmt_dtl['payment']['pdate']) ? $pmt_dtl['payment']['pdate'] : date("Y-m-d"))) . "</td> </tr>"
                            . "<tr> <td colspan=2>Bank Branch</td> <td colspan=2>" . "</td> </tr>"
                            . "<tr> <td colspan=2>Scroll No., Date</td> <td colspan=2>" . "</td> </tr>"
                            . "</table>";
                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td align=center> <b>Payment Detail<b></td> <td align=center> <b>FOR USE IN RECEIVING BANK  </b></td> </tr>";
                    $html_design .= ""
                            . "<tr> <td width=50%>" . $payment_detail . "</td> <td width=50%>" . $receiving_bank . "</td> </tr>"
                            . "</table>";

                    $this->create_pdf($html_design, "doc_payment_receipt_" . $payment_id, 'A4', $water_mark);
                } else {
                    return 'no record found';
                }
            } else {
                return 'Invalid Payment Id';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

//--------------*-----------*----------------*----------------*---\\ End of Payment Receipt  //--*---------*---------*------------*-----------*-----------*--------------*-----
//--------------*-----------*----------------*----------------*---//  Registration Summary1   \\--*---------*---------*------------*-----------*-----------*--------------*-----
    public function rpt_reg_summary1($doc_token_no = NULL, $view_flag = NULL) {
        try {
            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'fee_exemption', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));
                $rpt_data = $this->payment->Query("select geninfo.presentation_date,app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    where  geninfo.token_no=?", array($doc_token_no));
                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_en'];
                } else {
                    $off = NULL;
                }

                $market_value = $consideration_amount = 0;
                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));
                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('fee_calc_id' => $fee_calc_ids
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    // $this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));

                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
                                                                ngdrstab_trn_fee_calculation_detail stampd 
                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
                                                                WHERE  stamp.token_no=?  
                                                                AND stamp.delete_flag='N' 
                                                                AND feeitem.fee_param_type_id=2 
                                                                group by feeitem.fee_item_id
                                                                order by feeitem.fee_preference ASC
                                                                ", array($doc_token_no));
//               pr($feedetails);exit;
//                        pr($payment);exit;

                $receipt_no = $this->ReceiptCounter->query("select receipt_id from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
//                pr($receipt_no);exit;
                if (!empty($receipt_no)) {
                    $rec_no = $receipt_no[0][0]['receipt_id'];
                } else {
                    $rec_no = NULL;
                }
                $receipt_detail = "<table style='text-align:left;' width='100%'>"
                        . "<tr><td colspan=2><b>" . $rptlabels[10] . " : </b> $rec_no</td></tr>"
                        . "<tr><td colspan=2><b>" . $rptlabels[11] . "</b> : " . date('d-m-Y') . "</td>"
                        . "</tr>"
                        . "<tr>"
                        . "<td colspan=2><b>" . $rptlabels[12] . ":</b> " . (($rpt_data[0][0]['presenter_name']) ? $rpt_data[0][0]['presenter_name'] : '-') . " </td>"
                        . "</tr>";
                $total = 0;
                foreach ($payment_detail as $payment) {
                    $receipt_detail .= "<tr><td><b>" . $payment[0]['fee_item_desc_' . $lang] . " </b></td> <td width=25%> &#8377;" . $payment[0]['pamount'] . "</td> </tr>";
                    $total += $payment[0]['pamount'];
                }
                $receipt_detail .= "<tr><td colspan=2><hr></td></tr>";
                $receipt_detail .= "<tr><td><b>" . $rptlabels[14] . " </b></td> <td width=25%> &#8377;" . $total . "</td> </tr>";
                $receipt_detail .= "</table>";

                $acknowledgement = "<p style='text-align:left;'>" . $rptlabels[7] . " " . date('d-m-Y') . " " . $rptlabels[8] . " at " . $off . " ";
                $signiture = " " . $rptlabels[9] . " "
                        . "<br><br><br>"
                        . $off . " </p>";

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>"
                        . "<tr> "
                        . "<td colspan=2><h3 style='border:1px solid black; padding:5px;'>$rptlabels[1]</h3> </td> </tr>"
                        . "<tr><td style='text-align:left'> Date :-" . date('d-M-Y') . " </td> "
                        . "<td colspan=2 style='text-align:right;'>" . ($rpt_data[0][0]['doc_reg_no'] ? "Office/" . $rpt_data[0][0]['doc_reg_no'] : '') . "</td> </tr>"
                        . "</tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr> <td>"
                        . "<ul style='text-align:left;'>"
                        . "<li>" . $rptlabels[3] . ":  &#8377;" . $market_value . "</li>"
                        . "<li>" . $rptlabels[17] . ":  &#8377;" . $consideration_amount . "</li>"
                        . "<li>" . $rptlabels[4] . ":  &#8377;" . $total . "</li>"
                        . "</ul>"
                        . "</td></tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr>"
                        . "<td width='50%'>" . $acknowledgement . '<br>' . $signiture . "</td>"
                        . "<td> " . $receipt_detail . "</td>"
                        . "</tr>"
                        . "</table> <br>"
                        . "<hr>"
                ;
//            ====================================================View Summary 1(Yogesh)=======================================================================

                $feedetails_design = "<table width=100% border=1   align='center' cellpadding='5' cellspacing='0' style='border-collapse: collapse'><tr>"
                        . "<th>" . $rptlabels[78] . "</th>"
                        . "<th>" . $rptlabels[79] . "</th>"
                        . "<th>" . $rptlabels[80] . "</th>"
                        . "<th>" . $rptlabels[81] . "</th>"
                        . "<th>" . $rptlabels[82] . "</th>"
                        . "<th>" . $rptlabels[83] . "</th>"
                        . "<th>" . $rptlabels[85] . "</th>"
                        . "<th>" . $rptlabels[84] . "</th>"
                        . "</tr>";

                $payment1 = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
                $paymentfields = $this->PaymentFields->find('list', array('fields' => array('field_name', 'field_name_desc_en'), 'order' => 'srno ASC'));
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));
                $sdamount = 0;
                $paidamount = 0;
                foreach ($feedetails as $fee) {
                    $sdamount += $fee[0]['totalsd'];
                    $amount = 0;
                    foreach ($payment1 as $paydetails) {
                        //  pr($paydetails);exit;              
                        $paydetails = $paydetails[0];

                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $amount += $paydetails['pamount'];
                            $paidamount += $paydetails['pamount'];
                            //$test++;
                        }
                    }
                    $feedetails_design .= "<tr>"
                            . "<td> &nbsp;" . $fee[0]['fee_item_desc_en'] . "</td>"
                            . "<td> &nbsp;" . $fee[0]['totalsd'] . "</td>"
                            . "<td> &nbsp;" . $amount . "</td>"
                            . "<td> &nbsp;" . ($fee[0]['totalsd'] - $amount) . "</td>";

                    $extrarow = 0;
                    foreach ($payment1 as $paydetails) {
                        // pr($paydetails);exit;
                        $paydetails = $paydetails[0];
                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $extrarow++;
                            if ($extrarow > 1) {
                                $feedetails_design .= "</tr><tr><td colspan='4'></td>";
                            }
                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {



                                $feedetails_design .= ""
                                        . "<td> &nbsp;" . $paydetails['payment_mode_desc_en'] . "</td>"
                                        . "<td> &nbsp;" . $paydetails['payee_fname_en'] . " " . $paydetails['payee_mname_en'] . " " . $paydetails['payee_lname_en'] . "</td>"
                                        . "<td> &nbsp;<ul class='list-inline'>";
                                foreach ($paymentfields_trn as $key => $singletrnfield) {
                                    if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
                                        $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
                                    }
                                }
                                $feedetails_design .= "</ul></td><td> " . $paydetails['pamount'] . " </td>";
                            }
                        }
                    }
                    $feedetails_design .= "</tr>";
                }
                $total_amount = $sdamount - $paidamount;
                $feedetails_design .= "<tr>"
                        . "<td>Sub Total</td>"
                        . "<td> $sdamount </td>"
                        . "<td> $paidamount </td>"
                        . "<td> $total_amount </td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
//                    . "<td></td>"
                        . "</tr>";
                $feedetails_design .= "</table>";
                $feedetails_design .= "<table>"
                        . "<tr><td>"
                        . "<p style='text-align:left'>"
                        . "<b>" . $rptlabels[15] . " : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/>"
                        . "</p>"
                        . "</td></tr>"
                        . "</table>";
                $exemptions = $this->fee_exemption->query("select feerule.fee_rule_desc_$lang,fee_exe.exemption_amt from ngdrstab_trn_fee_exemption as fee_exe, ngdrstab_mst_article_fee_rule feerule where fee_exe.fee_rule_id=feerule.fee_rule_id and  fee_exe.token_no=?", array($doc_token_no));
                if (!empty($exemptions)) {
                    $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='center'> <b>" . __('lblExemptionFeerule') . "<b>   </td><td width=50% align='center'> <b>" . __('lblFeeExemption') . " </b></td></tr></table>";
                    foreach ($exemptions as $exemption1) {

                        $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='left'>" . $exemption1[0]['fee_rule_desc_' . $lang] . "</td><td width=50%>" . $exemption1[0]['exemption_amt'] . "</td></tr></table>";
                    }
                }

                if ($view_flag == 'pdf' || $view_flag == 'D') {
                    $this->create_pdf($html_design . $feedetails_design, 'doc_reg_summary1_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design . $feedetails_design;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary1_4($doc_token_no = NULL, $view_flag = NULL) {
        try {
            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'fee_exemption', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));
                $rpt_data = $this->payment->Query("select geninfo.presentation_date,geninfo.article_id,app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name, party_full_name_$lang as party_full_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    where  geninfo.token_no=?", array($doc_token_no));

                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_en'];
                } else {
                    $off = NULL;
                }

                if (!empty($rpt_data)) {
                    $article_id = $rpt_data[0][0]['article_id'];
                }

                $market_value = $consideration_amount = 0;

                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));

                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('article_id' => $article_id, 'delete_flag' => 'N', 'token_no' => $doc_token_no
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    // $this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
//                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
//                                                                ngdrstab_trn_fee_calculation_detail stampd 
//                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
//                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
//                                                                WHERE  stamp.token_no=?  
//                                                                AND stamp.delete_flag='N' 
//                                                                AND feeitem.fee_param_type_id=2 
//                                                                group by feeitem.fee_item_id
//                                                                order by feeitem.fee_preference ASC
//                                                                ", array($doc_token_no));

                $feedetails = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rpt_data[0][0]['article_id']);
//               pr($feedetails);exit;
//                        pr($payment);exit;
                $receipt_no = $this->ReceiptCounter->query("select receipt_id from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
//                pr($receipt_no);exit;
                if (!empty($receipt_no)) {
                    $rec_no = $receipt_no[0][0]['receipt_id'];
                } else {
                    $rec_no = NULL;
                }
                $receipt_detail = "<table style='text-align:left;' width='100%'>"
                        . "<tr><td colspan=2><b>" . $rptlabels[10] . " : </b> $rec_no</td></tr>"
                        . "<tr><td colspan=2><b>" . $rptlabels[11] . "</b> : " . date('d-m-Y') . "</td>"
                        . "</tr>"
                        . "<tr>"
                        . "<td colspan=2><b>" . $rptlabels[12] . ":</b> " . (($rpt_data[0][0]['presenter_name']) ? $rpt_data[0][0]['presenter_name'] : $rpt_data[0][0]['party_full_name']) . " </td>"
                        . "</tr>";
                $total = 0;
                foreach ($payment_detail as $payment) {
                    $receipt_detail .= "<tr><td><b>" . $payment[0]['fee_item_desc_' . $lang] . " </b></td> <td width=25%> &#8377;" . $payment[0]['pamount'] . "</td> </tr>";
                    $total += $payment[0]['pamount'];
                }
                $receipt_detail .= "<tr><td colspan=2><hr></td></tr>";
                $receipt_detail .= "<tr><td><b>" . $rptlabels[14] . " </b></td> <td width=25%> &#8377;" . $total . "</td> </tr>";
                $receipt_detail .= "</table>";

                $acknowledgement = "<p style='text-align:left;'>" . $rptlabels[7] . " " . date('d-m-Y') . " " . $rptlabels[8] . " at " . $off . " ";
                $signiture = " " . $rptlabels[9] . " "
                        . "<br><br><br>"
                        . $off . " </p>";

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>"
//                        . "<tr> "
//                         . "<td><h3 align=center style='border:1px solid black; padding:5px;'>" . $rptlabels[1] . "</h3> </td></tr> "
                        . "<tr><td colspan=2 style='text-align:center;'><h3 style='border:1px solid black; padding:5px;'>$rptlabels[1]</h3> </td> </tr>"
                        . "<tr><td style='text-align:left'> Date :-" . date('d-M-Y') . " </td> "
                        . "<td colspan=2 style='text-align:right;'>" . ($rpt_data[0][0]['doc_reg_no'] ? "Office/" . $rpt_data[0][0]['doc_reg_no'] : '') . "</td> </tr>"
//                        . "</tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr> <td>"
                        . "<ul style='text-align:left;'>"
                        . "<li>" . $rptlabels[3] . ":  &#8377;" . round($market_value) . "/-</li>"
                        . "<li>" . $rptlabels[17] . ":  &#8377;" . $consideration_amount . " /-</li>"
                        . "<li>" . $rptlabels[4] . ":  &#8377;" . $total . " /-</li>"
                        . "</ul>"
                        . "</td></tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr>"
                        . "<td width='50%'>" . $acknowledgement . '<br>' . $signiture . "</td>"
                        . "<td> " . $receipt_detail . "</td>"
                        . "</tr>"
                        . "</table> <br>"
                        . "<hr>"
                ;
//            ====================================================View Summary 1(Yogesh)=======================================================================

                $feedetails_design = "<table width=100% border=1   align='center' cellpadding='5' cellspacing='0' style='border-collapse: collapse'><tr>"
                        . "<th>" . $rptlabels[78] . "</th>"
                        . "<th>" . $rptlabels[79] . "</th>"
                        . "<th>" . $rptlabels[80] . "</th>"
                        . "<th>" . $rptlabels[81] . "</th>"
                        . "<th>" . $rptlabels[82] . "</th>"
                        . "<th>" . $rptlabels[83] . "</th>"
                        . "<th>" . $rptlabels[85] . "</th>"
                        . "<th>" . $rptlabels[84] . "</th>"
                        . "</tr>";

                $payment1 = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
                $paymentfields = $this->PaymentFields->find('list', array('fields' => array('field_name', 'field_name_desc_en'), 'order' => 'srno ASC'));
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));
                $sdamount = 0;
                $paidamount = 0;
                foreach ($feedetails as $fee) {
                    $sdamount += $fee[0]['totalsd'];
                    $amount = 0;
                    foreach ($payment1 as $paydetails) {
                        //  pr($paydetails);exit;              
                        $paydetails = $paydetails[0];

                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $amount += $paydetails['pamount'];
                            $paidamount += $paydetails['pamount'];
                            //$test++;
                        }
                    }
                    $feedetails_design .= "<tr>"
                            . "<td> &nbsp;" . $fee[0]['fee_item_desc_' . $lang] . "</td>"
                            . "<td> &nbsp;" . $fee[0]['totalsd'] . "</td>"
                            . "<td> &nbsp;" . $amount . "</td>"
                            . "<td> &nbsp;" . ($fee[0]['totalsd'] - $amount) . "</td>";

                    $extrarow = 0;
                    foreach ($payment1 as $paydetails) {
                        // pr($paydetails);exit;
                        $paydetails = $paydetails[0];
                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $extrarow++;
                            if ($extrarow > 1) {
                                $feedetails_design .= "</tr><tr><td colspan='4'></td>";
                            }
                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {



                                $feedetails_design .= ""
                                        . "<td> &nbsp;" . $paydetails['payment_mode_desc_en'] . "</td>"
                                        . "<td> &nbsp;" . $paydetails['payee_fname_en'] . " " . $paydetails['payee_mname_en'] . " " . $paydetails['payee_lname_en'] . "</td>"
                                        . "<td> &nbsp;<ul class='list-inline'>";
                                foreach ($paymentfields_trn as $key => $singletrnfield) {
                                    if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
                                        $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
                                    }
                                }
                                $feedetails_design .= "</ul></td><td> " . $paydetails['pamount'] . " </td>";
                            }
                        }
                    }
                    $feedetails_design .= "</tr>";
                }
                $total_amount = $sdamount - $paidamount;
                $feedetails_design .= "<tr>"
                        . "<td>Sub Total</td>"
                        . "<td> $sdamount </td>"
                        . "<td> $paidamount </td>"
                        . "<td> $total_amount </td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
//                    . "<td></td>"
                        . "</tr>";
                $feedetails_design .= "</table>";
                $feedetails_design .= "<table>"
                        . "<tr><td>"
                        . "<p style='text-align:left'>"
                        . "<b>" . $rptlabels[15] . " : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/>"
                        . "</p>"
                        . "</td></tr>"
                        . "</table>";
                $exemptions = $this->fee_exemption->query("select feerule.fee_rule_desc_$lang,fee_exe.exemption_amt from ngdrstab_trn_fee_exemption as fee_exe, ngdrstab_mst_article_fee_rule feerule where fee_exe.fee_rule_id=feerule.fee_rule_id and  fee_exe.token_no=?", array($doc_token_no));
                if (!empty($exemptions)) {
                    $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='center'> <b>" . __('lblExemptionFeerule') . "<b>   </td><td width=50% align='center'> <b>" . __('lblFeeExemption') . " </b></td></tr></table>";
                    foreach ($exemptions as $exemption1) {

                        $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='left'>" . $exemption1[0]['fee_rule_desc_' . $lang] . "</td><td width=50%>" . $exemption1[0]['exemption_amt'] . " /- </td></tr></table>";
                    }
                }

                if ($view_flag == 'pdf' || $view_flag == 'D') {
                    $this->create_pdf($html_design . $feedetails_design, 'doc_reg_summary1_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design . $feedetails_design;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary1_27($doc_token_no = NULL, $view_flag = NULL) {
        try {
            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'fee_exemption', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));

                $rpt_data = $this->payment->Query("select geninfo.presentation_date,geninfo.article_id,app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name, party_full_name_$lang as party_full_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    where  geninfo.token_no=?", array($doc_token_no));

                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_' . $lang),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_' . $lang];
                } else {
                    $off = NULL;
                }

                $market_value = $consideration_amount = 0;
                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));
                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('fee_calc_id' => $fee_calc_ids
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    // $this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));

                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
                                                                ngdrstab_trn_fee_calculation_detail stampd 
                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
                                                                WHERE  stamp.token_no=?  
                                                                AND stamp.delete_flag='N' 
                                                                AND feeitem.fee_param_type_id=2 
                                                                group by feeitem.fee_item_id
                                                                order by feeitem.fee_preference ASC
                                                                ", array($doc_token_no));

//               pr($feedetails);exit;
//                        pr($payment);exit;
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                if (!empty($receipt_no)) {
                    $rec_no = $receipt_no[0]['receipt_number'];
                } else {
                    $rec_no = NULL;
                }
                $receipt_detail = "<table style='text-align:left;' width='100%'>"
                        . "<tr><td colspan=2><b>" . $rptlabels[10] . " : </b> " . $rec_no . "</td></tr>"
                        . "<tr><td colspan=2><b>" . $rptlabels[11] . "</b> : " . date('d-m-Y') . "</td>"
                        . "</tr>"
                        . "<tr>"
                        . "<td colspan=2><b>" . $rptlabels[12] . ":</b> " . (($rpt_data[0][0]['presenter_name']) ? $rpt_data[0][0]['presenter_name'] : $rpt_data[0][0]['party_full_name']) . " </td>"
                        . "</tr>";
                $total = 0;
                foreach ($payment_detail as $payment) {
                    $receipt_detail .= "<tr><td><b>" . $payment[0]['fee_item_desc_' . $lang] . " </b></td> <td width=25%> &#8377;" . $payment[0]['pamount'] . "</td> </tr>";
                    $total += $payment[0]['pamount'];
                }
                $receipt_detail .= "<tr><td colspan=2><hr></td></tr>";
                $receipt_detail .= "<tr><td><b>" . $rptlabels[14] . " </b></td> <td width=25%> &#8377;" . $total . "</td> </tr>";
                $receipt_detail .= "</table>";

                $acknowledgement = "<p style='text-align:left;'>" . $rptlabels[7] . " " . date('d-m-Y') . " " . $rptlabels[8] . " at " . $off . " ";
                $signiture = " " . $rptlabels[9] . " "
                        . "<br><br><br>"
                        . $off . " </p>";

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>"
                        . "<tr> "
                        . "<td colspan=2 style='text-align:center;'><h3 style='border:1px solid black; padding:5px;'>$rptlabels[1]</h3> </td> </tr>"
                        . "<tr><td style='text-align:left'> Date :-" . date('d-M-Y') . " </td> "
                        . "<td colspan=2 style='text-align:right;'>" . ($rpt_data[0][0]['doc_reg_no'] ? "Office/" . $rpt_data[0][0]['doc_reg_no'] : '') . "</td> </tr>"
                        . "</tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr> <td>"
                        . "<ul style='text-align:left;'>"
                        . "<li>" . $rptlabels[3] . ":  &#8377;" . $market_value . "</li>"
                        . "<li>" . $rptlabels[17] . ":  &#8377;" . $consideration_amount . "</li>"
                        . "<li>" . $rptlabels[4] . ":  &#8377;" . $total . "</li>"
                        . "</ul>"
                        . "</td></tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr>"
                        . "<td width='50%'>" . $acknowledgement . '<br>' . $signiture . "</td>"
                        . "<td> " . $receipt_detail . "</td>"
                        . "</tr>"
                        . "</table> <br>"
                        . "<hr>";
//            ====================================================View Summary 1(Yogesh)=======================================================================

                $feedetails_design = "<table width=100% border=1   align='center' cellpadding='5' cellspacing='0' style='border-collapse: collapse'><tr>"
                        . "<th>" . $rptlabels[78] . "</th>"
                        . "<th>" . $rptlabels[79] . "</th>"
                        . "<th>" . $rptlabels[80] . "</th>"
                        . "<th>" . $rptlabels[81] . "</th>"
                        . "<th>" . $rptlabels[82] . "</th>"
                        . "<th>" . $rptlabels[83] . "</th>"
                        . "<th>" . $rptlabels[85] . "</th>"
                        . "<th>" . $rptlabels[84] . "</th>"
                        . "</tr>";

                $payment1 = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
                $paymentfields = $this->PaymentFields->find('list', array('fields' => array('field_name', 'field_name_desc_en'), 'order' => 'srno ASC'));
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));
                $sdamount = 0;
                $paidamount = 0;
                foreach ($feedetails as $fee) {
                    $sdamount += $fee[0]['totalsd'];
                    $amount = 0;
                    foreach ($payment1 as $paydetails) {
                        //  pr($paydetails);exit;              
                        $paydetails = $paydetails[0];

                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $amount += $paydetails['pamount'];
                            $paidamount += $paydetails['pamount'];
                            //$test++;
                        }
                    }
                    $feedetails_design .= "<tr>"
                            . "<td> &nbsp;" . $fee[0]['fee_item_desc_en'] . "</td>"
                            . "<td> &nbsp;" . $fee[0]['totalsd'] . "</td>"
                            . "<td> &nbsp;" . $amount . "</td>"
                            . "<td> &nbsp;" . ($fee[0]['totalsd'] - $amount) . "</td>";

                    $extrarow = 0;
                    foreach ($payment1 as $paydetails) {
                        // pr($paydetails);exit;
                        $paydetails = $paydetails[0];
                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $extrarow++;
                            if ($extrarow > 1) {
                                $feedetails_design .= "</tr><tr><td colspan='4'></td>";
                            }
                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {



                                $feedetails_design .= ""
                                        . "<td> &nbsp;" . $paydetails['payment_mode_desc_en'] . "</td>"
                                        . "<td> &nbsp;" . $paydetails['payee_fname_en'] . " " . $paydetails['payee_mname_en'] . " " . $paydetails['payee_lname_en'] . "</td>"
                                        . "<td> &nbsp;<ul class='list-inline'>";
                                foreach ($paymentfields_trn as $key => $singletrnfield) {
                                    if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
                                        $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
                                    }
                                }
                                $feedetails_design .= "</ul></td><td> " . $paydetails['pamount'] . " </td>";
                            }
                        }
                    }
                    $feedetails_design .= "</tr>";
                }
                $total_amount = $sdamount - $paidamount;
                $feedetails_design .= "<tr>"
                        . "<td>Sub Total</td>"
                        . "<td> $sdamount </td>"
                        . "<td> $paidamount </td>"
                        . "<td> $total_amount </td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
//                    . "<td></td>"
                        . "</tr>";
                $feedetails_design .= "</table><br><br><br>";
                $feedetails_design .= "<table width=100%> "
                        . "<tr> <td style='text-align:left'>" . $rptlabels[257] . " ," . $off . " </td><td style='text-align:right'>" . $rptlabels[257] . "  ," . $off . "</td></tr>"
                        . "</table>";
                $feedetails_design .= "<hr/>";

                $feedetails_design .= "<table>"
                        . "<tr><td>"
                        . "<p style='text-align:left'>"
                        . "<b>" . $rptlabels[15] . " : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/>"
                        . "</p>"
                        . "</td></tr>"
                        . "</table>";



                $exemptions = $this->fee_exemption->query("select feerule.fee_rule_desc_$lang,fee_exe.exemption_amt from ngdrstab_trn_fee_exemption as fee_exe, ngdrstab_mst_article_fee_rule feerule where fee_exe.fee_rule_id=feerule.fee_rule_id and  fee_exe.token_no=?", array($doc_token_no));
                if (!empty($exemptions)) {
                    $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='center'> <b>" . __('lblExemptionFeerule') . "<b>   </td><td width=50% align='center'> <b>" . __('lblFeeExemption') . " </b></td></tr></table>";
                    foreach ($exemptions as $exemption1) {

                        $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='left'>" . $exemption1[0]['fee_rule_desc_' . $lang] . "</td><td width=50%>" . $exemption1[0]['exemption_amt'] . "</td></tr></table>";
                    }
                }


                $feedetails_design .= "<table width=100%> "
                        . "<tr> <td style='text-align:left'>" . $rptlabels[256] . "</td></tr>"
                        . "</table><br>";


                if ($rpt_data[0][0]['stamp1_date'] != NULL) {

                    $feedetails_design .= "<table width=100%> "
                            . "<tr> <td style='text-align:left'>" . $rptlabels[254] . " 1 at " . $rptlabels[255] . " " . date('d-M-Y h:m:s a', strtotime($rpt_data[0][0]['stamp1_date'])) . "</td></tr></table>";
                }
                if ($rpt_data[0][0]['stamp2_date'] != NULL) {

                    $feedetails_design .= "<table width=100%> "
                            . "<tr> <td style='text-align:left'>" . $rptlabels[254] . " 2 at " . $rptlabels[255] . " " . date('d-M-Y h:m:s a', strtotime($rpt_data[0][0]['stamp2_date'])) . " </td></tr></table>";
                }

                if ($view_flag == 'pdf' || $view_flag == 'D') {
                    $this->create_pdf($html_design . $feedetails_design, 'doc_reg_summary1_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design . $feedetails_design;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary1_31($doc_token_no = NULL, $view_flag = NULL) {
        try {
            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'fee_exemption', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));

                $rpt_data = $this->payment->Query("select geninfo.presentation_date,geninfo.article_id,app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name, party_full_name_$lang as party_full_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    where  geninfo.token_no=?", array($doc_token_no));
                // pr($rpt_data);
                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_en'];
                } else {
                    $off = NULL;
                }

                if (!empty($rpt_data)) {
                    $article_id = $rpt_data[0][0]['article_id'];
                }

                $market_value = $consideration_amount = 0;

                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));

                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('article_id' => $article_id, 'delete_flag' => 'N', 'token_no' => $doc_token_no
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    // $this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
//                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
//                                                                ngdrstab_trn_fee_calculation_detail stampd 
//                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
//                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
//                                                                WHERE  stamp.token_no=?  
//                                                                AND stamp.delete_flag='N' 
//                                                                AND feeitem.fee_param_type_id=2 
//                                                                group by feeitem.fee_item_id
//                                                                order by feeitem.fee_preference ASC
//                                                                ", array($doc_token_no));

                $feedetails = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rpt_data[0][0]['article_id']);
//               pr($feedetails);exit;
//                        pr($payment);exit;
                $receipt_no = $this->ReceiptCounter->query("select receipt_id from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
//                pr($receipt_no);exit;
                if (!empty($receipt_no)) {
                    $rec_no = $receipt_no[0][0]['receipt_id'];
                } else {
                    $rec_no = NULL;
                }
                $receipt_detail = "<table style='text-align:left;' width='100%'>"
                        . "<tr><td colspan=2><b>" . $rptlabels[10] . " : </b> $rec_no</td></tr>"
                        . "<tr><td colspan=2><b>" . $rptlabels[11] . "</b> : " . date('d-m-Y') . "</td>"
                        . "</tr>"
                        . "<tr>"
                        . "<td colspan=2><b>" . $rptlabels[12] . ":</b> " . (($rpt_data[0][0]['presenter_name']) ? $rpt_data[0][0]['presenter_name'] : $rpt_data[0][0]['party_full_name']) . " </td>"
                        . "</tr>";
                $total = 0;
                foreach ($payment_detail as $payment) {
                    $receipt_detail .= "<tr><td><b>" . $payment[0]['fee_item_desc_' . $lang] . " </b></td> <td width=25%> &#8377;" . $payment[0]['pamount'] . "</td> </tr>";
                    $total += $payment[0]['pamount'];
                }
                $receipt_detail .= "<tr><td colspan=2><hr></td></tr>";
                $receipt_detail .= "<tr><td><b>" . $rptlabels[14] . " </b></td> <td width=25%> &#8377;" . $total . "</td> </tr>";
                $receipt_detail .= "</table>";

                $acknowledgement = "<p style='text-align:left;'>" . $rptlabels[7] . " " . date('d-m-Y') . " " . $rptlabels[8] . " at " . $off . " ";
                $signiture = " " . $rptlabels[9] . " "
                        . "<br><br><br>"
                        . $off . " </p>";

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>"
//                        . "<tr> "
//                         . "<td><h3 align=center style='border:1px solid black; padding:5px;'>" . $rptlabels[1] . "</h3> </td></tr> "
                        . "<tr><td colspan=2><h3 style='border:1px solid black; padding:5px;'>$rptlabels[1]</h3> </td> </tr>"
                        . "<tr><td style='text-align:left'> Date :-" . date('d-M-Y') . " </td> "
                        . "<td colspan=2 style='text-align:right;'>" . ($rpt_data[0][0]['doc_reg_no'] ? "Office/" . $rpt_data[0][0]['doc_reg_no'] : '') . "</td> </tr>"
//                        . "</tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr> <td>"
                        . "<ul style='text-align:left;'>"
                        . "<li>" . $rptlabels[3] . ":  &#8377;" . round($market_value) . "/-</li>"
                        . "<li>" . $rptlabels[17] . ":  &#8377;" . $consideration_amount . " /-</li>"
                        . "<li>" . $rptlabels[4] . ":  &#8377;" . $feedetails[0][0]['totalsd'] . " /-</li>"
                        . "</ul>"
                        . "</td></tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr>"
                        . "<td width='50%'>" . $acknowledgement . '<br>' . $signiture . "</td>"
                        . "<td> " . $receipt_detail . "</td>"
                        . "</tr>"
                        . "</table> <br>"
                        . "<hr>"
                ;
//            ====================================================View Summary 1(Yogesh)=======================================================================

                $feedetails_design = "<table width=100% border=1   align='center' cellpadding='5' cellspacing='0' style='border-collapse: collapse'><tr>"
                        . "<th>" . $rptlabels[78] . "</th>"
                        . "<th>" . $rptlabels[79] . "</th>"
                        . "<th>" . $rptlabels[80] . "</th>"
                        . "<th>" . $rptlabels[81] . "</th>"
                        . "<th>" . $rptlabels[82] . "</th>"
                        . "<th>" . $rptlabels[83] . "</th>"
                        . "<th>" . $rptlabels[85] . "</th>"
                        . "<th>" . $rptlabels[84] . "</th>"
                        . "</tr>";

                $payment1 = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
                $paymentfields = $this->PaymentFields->find('list', array('fields' => array('field_name', 'field_name_desc_en'), 'order' => 'srno ASC'));
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));
                $sdamount = 0;
                $paidamount = 0;
                foreach ($feedetails as $fee) {
                    $sdamount += $fee[0]['totalsd'];
                    $amount = 0;
                    foreach ($payment1 as $paydetails) {
                        //  pr($paydetails);exit;              
                        $paydetails = $paydetails[0];

                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $amount += $paydetails['pamount'];
                            $paidamount += $paydetails['pamount'];
                            //$test++;
                        }
                    }
                    $feedetails_design .= "<tr>"
                            . "<td> &nbsp;" . $fee[0]['fee_item_desc_' . $lang] . "</td>"
                            . "<td> &nbsp;" . $fee[0]['totalsd'] . "</td>"
                            . "<td> &nbsp;" . $amount . "</td>"
                            . "<td> &nbsp;" . ($fee[0]['totalsd'] - $amount) . "</td>";

                    $extrarow = 0;
                    foreach ($payment1 as $paydetails) {
                        // pr($paydetails);exit;
                        $paydetails = $paydetails[0];
                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $extrarow++;
                            if ($extrarow > 1) {
                                $feedetails_design .= "</tr><tr><td colspan='4'></td>";
                            }
                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {



                                $feedetails_design .= ""
                                        . "<td> &nbsp;" . $paydetails['payment_mode_desc_en'] . "</td>"
                                        . "<td> &nbsp;" . $paydetails['payee_fname_en'] . " " . $paydetails['payee_mname_en'] . " " . $paydetails['payee_lname_en'] . "</td>"
                                        . "<td> &nbsp;<ul class='list-inline'>";
                                foreach ($paymentfields_trn as $key => $singletrnfield) {
                                    if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
                                        $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
                                    }
                                }
                                $feedetails_design .= "</ul></td><td> " . $paydetails['pamount'] . " </td>";
                            }
                        }
                    }
                    $feedetails_design .= "</tr>";
                }
                $total_amount = $sdamount - $paidamount;
                $feedetails_design .= "<tr>"
                        . "<td>Sub Total</td>"
                        . "<td> $sdamount </td>"
                        . "<td> $paidamount </td>"
                        . "<td> $total_amount </td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
//                    . "<td></td>"
                        . "</tr>";
                $feedetails_design .= "</table>";
                $feedetails_design .= "<table>"
                        . "<tr><td>"
                        . "<p style='text-align:left'>"
                        . "<b>" . $rptlabels[15] . " : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/>"
                        . "</p>"
                        . "</td></tr>"
                        . "</table>";
                $exemptions = $this->fee_exemption->query("select feerule.fee_rule_desc_$lang,fee_exe.exemption_amt from ngdrstab_trn_fee_exemption as fee_exe, ngdrstab_mst_article_fee_rule feerule where fee_exe.fee_rule_id=feerule.fee_rule_id and  fee_exe.token_no=?", array($doc_token_no));
                if (!empty($exemptions)) {
                    $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='center'> <b>" . __('lblExemptionFeerule') . "<b>   </td><td width=50% align='center'> <b>" . __('lblFeeExemption') . " </b></td></tr></table>";
                    foreach ($exemptions as $exemption1) {

                        $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='left'>" . $exemption1[0]['fee_rule_desc_' . $lang] . "</td><td width=50%>" . $exemption1[0]['exemption_amt'] . " /- </td></tr></table>";
                    }
                }

                if ($view_flag == 'pdf' || $view_flag == 'D') {
                    $this->create_pdf($html_design . $feedetails_design, 'doc_reg_summary1_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design . $feedetails_design;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

//--------------*-----------*----------------*----------------*---\\ End Registration Summary 1  //--*---------*---------*------------*-----------*-----------*--------------*-----
//--------------*-----------*----------------*----------------*---//    Registration Summary 2   \\--*---------*---------*------------*-----------*-----------*--------------*-----
    //--------------*-----------*----------------*----------------*---//    Registration Summary 2   \\--*---------*---------*------------*-----------*-----------*--------------*-----
    public function summary2_report($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;

        $doc_token_no = base64_decode($doc_token_no);
        switch ($state_id) {
            case 4 :
                return $this->rpt_reg_summary2_4($doc_token_no, $view_flag, $report_type);
                break;
            case 27 :
                return $this->rpt_reg_summary2_27($doc_token_no, $view_flag, $report_type);
                break;
            case 36 :
                return $this->rpt_reg_summary2_36($doc_token_no, $view_flag, $report_type);
                break;
            case 20 :
                return $this->rpt_reg_summary2_20($doc_token_no, $view_flag, $report_type);
                break;
            case 15 :
                return $this->rpt_reg_summary2_15($doc_token_no, $view_flag, $report_type);
                break;
            case 11 :
                return $this->endors_cert_of_admissibility_bihar($doc_token_no, $view_flag, $report_type);
                break;
            case 16 :
                return $this->rpt_reg_summary2_16($doc_token_no, $view_flag, $report_type);
                break;
            case 28 :
                return $this->rpt_reg_summary2_30($doc_token_no, $view_flag, $report_type);
                break;
            default :
                return $this->rpt_reg_summary2_30($doc_token_no, $view_flag, $report_type);
                break;
        }
    }

    public function receipt_report($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;
        switch ($state_id) {
            case 4:
                return $this->rpt_receipt1_4($doc_token_no, $view_flag, $report_type);
//                break;
            case 11:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            case 20:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            case 15:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            case 36:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            case 31:
                return $this->rpt_receipt1_31($doc_token_no, $view_flag, $report_type);
                break;
            case 16:
                return $this->rpt_receipt1_16($doc_token_no, $view_flag, $report_type);
                break;
            case 27:
                return $this->rpt_receipt1_27($doc_token_no, $view_flag, $report_type);
                break;
            default :
                return $this->rpt_receipt1_27($doc_token_no, $view_flag, $report_type);
                break;
        }
    }

    public function rpt_reg_summary2_16($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F', $lang = 'en', $doc_lang = 'en') {
        try {
            //echo 1;
//$this->autoRender = FALSE;
            //$doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('regconfig', 'State', 'payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article', 'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';
            $userid = $this->Session->read("citizen_user_id");
            $stateid = $this->Auth->User("state_id");
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $html_design = '';
            $alias_name = '';
            $idenalias = '';
            $witalias = '';
//            $state_name='';
//            $state='';
//             $statename = $this->Session->read("state_name_en");
//             pr($statename);exit;
            $state = $this->State->find('all', array('conditions' => array('state_id' => $stateid)));
//              pr($state);exit;
            $state_name = $state[0]['State']['state_name_en'];
            $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));
//pr($rpt_data);exit;
            $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
//              pr($regconf);
            $bar_qr = '';
            if (!empty($regconf)) {
                if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                } else {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                }
            }
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }
            if (!empty($rptData)) {
                $rptData = $rptData[0];


//===============================         Property Details ==============================================
                $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
//                pr($rptPropDtl);exit;
                $prpt_valuation = 0;
//                $imagedata="/home/NGDRS_UPLOAD/ReportImage/emblem.png";
//                  $image1 = file_get_contents('/home/NGDRS_UPLOAD/ReportImage/emblem.png');
//                 $image = base64_encode($image1);
//                 
//                            if($view_flag=='V'){
//                               $rpt_img="<img src='data:image/png;charset=utf-8;base64," . $image . "' height='70px' width='70px' /> ";  
//                            }else{
//                                $rpt_img="<img src='" . $imagedata . "' height='70px' width='70px' />";
//                            }
//            $html_design = "<table  align='right'><tr><td>".$rpt_img."</td></tr></table>";
//             $img1="<img src='" . $imagedata . "' height='150px' width='200px' />";
                $rpt_title = " Deed Endorsement Sample Template ";


                $html_design = "<table align='left'><tr><td>" . $bar_qr . "</td></tr></table>";

                $html_design .= "<table width=100% align=center>"
                        . "<tr><td style='text-align:center;'> <b> OFFICE OF THE SUB REGISTRAR </b></td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>Office Name :- </b>" . $off . "</td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>District Name :- </b>" . @$rptPropDtl[0]['district']['district_name_en'] . "</td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>State Name :- </b>" . $state_name . "</td></tr>"
                        . "</table>";
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
                $html_design .= "<h4 align=center> <b>" . $rptlabels[363] . " </b></h4>";

                $html_design .= "<table width=100%><tr><td align=left>Document No:-  <b>" . $rpt_data[0][0]['doc_reg_no'] . "</b> </td> <td align=right><b> Token No :-" . $doc_token_no . "</b> </td></tr> </table><br>";

                $art_id = $rptData['article']['article_id'];
                $srt_ty_name = @$rptData['art_ty_nm']['articledescription_' . $lang];
                $title_id = @$rptData['genernalinfoentry']['title_id'];
                $html_design .= "<div width=100% align=center>"
                        . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                        . "<table width=100% align=center border=1>";
                if ($art_id == 91) {
                    if (!empty($srt_ty_name)) {
                        $html_design .= "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[177] . " </b></td> <td width=80%>" . $rptData['article']['article_desc_' . $lang] . " (" . $srt_ty_name . ")</td></tr>";
                    } else {
                        $html_design .= "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[177] . " </b></td> <td width=80%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>";
                    }
                } else {
                    $html_design .= "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[177] . " </b></td> <td width=80%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>";
                }



                $html_design .= "<tr><td width=20% bgcolor='#e0e1e2'> <b>Fee Details </b></td><td colspan=2> ";

                $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData['article']['article_id']);
                $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;
                $lineNo = 1;
                if ($stamp_duty) {
                    foreach ($stamp_duty as $sd) {

                        $html_design .= '<b>' . $sd[0]['fee_item_desc_' . $lang] . '</b> :- Rs. ' . $sd[0]['totalsd'] . ', ';
                        if ($lineNo % 3 == 0) {
                            $html_design .= '';
                        }
                        $lineNo++;
                    }
                }

                $html_design .= "</td></tr></table></div>";

                if ($rptPropDtl) {
                    $sr_no = 0;
                    foreach ($rptPropDtl as $prpt) {
                        $sr_no++;
                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }
                        $prop_boundaries = '<b>Property Boundaries</b> :- East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];
//                    pr($prop_boundaries);exit;
                        $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
//                    pr($tmp_prpt_val);exit;
                        $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
//                        pr($prpt_valuation);exit;
//                     $cons_amt='';
                        if (!empty($rptPropDtl)) {
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';
                        }
//                        pr($cons_amt);exit;

                        $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                        $tmp_prop_area = array();
                        foreach ($prop_area as $parea) {
                            if ($parea['item']['is_list_field_flag'] == 'Y')
                                $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                            array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                        }

                        $property_id = $prpt['property_details_entry']['property_id'];
                        $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value
                                                                from ngdrstab_trn_parameter as param
                                                                JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                                                                where 
                                                                param.token_id=? and param.property_id=?", array($doc_token_no, @$property_id));



                        $property_id = $prpt['property_details_entry']['property_id'];
                        $lblalias = $rptlabels[402];

                        $html_design .= "<div width=100% align=center>"
                                . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                                . "<table width=100% align=center border=1 >";

                        $valuation = $this->valuation->Query("select val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land 
                                                    from ngdrstab_trn_property_details_entry p
                                                    join ngdrstab_trn_valuation val  ON val.val_id=p.val_id
                                                   join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
                                                   join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
                                                   join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id 
                                                    where p.token_no=$doc_token_no and p.property_id=$property_id
                                                    group by p.property_id,val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang,usage.usage_main_catg_desc_$lang");

                        if (!empty($valuation)) {
                            $sagment_name = $valuation[0][0]['village_name_' . $lang];
                            $type_of_land = $valuation[0][0]['type_of_land'];
                            $seg_desc = $valuation[0][0]['segment_name'];
                            $val_id = $valuation[0][0]['val_id'];
                            $rate = round($valuation[0][0]['rate']);

                            $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                            $area = '';
                            foreach ($valuation_details as $vdetails) {
                                $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
//                       pr($areawwww);
                                foreach ($areawwww as $area1)
                                    if ($area1[0]['area_field_flag'] == 'Y') {
                                        $area .= " " . $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
//                               pr($area);exit;
                                    };
                            }




                            $html_design .= "<tr><td width=20% bgcolor='#e0e1e2'> <b>Property No. </b></td><td>" . $sr_no . "</td></tr>"
                                    . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Valuation Details </b></td> <td> <b>" . $rptlabels[166] . " :- </b> Rs." . round($prpt_valuation) . "/- ,";
//                            if ($art_id == 91) {
//                                $html_design .= "<b>" . $rptlabels[430] . " </b>:- Rs." . round(@$cons_amt) . "/-</td></tr>";
//                            } else {
//                                $html_design .= "<b>" . $rptlabels[401] . " </b>:- Rs." . round(@$cons_amt) . "/-</td></tr>";
//                            }


                            if ($art_id == 91) {
                                if (!empty($title_id)) {
                                    if ($title_id != 56) {
                                        if ($title_id == 112) {
                                            $html_design .= "<b>" . $rptlabels[430] . " </b>:- Rs." . round(@$cons_amt) . "/-</td></tr>";
                                        } else if ($title_id == 113) {
                                            $html_design .= "<b>" . $rptlabels[401] . " </b>:- Rs." . round(@$cons_amt) . "/-</td></tr>";
                                        }
                                    }
                                }
                            } else {
                                $html_design .= "<li>" . $rptlabels[401] . ":  &#8377;" . $consideration_amount . " /-</li>";
                            }
                        }



                        $html_design .= ""
                                . "<tr><td bgcolor='#e0e1e2'> <b> Property Details </b></td>"
                                . "<td> <b>District :- </b>" . $rptPropDtl[0]['district']['district_name_en'] . " ,"
                                . "<b> Circle :- </b> " . $rptPropDtl[0]['taluka']['taluka_name_en'] . " ,"
                                . "<b> Village Name :- </b> " . $rptPropDtl[0]['village']['village_name_en'] . " <br>"
                                . " $prop_boundaries <br>";
//                      pr($serveyno);
//                      exit;
                        foreach ($serveyno as $attribute) {

                            $html_design .= "<b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> - " . $attribute[0]['paramter_value'] . "";
                        }
                        $html_design .= "<br><b>" . $rptlabels[173] . "</b> :- " . @$area . " </td></tr>"
                                . "</table>"
                                . "</div>";
                    }
                } else {
                    
                }

                $html_design .= " <table width=100%> <tr> <td width=70%>"; //divide into two screen
                $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));
                $executer_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_executer' => 'Y')));
                $alias = $this->party->find('all', array('fields' => array('alias_name_en'), 'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                if (!empty($alias[0]['party']['alias_name_en'])) {

                    $alias_name = '(' . $lblalias . ':- <b>' . $alias[0]['party']['alias_name_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                } else {
                    $alias_name = '';
                }
                $newamt = $this->SroDependentFields->find('all', array('fields' => array('field_value'), 'conditions' => array('token_no' => $doc_token_no, 'field_id' => 1)));
//            pr($newamt);exit;
                //  pr($doc_token_no);exit;
                $party = $this->party_entry->query("SELECT  cate.category_name_$lang,iden.identificationtype_desc_$lang,p.identificationtype_desc_en as iddesc ,p.is_presenter,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left outer join ngdrstab_mst_party_category cate on cate.category_id=p.party_catg_id"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_executer='Y'");
                $party_pres = $this->party_entry->query("SELECT aps.doc_reg_no,aps.final_doc_reg_no,aps.doc_reg_date,aps.final_stamp_date,iden.identificationtype_desc_en,p.identificationtype_desc_en as iddesc "
                        . ",p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_trn_application_submitted aps on aps.token_no=p.token_no"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_presenter='Y'");

//                    pr($party);exit;
                $sellerflag = 0;
                $buyerflag = 0;
                $buyername = '________';
                $buyerfathername = '_________';
                $image_codes = null;
                $image_codes1 = null;
//            $image_codes=='';
                $img1 = '';
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0 && $party1[0]['is_presenter'] == 'Y') {
                        $sellerflag = 1;
                        $imagedata = $path['file_config']['filepath'] . $party1[0]['photo_img'];
//                     $sellername= $party1[0]['party_full_name_'.$lang];
//                            $sellerfathername= $party1[0]['father_full_name_'.$lang];
//                            pr($imagedata);exit;
                        if ($party1[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='150px' width='200px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }
//                            pr($imagedata);exit;
                    } else {
                        continue;
                    }
                }
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {

                        $sellerflag = 1;
                        $imagedata1 = $path['file_config']['filepath'] . $party1[0]['photo_img'];

                        if ($party1[0]['photo_img'] != null && file_exists($imagedata1)) {
                            $buyername = $party1[0]['party_full_name_en'];
                            $buyerfathername = $party1[0]['father_full_name_' . $lang];
                            $image = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes1 = null;
                            $btnaccept = 0;
                        }
                    } else {
                        continue;
                    }
                }


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' >" . $rptlabels[178] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b>" . $alias_name . "</b>                         
                  " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('__________')) . "</b> "
                        . $rptlabels[180] . "</td></tr></table>";


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' width=100%>" . $rptlabels[199] . " :- <b>" . date('d-M-Y') . "</b>  " . $rptlabels[200] . " :-  <b>" . date('l') . "</b> "
                        . $rptlabels[201] . " :- <b>" . date('H:i:s A') . "</b></td></tr></table><br><br>";

                $html_design .= "</td><td></td><td></td><td width=30%> " . $img1 . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "(" . $party[0][0]['category_name_' . $lang] . ")" . " </td></tr> </table>";


                $data = $this->ApplicationSubmitted->Query("select aps.token_no ,art.book_number,aps.doc_reg_no,volno.volume_number,volno.page_number_start from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                           join ngdrstab_mst_article art on art.article_id=gen.article_id 
                                                           LEFT JOIN ngdrstab_trn_volume_number_page_number_entry volno ON volno.token_no=aps.token_no
where aps.token_no=$doc_token_no");

                $book_no = '____';
                $doc_no = '____';
                $vol_no = '___';
                $page_no = '____';
                $serial_no = '____';
                if (!empty($data)) {
                    $doc_no = $data[0][0]['doc_reg_no'];
                    $book_no = $data[0][0]['book_number'];
                    $vol_no = $data[0][0]['volume_number'];
                    $page_no = $data[0][0]['page_number_start'];
                    $serial_no = $data[0][0]['doc_reg_no'];
                }

                $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));

                if (!empty($party_pres)) {
                    $html_design .= "<table width=100% border=1>"
                            . "<tr>
                            <th style='text-align:center;'>" . $rptlabels[359] . "</th>
                            <th style='text-align:center;'>" . $rptlabels[360] . "</th>
                            <th style='text-align:center;'>" . $rptlabels[362] . "</th></tr>
                            <tr>
                            <td>" . $party_pres[0][0]["party_full_name_en"] . "</td>
                            <td>" . $party_pres[0][0]["identificationtype_desc_en"] . "  </td>
                            <td>" . $party_pres[0][0]["pan_no"] . "</td>
                            </tr>
                            </table>";
                }


                $doc_reg_date = '____';
                if (!empty($party_pres[0][0]['doc_reg_date'])) {
                    $doc_reg_date = date('d-M-Y', strtotime($party_pres[0][0]['doc_reg_date']));
                }
                $doc_reg_date_final = '____';
                if (!empty($party_pres[0][0]['final_stamp_date'])) {
                    $doc_reg_date_final = date('d-M-Y', strtotime($party_pres[0][0]['final_stamp_date']));
                }
                $final_doc_reg_no = '___';
                if (!empty($party_pres[0][0]['final_doc_reg_no'])) {
                    $final_doc_reg_no = $party_pres[0][0]['final_doc_reg_no'];
                }

                $paddress = $this->party_entry->query("select distinct(mp.field_id), mp.pattern_desc_en ,tp.field_value_en

from  ngdrstab_conf_behavioral_patterns mp

JOIN  ngdrstab_trn_behavioral_patterns tp ON tp.field_id=mp.field_id

where tp.mapping_ref_id=2 and tp.mapping_ref_val=? and tp.token_no=?", array($party_pres[0][0]['party_id'], $doc_token_no));

                $address_str = "____";
                if (!empty($paddress)) {
                    $address_str = "";
                    foreach ($paddress as $field) {
                        $address_str .= "," . $field[0]['pattern_desc_en'] . " " . $field[0]['field_value_en'];
                    }
                    if (!empty($address_str)) {
                        $address_str = substr($address_str, 1);
                    }
                }

                /*      $html_design .= "<table width=100%>"
                  . "<tr><td align=left>"
                  . "<p>"
                  . "This <b>".$rptData['article']['article_desc_' . $lang]."</b> was presented before the registering officer on <b>".$doc_reg_date."</b> "
                  . "by <b>".$presenter_name[0]['party']['party_full_name_'.$lang]." S/O,D/O,W/O ".$presenter_name[0]['party']['father_full_name_'.$lang]."</b> resident of ".$address_str." ."
                  . "This was registered as serial no ".$serial_no." and deed no: <b>".$final_doc_reg_no."</b> in volume <b>".$vol_no."</b>"
                  . " under page no <b>".$page_no."</b> of  book no <b>".$book_no."</b> at <b>".$off."</b> on <b>".$doc_reg_date_final."</b>"
                  . "</p>"
                  . "</td><tr>"
                  ."</table>";


                  $html_design.= "<table width=100%><tr> <td>&nbsp;</td></tr>  "
                  . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td><td align=right> <b> Registering Officer </b></td></tr> </table><br>"; */
            }
            $html_design .= "<hr/>";
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
            $party_html = $this->get_party_data_for_jharkhand($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);

            $html_design .= $party_html;

            $html_design .= "<hr/>";
            $identification_design = $this->get_identification_data_andaman($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
            $html_design .= $identification_design;

            $html_design .= "<hr/>";


            $witness_design = $this->get_witness_data_andaman($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
            $html_design .= $witness_design;




            $html_design .= "<table width=100%>"
                    . "<tr><td align=left> " . $rptlabels[192] . "  </td></tr></table><br><br>";


            $executer_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                'conditions' => array('token_no' => $doc_token_no, 'is_executer' => 'Y')));

//                 $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en','father_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
//                 
            $identifier = $this->identification->find('all', array('fields' => array('identification.identification_full_name_en', 'identification.father_full_name_en', 'occupation.occupation_name_en'),
                'joins' => array(
                    array('table' => 'ngdrstab_mst_occupation', 'alias' => 'occupation', 'conditions' => array("occupation.occupation_id=identification.occupation_id")),
                //   array('table' => 'ngdrstab_mst_payment_fields', 'alias' => 'pay', 'conditions' => array('pay.account_head_code=payment.account_head_code and item.fee_param_type_id=2'))
                ),
                'conditions' => array('identification.token_no' => $doc_token_no)
            ));

//                  pr($identifier);exit;
            if (!isset($property_address)) {
                $property_address = array();
            }

//print_r($property_address);exit;
            $html_design .= "<table style=' border: 1px solid black;' width='100%'>"
                    . "<tr><td colspan=1 style='padding-left:5px; padding-right:5px;' align='justify'>Above mentioned,"
                    . " <b>(" . (($executer_name) ? ($executer_name[0]['party']['party_full_name_en']) : ('___')) . ")</b>, "
                    . "has/have admitted the execution before me. He/ She/ They has / have been presented"
                    . " by <b>(" . ((@$presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('___')) . ")</b> "
                    //. " by <b>(" . (($identifier) ? ($identifier[0]['identification']['identification_full_name_en']) : ('___')) . ")</b> "
                    . "Son/Daughter/Wife of <b>(" . (($identifier) ? ($identifier[0]['identification']['father_full_name_en']) : ('___')) . ")</b> "
                    . "resident of <b>{" . implode(',', $property_address) . ") </b> and by occupation <b>(" . (($identifier) ? ($identifier[0]['occupation']['occupation_name_en']) : ('___')) . ")</b>.</td></tr>"
                    . "<tr height='80px'>"
                    . "<td valign='bottom'style='text-align:right;'><b>Signature of Registering Officer </b></td>"
                    . "</tr>"
                    . "</table>";




            $html_design .= "<br><br><table width=100%><tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td> <td align=right><b>Seal and Signature of Registering Officer</b> </td></tr> </table>";
            //echo "<pre>" . $html_design . "</pre>"; exit;
            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {

//                $mfile=fopen("/home/abc.txt","w");
//                fwrite($mfile,$html_design);
//                fclose($mfile);
//                exit;
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', 'SRO');
            } else {
//                echo "<pre>".$html_design."</pre>" ;
//                exit;
                return $html_design;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary2_30($doc_token_no = NULL, $view_flag = NULL, $report_type = NULL) {

        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {

                array_map([$this, 'loadModel'], ['genernal_info', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'PaymentFields']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.stamp1_date,app.stamp2_date,app.stamp3_date,app.stamp4_date,app.stamp5_date,article.book_number, app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_' . $lang),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_' . $lang];
                } else {
                    $off = NULL;
                }

//                pr($rpt_data);exit;
                $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                $bar_qr = '';
                if (!empty($regconf)) {
                    if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                        $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                    } else {
                        $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                    }
                }

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>" . $bar_qr
                        . "<tr>"
                        . "<td colspan=2 style='text-align:center;'><h3 style='border:1px solid black; padding:5px;'>$rptlabels[19]</h3> </td> </tr>"
                        . "<tr><td style='text-align:left'>$rptlabels[295] :- " . date('d-M-Y') . " </td> "
                        . "<td style='text-align:right'><b> $rptlabels[20]:</b>" . $rpt_data[0][0]['doc_reg_no'] . " </td></tr> "
                        . "</tr>"
                        . "<tr><td colspan=2 style='text-align:left;'> <b>$rptlabels[33] : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/> </td> </tr>"
                        . "</table>"
                        . "<hr>";


//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                $party_html = $this->get_party_data_maharashtra($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
                $party_html .= "<p style='text-align:left'>" . $rptlabels[26] . " <b>" . $rpt_data[0][0]['article_desc_' . $lang] . " </b> " . $rptlabels[321];
                if ($rpt_data[0][0]['stamp3_date'] != NULL) {
                    $party_html .= "<br>$rptlabels[27]" . " 3 at " . " $rptlabels[32] " . date('d-M-Y H:i:s a', strtotime($rpt_data[0][0]['stamp3_date'])) . " </p>";
                }
                $html_design .= $party_html;
//----------------------------------------------------------------for Adding Identification in Report ----------------------------------------------------------------------
//                $identification_design = "<p style='text-align:left'><b>Idenitification:</b>"
//                        . "<br> </p>";
                $identification_design = $this->get_identification_data_maharashtra($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
                $html_design .= $identification_design;
//                $html_design.="<hr/>";
//                pr($html_design);
//----------------------------------------------------------------Witeness in Report ----------------------------------------------------------------------
                $witness_design = $this->get_witness_data($doc_token_no, $lang, $rptlabels, $report_type);
                $html_design .= $witness_design;

                //----------------------------------------------------------------For Stamp -----------------------------------------------------------------------------------
                if ($rpt_data[0][0]['stamp4_date'] != NULL) {
                    $html_design .= "<p style='text-align:left'>" . $rptlabels[27] . " 4 at " . date('d-M-Y H:i:s a', strtotime($rpt_data[0][0]['stamp4_date'])) . "</p>";
                }
                if (!empty($rpt_data[0][0]['stamp5_date'])) {
                    $html_design .= "<p style='text-align:left'>" . $rptlabels[27] . " 5 at  " . date('d-M-Y H:i:s a', strtotime($rpt_data[0][0]['stamp5_date'])) . " " . $rptlabels[253] . ":- <b>" . $rpt_data[0][0]['book_number'] . "</b> </p><br>";
                }

                $html_design .= "<br><p style='text-align:left'>" . $off . " </p>";

                $payment_data = $this->payment->query("select distinct dat.grn_no,dat.defacement_number from ngdrstab_trn_online_payment_received as pay
                      inner join ngdrstab_trn_payment_details as dat on dat.grn_no=pay.grn_no and dat.grn_no is NOT NULL where dat.token_no=$doc_token_no");

                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));

                if ($payment_data) {
                    $ePaymentDetail = "<h5 align=center> $rptlabels[77] </h5> <hr/>";
                    $ePaymentDetail .= "<table class='table table-striped table-bordered table-hover' width=100% align=center>"
                            . "<thead><tr>"
                            . "<th> $rptlabels[21] </th>"
                            . "<th> $rptlabels[35] </th>"
                            . "<th> $rptlabels[36] </th>"
//                          . "<th> $rptlabels[36] </th>"
                            . "<tr></thead>"
                            . "<tbody>";
                    $SrNo = 1;
                    foreach ($payment_data as $pd) {//                        
                        //    pr($pd);exit;
                        $ePaymentDetail .= "<tr><td align=center>" . $SrNo++ . "</td>  <td align=center>" . $pd[0]['grn_no'] . "</td> <td align=center>" . $pd[0]['defacement_number'] . "</td>";
                        $ePaymentDetail .= "<tr><td>" . $SrNo++ . "</td>  <td>" . $pd['payment']['payment_id'] . "</td> <td>" . $pd['payment']['pamount'] . "</td><td>";
                        foreach ($paymentfields_trn as $key => $singletrnfield) {
                            if ($singletrnfield['PaymentFields']['payment_mode_id'] == $pd['payment']['payment_mode_id']) {
                                $ePaymentDetail .= "" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $pd['payment'][$singletrnfield['PaymentFields']['field_name']] . " </span><br>";
                                if ($singletrnfield['PaymentFields']['is_transaction_flag'] == 'Y') {
                                    $editflag = 'N';
                                }
                            }
                        }
                        $ePaymentDetail .= "</tr>";
                    }
                    $ePaymentDetail .= ' </tbody></table>';

                    $html_design .= $ePaymentDetail;
                }
//                echo $html_design;exit;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            
                $instructions = $this->RegInstructionSummary2->find('list', array('fields' => array('instruction_id', 'instruction_desc_' . $lang), 'condtions' => array('state_id' => $stateid)));

                $instructionList = '';
                if ($instructions) {
                    $instructionList .= "<h5 align=center> Know Yours Rights as Registrant </h5>"
                            . "<ol style='text-align:center'>";
                    foreach ($instructions as $instru) {
                        $instructionList .= "<li style='text-align:left'>" . $instru . " </li>";
                    }
                    $instructionList .= "</ol>";
                }
                $html_design .= $instructionList;

                if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                    $this->create_pdf($html_design, 'doc_reg_summary2_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design;
                }
            } else {
                return 'invalid data';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_receipt1_16($doc_token_no = NULL, $view_flag = NULL) { //temp MZ state receipt
        try {
            echo 1;
            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['num_to_words', 'ReceiptCounter', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));
//                pr($rptlabels);exit;
                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_en'];
                } else {
                    $off = NULL;
                }

                $rpt_data = $this->payment->Query("select geninfo.article_id,art_ty_nm.articledescription_en,vill.village_name_$lang,geninfo.presentation_date,app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_conf_admblock7_village_mapping vill on vill.village_id=party.village_id
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    left join ngdrstab_mst_articledescriptiondetail art_ty_nm on art_ty_nm.articledescription_id=geninfo.title_id
                    where  geninfo.token_no=?", array($doc_token_no));

//                pr($rpt_data);
                $market_value = $consideration_amount = 0;
                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
//                pr($property_ids);
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));
                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('fee_calc_id' => $fee_calc_ids
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    //$this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));

                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
                                                                ngdrstab_trn_fee_calculation_detail stampd 
                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
                                                                WHERE  stamp.token_no=?  
                                                                AND stamp.delete_flag='N' 
                                                                AND feeitem.fee_param_type_id=2 
                                                                group by feeitem.fee_item_id
                                                                order by feeitem.fee_preference ASC
                                                                ", array($doc_token_no));
//               pr($feedetails);exit;
//                        pr($payment);exit;
                $receipt_detail = "<table style='text-align:left;' width='100%'>"
                        . "<tr><td><u>dfgdgf</u></td></tr>"
                        . "<tr><td><b>OFFICE OF THE CIVIL REGISTRAR CUM SUB.REGISTRAR.TALUKA SATARI </b></td></tr>"
                        . "<tr><td><b>REGISTRATION DEPARTMENT. GOVERNMENT OF GOA </td></tr></table>";
                $total = 0;
                foreach ($payment_detail as $payment) {
                    $receipt_detail .= "<tr><td><b>" . $payment[0]['fee_item_desc_' . $lang] . " </b></td> <td width=25%> &#8377;" . $payment[0]['pamount'] . "</td> </tr>";

                    $total += $payment[0]['pamount'];
                }
                $receipt_detail .= "<tr><td colspan=2><hr></td></tr>";
                $receipt_detail .= "<tr><td><b>" . $rptlabels[14] . " </b></td> <td width=25%> &#8377;" . $total . "</td> </tr>";
                $receipt_detail .= "</table>";

                $acknowledgement = "<p style='text-align:left;'>Probable date of issue of Registered Document: / /";
                $signiture = "<br>Signature of the Sub-Registrar</p>";



                $html_design = "<table width='100%'>"
                        . "<tr><td style='text-align:center;'><b> <u> FORM.T- RECEIPT FOR FIE RECEIVED </b> </u></td> <td></td> </tr>"
                        . "<tr><td style='text-align:center;'>OFFICE OF THE CIVIL REGISTRAR CUM SUB.REGISTRAR.TALUKA SATARI </td></tr><br>"
                        . "<tr><td style='text-align:center;'>REGISTRATION DEPARTMENT. GOVERNMENT OF GOA </td></tr></table>";

//            ====================================================View Summary 1(Yogesh)=======================================================================
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=? group by receipt_number", array($doc_token_no));
//                $rec = $this->ReceiptCounter->find("all", array('fields' => array('receipt_number'), 'conditions' => array('token_no' => $doc_token_no)));
//                    pr($rec);exit;
//                pr($receipt_no);exit;
                foreach ($receipt_no as $recno) {

                    $receipt_number = $recno[0]['receipt_number'];
                    $feedetails_design = "<hr>"
                            . "<table width=100%>"
                            . "<tr><td style='text-align: right;'>Print Date Time:- " . date('d-M-Y') . "</td> "
                            . "<tr> <td style='text-align: right;'>Date of Receipt: " . date('d-M-Y') . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>Receipt No : " . $receipt_number . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>Serial No. of the Document : </td> </tr>";
                    if ($art_id == 91) {
                        if (!empty($srt_ty_name)) {
                            $feedetails_design .= "<tr> <td style='text-align: left;'>Nature of Document :  <b>" . $rpt_data[0][0]['article_desc_' . $lang] . " (" . $srt_ty_name . ") </b> </td> </tr>";
                        } else {
                            $feedetails_design .= "<tr> <td style='text-align: left;'>Nature of Document :  <b>" . $rpt_data[0][0]['article_desc_' . $lang] . " </b> </td> </tr>";
                        }
                    } else {
                        $feedetails_design .= "<tr> <td style='text-align: left;'>Nature of Document :  <b>" . $rpt_data[0][0]['article_desc_' . $lang] . " </b> </td> </tr>";
                    }
                    $feedetails_design .= "<tr> <td style='text-align: left;'>Received the following amounts from <b>" . $rpt_data[0][0]['presenter_name'] . "</b> for Registration of above Document in Book-1 for the year 2018</td> </tr>"
                            . "</table>"
                            . "<table  align='right' cellpadding='10'>";
                }
                $payment1 = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));
                $sdamount = 0;
                $paidamount = 0;
                foreach ($feedetails as $fee) {


                    $sdamount += $fee[0]['totalsd'];
                    $amount = 0;
                    foreach ($payment1 as $paydetails) {
                        //  pr($paydetails);exit;              
                        $paydetails = $paydetails[0];

                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {

                            $amount += $paydetails['pamount'];
                            $paidamount += $paydetails['pamount'];
                            //$test++;
                        }
                    }

                    $feedetails_design .= "<tr>"
                            . "<td> &nbsp;<b>" . $fee[0]['fee_item_desc_en'] . "</b>&nbsp;</td>"
                            . "<td style='text-align:right'> &nbsp;" . $fee[0]['totalsd'] . "</td>";


                    $extrarow = 0;
                    foreach ($payment1 as $paydetails) {
                        // pr($paydetails);exit;
                        $paydetails = $paydetails[0];
                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $extrarow++;
//                            
                            if ($extrarow > 1) {
                                $feedetails_design .= "</tr><tr><td colspan='4'></td>";
                            }

                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {

                                $result = $this->requestAction(array('controller' => 'Registration', 'action' => 'payment_verification_status'), array('pass' => $paydetails));
                                foreach ($result as $key => $options) {
                                    $status = $key;
                                }

                                $feedetails_design .= ""
                                        . "<td style='text-align:right'> &nbsp;<b>" . $paydetails['payment_mode_desc_en'] . "</b>&nbsp;</td>"
                                        . "<td> &nbsp;" . $paydetails['payee_fname_en'] . " " . $paydetails['payee_mname_en'] . " " . $paydetails['payee_lname_en'] . "</td>"
                                        . "<td> &nbsp;<ul class='list-inline'>";



                                foreach ($paymentfields_trn as $key => $singletrnfield) {
                                    if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
                                        $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
                                    }
                                }
                                $feedetails_design .= "</ul></td><td> " . $paydetails['pamount'] . " </td>";
                            }
                        }
                    }
                    $feedetails_design .= "</tr>";
                }
                $total_amount = $sdamount - $paidamount;

                $feedetails_design .= "<tr style='font-weight:bold; border-top: 1pt solid black;'>"
                        . "<td>Sub Total</td>"
                        . "<td>" . $sdamount . "</td>"
                        . "<td colspan=4>(" . $this->num_to_words->in_words($sdamount) . ")</td></tr></table><br>";

                $feedetails_design .= ""
                        . "<table  width=100%>"
                        . "<tr><td>" . $acknowledgement . "</td></tr>"
                        . "<tr><td style='text-align: right;' width=100%>" . $signiture . "</td></tr>"
                        . "</table> <br>";


                $feedetails_design .= "<table width=100%>"
                        . "<tr><td style='text-align: left;' colspan=2>TO BE FILLED IN BY THE PARTY AT THE TIME OF SUBMISSION OPNONAL</td></tr>"
                        . "<tr><td style='text-align: left;' colspan=2>Please handover the Registered Document to the person named below</td></tr>"
                        . "<tr><td> <b>Name of the Person Authorized :</b> </td></tr>"
                        . "<tr height='70px'>"
                        . "<td valign='bottom' style='text-align: left;'> Specimen Signature of the Person Authorized</td>"
                        . "<td valign='bottom' style='text-align: right;'> Signature of the Presenter </td>"
                        . "</table>";


                $feedetails_design .= "<table width=100%>"
                        . "<tr><td style='text-align: left;'colspan=2>TO BE FILLED IN At THE TIME OF HANDING OVER OF REGISTERED DOCUMENT </td></tr>"
                        . "<tr><td style='text-align: left;'colspan=2>The Registered Document has been handed over to  on Dated  <b>" . date('d-M-Y') . " </b> </td></tr>"
                        . "<tr height='80px'>"
                        . "<td valign='bottom 'style='text-align: left;'>Signature of the person receiving the Document</td>"
                        . "<td valign='bottom 'style='text-align: left;'>Signature of the Sub-Registrar</td>"
                        . "</table>";

                $html = "<style>table td {padding-right: 10px; padding-left: 10px;}</style>"
                        . "<table width=100%>"
                        . "<tr>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%><h3 align=center  padding:5px;'>" . $rptlabels[10] . "</h3></td>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%><h3 align=center  padding:5px;'>" . $rptlabels[10] . "</h3></td>"
                        . "</tr>"
                        . "<tr>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%>Office Use</td>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%>Original/Duplicate</td>"
                        . "<tr>"
                        . "<tr>"
                        . "<td style='border-right: 2px dashed #000;' width=50%>" . $html_design . "</td>"
                        . "<td style='border-right: 2px dashed #000;' width=50%>" . $html_design . "</td>"
                        . "<tr>"
                        . "<td style='text-align: left; border-right: 2px dashed #000;' width=50%>" . $feedetails_design . " </td> "
                        . "<td style='text-align: left; border-right: 2px dashed #000;' width=50%>" . $feedetails_design . " </td> "
                        . "</tr>"
                        . "</table><br><br>";

                if ($view_flag == 'pdf' || $view_flag == 'D') {
                    $this->create_pdf($html, 'receipt_' . $doc_token_no, 'A4-P', '');
                } else {
                    return $html;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_receipt1_27($doc_token_no = NULL, $view_flag = NULL) { // for MH state
        try {

            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['genernalinfoentry', 'num_to_words', 'ReceiptCounter', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));
                // pr($rptlabels);exit;
                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_en'];
                } else {
                    $off = NULL;
                }

                $rpt_data = $this->payment->Query("select vill.village_name_$lang,geninfo.presentation_date,app.doc_reg_no, article.article_desc_$lang, party_full_name_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=geninfo.token_no
                    left join ngdrstab_conf_admblock7_village_mapping vill on vill.village_id=property.village_id
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    where  geninfo.token_no=?", array($doc_token_no));

                $market_value = $consideration_amount = 0;
                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));

                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('fee_calc_id' => $fee_calc_ids
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    //$this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
//                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_$lang,SUM(stampd.final_value) as totalsd FROM
//                                                                ngdrstab_trn_fee_calculation_detail stampd 
//                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
//                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
//                                                                WHERE  stamp.token_no=?  
//                                                                AND stamp.delete_flag='N' 
//                                                                AND feeitem.fee_param_type_id=2 
//                                                                group by feeitem.fee_item_id
//                                                                order by feeitem.fee_preference ASC
//                                                                ", array($doc_token_no));

                $feedetails = $this->article_fee_items->query("SELECT feeitem.fee_item_id,feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
                                                                ngdrstab_trn_fee_calculation_detail stampd 
                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
                                                                WHERE  stamp.token_no=?  
                                                                AND stamp.delete_flag='N' 
                                                                AND feeitem.fee_param_type_id=2
                                                               and feeitem.fee_item_id not in(2)
                                                                --AND feeitem.fee_item_id in (17)
                                                                group by feeitem.fee_item_id
                                                                order by feeitem.fee_preference ASC
                                                                ", array($doc_token_no));
//               pr($feedetails);exit;
//                        pr($payment);exit;
                $receipt_detail = "<table style='text-align:left;' width='100%'>"
                        . "<tr><td><b>" . $rptlabels[10] . " : </b></td> <td></td> </tr>"
                        . "<tr><td><b>" . $rptlabels[11] . " : </b></td> <td>" . date('d-m-Y') . "</td> </tr>"
                        . "<tr>"
                        . "<td colspan=2><b>" . $rptlabels[12] . ":</b>" . (($rpt_data[0][0]['presenter_name']) ? $rpt_data[0][0]['presenter_name'] : '-') . " </td>"
                        . "</tr>";
                $total = 0;
                foreach ($payment_detail as $payment) {
                    $receipt_detail .= "<tr><td><b>" . $payment[0]['fee_item_desc_' . $lang] . " </b></td> <td> &#8377;" . $payment[0]['pamount'] . "</td> </tr>";
                    $total += $payment[0]['pamount'];
                }
                $receipt_detail .= "<tr><td colspan=2><hr></td></tr>";
                $receipt_detail .= "<tr><td><b>" . $rptlabels[14] . " </b></td> <td> &#8377;" . $total . "</td> </tr>";
                $receipt_detail .= "</table>";

//                $acknowledgement = "<p style='text-align:left;'>";
//                $signiture = "</p>";
                //  $acknowledgement = "<p style='text-align:left;'>" . $rptlabels[7] . " " . date('d-m-Y') . " " . $rptlabels[8] . " at " . $off . " ";
                $signiture = "<br>" . $off . " </p>";


                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>"
                        . "<tr> "
                        . "<td style='text-align: left;'>" . date('l d-M-Y') . " </td> "
                        . "<td style='text-align: right;'>" . ($rpt_data[0][0]['doc_reg_no'] ? "$rptlabels[2] : $rptlabels[282]/" . $rpt_data[0][0]['doc_reg_no'] : '') . "</td> "
                        . "</tr>"
                        . "<tr><td>" . date('h:i A') . "</td></tr>"
                        . "</table>";
//            ====================================================View Summary 1(Yogesh)=======================================================================
                $receipt_no = $this->ReceiptCounter->query("select receipt_id,receipt_number,created from ngdrstab_trn_receipt_counter  where token_no=? group by receipt_id,receipt_number,created", array($doc_token_no));

                $feedetails_design = '';
                foreach ($receipt_no as $recno) {
                    $recptno = $recno[0]['receipt_id'];
                    $feedetails_design = "<hr>"
                            . "<table width=100%>"
                            . "<tr><td style='text-align: left;'>" . $rptlabels[290] . " : " . $rpt_data[0][0]['village_name_' . $lang] . " </td>  <td >" . $rptlabels[289] . " : " . $recptno . " </td> <td style='text-align: right;'>" . $rptlabels[281] . " : " . date('d/m/Y') . " </td>  </tr>"
                            // . "<tr> <td style='text-align: left;'>" . $rptlabels[289] . ":- " . $receipt_number . "</td></tr>"
                            . "<tr> <td style='text-align: left;'>" . $rptlabels[291] . " :" . $rpt_data[0][0]['doc_reg_no'] . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>" . $rptlabels[292] . " :  " . $rpt_data[0][0]['article_desc_' . $lang] . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>" . $rptlabels[12] . "  :  " . $rpt_data[0][0]['presenter_name'] . "</td> </tr>"
                            . "</table>"
                            . "<table  align='right' cellpadding='10'>";
//            }
                }

                $totalpages = 0;
                $ginfo = $this->genernalinfoentry->find("first", array('conditions' => array('token_no' => $doc_token_no)));
                $totalpages = $ginfo['genernalinfoentry']['no_of_pages'];

                $payment1 = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));

                //$paymentfields = $this->PaymentFields->find('list', array('fields' => array('field_name', 'field_name_desc_en'), 'order' => 'srno ASC')); //old code
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC')); // in new code
                $sdamount = 0;
                $paidamount = 0;
                foreach ($feedetails as $fee) {
                    $sdamount += $fee[0]['totalsd'];
                    $amount = 0;
                    foreach ($payment1 as $paydetails) {
                        //  pr($paydetails);exit;              
                        $paydetails = $paydetails[0];

                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $amount += $paydetails['pamount'];
                            $paidamount += $paydetails['pamount'];
                            //$test++;
                        }
                    }

                    $feedetails_design .= "<tr>"
                            . "<td> &nbsp;<b>" . $fee[0]['fee_item_desc_' . $lang] . "</b>&nbsp;</td>"
                            . "<td style='text-align:right'> &nbsp;" . $fee[0]['totalsd'] . "</td>";

                    $extrarow = 0;
                    foreach ($payment1 as $paydetails) {
                        // pr($paydetails);exit;
                        $paydetails = $paydetails[0];
                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $extrarow++;
                            if ($extrarow > 1) {
                                $feedetails_design .= "</tr><tr><td colspan='4'></td>";
                            }
                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {

                                $result = $this->requestAction(array('controller' => 'Registration', 'action' => 'payment_verification_status'), array('pass' => $paydetails));
                                foreach ($result as $key => $options) {
                                    $status = $key;
                                }

//                                $feedetails_design .= ""
//                                        . "<td style='text-align:right'> &nbsp;<b>" . $paydetails['payment_mode_desc_en'] . "</b>&nbsp;</td>"
//                                        . "<td> &nbsp;" . $paydetails['payee_fname_en'] . " " . $paydetails['payee_mname_en'] . " " . $paydetails['payee_lname_en'] . "</td>";
//                                     //   . "<td> &nbsp;<ul class='list-inline'>";
////                                foreach ($paymentfields_trn as $key => $singletrnfield) {
////                                    if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
////                                        $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
////                                    }
////                                }
//                                $feedetails_design .= "<td> " . $paydetails['pamount'] . " </td>";
                            }
                        }
                    }
                    $feedetails_design .= "</tr>";
                }
                $feedetails_design .= "<tr><td><b>" . $rptlabels[13] . "</b>: " . $totalpages . " </td></tr>";

                $bank_details = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));

                $bankdetails_design = "<table>";

                foreach ($bank_details as $bankdetails) {

                    $bankdetails_design .= " <tr> "
                            . "<td>" . $rptlabels[342] . ":   <b>" . $bankdetails[0]['payment_mode_desc_' . $lang] . "</b> " . $rptlabels[345] . "  " . $bankdetails[0]['pamount'] . "</td>"
                            . "</tr>"
                            . "<tr>"
                            . "<td>" . $rptlabels[343] . ":  <b>" . $bankdetails[0]['certificate_no'] . "</b> " . $rptlabels[281] . "  " . date('d/m/Y', strtotime($bankdetails[0]['pdate'])) . "</td>"
                            . "</tr>"
                            . "<tr>"
                            . "<td>" . $rptlabels[344] . ":  </td>"
                            . "</tr>";
                }

                $bankdetails_design .= "</table><br>";

                $total_amount = $sdamount - $paidamount;
                $feedetails_design .= "<tr style='font-weight:bold; border-top: 1pt solid black;'>"
                        . "<td>" . $rptlabels[294] . "</td>"
                        . "<td> $sdamount </td></tr>";
                //  . "<td colspan=4>(" . $this->num_to_words->in_words($sdamount) . ")</td></tr>";
                $feedetails_design .= "</table>"
                        . "<table  width=100%>"
                        . "<tr>"
                        . "<td style='text-align: right;' width=50%><br><br>" . $signiture . "</td>"
                        . "</tr>"
                        . "</table>"
                        . "<hr>";

                $feedetails_design .= "<table>"
                        . "<tr> <td>"
                        . "<ul style='text-align:left;'>"
                        . "<li>" . $rptlabels[3] . ":  &#8377;" . $market_value . "</li>"
                        . "<li>" . $rptlabels[17] . ":  &#8377;" . $consideration_amount . "</li>"
                        . "<li>" . $rptlabels[4] . ":  &#8377;" . $total . "</li>"
                        . "</ul>"
                        . "</td></tr>"
                        . "</table>";

                $payment_data = $this->payment->query("select distinct dat.grn_no,dat.defacement_number from ngdrstab_trn_online_payment_received as pay
                      inner join ngdrstab_trn_payment_details as dat on dat.grn_no=pay.grn_no and dat.grn_no is NOT NULL where dat.token_no=$doc_token_no");
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));

//pr($payment_data);exit;


                $html = "<style>table td {padding-right: 10px; padding-left: 10px;}</style>"
                        . "<table width=100%>"
                        . "<tr>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%><h3 align=center  padding:5px;'>" . $rptlabels[10] . "</h3></td>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%><h3 align=center  padding:5px;'>" . $rptlabels[10] . "</h3></td>"
                        . "</tr> "
                        . "<tr>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%>" . $rptlabels[288] . "</td>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%>" . $rptlabels[286] . "</td>"
                        . "<tr> "
                        . "<tr>"
                        . "<td style='border-right: 2px dashed #000;' width=50%>" . $html_design . "</td>"
                        . "<td style='border-right: 2px dashed #000;' width=50%>" . $html_design . "</td>"
                        . "<tr> "
                        . "<td style='text-align: left; border-right: 2px dashed #000;' width=50%>" . $feedetails_design . " </td> "
                        . "<td style='text-align: left; border-right: 2px dashed #000;' width=50%>" . $feedetails_design . " </td> "
                        . "</tr>"
                        . "<tr> "
                        . "<td style='text-align: left; border-right: 2px dashed #000;' width=50%>" . $bankdetails_design . " </td> "
                        . "<td style='text-align: left; border-right: 2px dashed #000;' width=50%>" . $bankdetails_design . " </td> "
                        . "</tr>"
                        . "</table>";

//                $myfile=fopen("/home/sadddamtest.txt","w") or die("unable to open file");
//                fwrite($myfile,$html);
//                fclose($myfile);
//                pr($html);exit;

                if ($view_flag == 'pdf' || $view_flag == 'D') {
                    $this->create_pdf($html, 'receipt_' . $doc_token_no, 'A3-L');
                } else {
                    return $html;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function summary1_report($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;
        switch ($state_id) {
            case 4:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            case 11:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            case 15:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            case 31:
                return $this->rpt_reg_summary1_31($doc_token_no, $view_flag, $report_type);
                break;
            case 16:
                return $this->rpt_reg_summary1_16($doc_token_no, $view_flag, $report_type);
                break;
            case 36:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            case 27:
                return $this->rpt_reg_summary1_27($doc_token_no, $view_flag, $report_type);
                break;
            case 30:
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
                break;
            default :
                return $this->rpt_reg_summary1_4($doc_token_no, $view_flag, $report_type);
        }
    }

    public function rpt_reg_summary1_16($doc_token_no = NULL, $view_flag = NULL) {

        try {
            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'fee_exemption', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));


                $rpt_data = $this->payment->Query("select art_ty_nm.articledescription_en,geninfo.title_id, geninfo.presentation_date,geninfo.article_id,app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name, party_full_name_$lang as party_full_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    left join ngdrstab_mst_articledescriptiondetail art_ty_nm on art_ty_nm.articledescription_id=geninfo.title_id
                    where  geninfo.token_no=?", array($doc_token_no));

                $art_id = $rpt_data[0][0]['article_id'];
                $srt_ty_name = $rpt_data[0][0]['articledescription_' . $lang];

                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_en'];
                } else {
                    $off = NULL;
                }

                if (!empty($rpt_data)) {
                    $article_id = $rpt_data[0][0]['article_id'];
                }

                $market_value = $consideration_amount = 0;

                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));

                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('article_id' => $article_id, 'delete_flag' => 'N', 'token_no' => $doc_token_no
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    // $this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
//                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
//                                                                ngdrstab_trn_fee_calculation_detail stampd 
//                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
//                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
//                                                                WHERE  stamp.token_no=?  
//                                                                AND stamp.delete_flag='N' 
//                                                                AND feeitem.fee_param_type_id=2 
//                                                                group by feeitem.fee_item_id
//                                                                order by feeitem.fee_preference ASC
//                                                                ", array($doc_token_no));

                $feedetails = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rpt_data[0][0]['article_id']);
//               pr($feedetails);exit;
//                        pr($payment);exit;
                $receipt_no = $this->ReceiptCounter->query("select receipt_id from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
//                pr($receipt_no);exit;
                if (!empty($receipt_no)) {
                    $rec_no = $receipt_no[0][0]['receipt_id'];
                } else {
                    $rec_no = NULL;
                }
                if ($rpt_data[0][0]['presenter_name'] == null) {
                    $presentername = $rpt_data[0][0]['party_full_name'];
                } else {
                    $presentername = $rpt_data[0][0]['presenter_name'];
                }


                $receipt_detail = "<table style='text-align:left;' width='100%'>"
                        . "<tr><td colspan=2><b>" . $rptlabels[10] . " : </b> $rec_no</td></tr>"
                        . "<tr><td colspan=2><b>" . $rptlabels[11] . "</b> : " . date('d-m-Y') . "</td>"
                        . "</tr>"
                        . "<tr>"
                        . "<td colspan=2><b>" . $rptlabels[12] . ":</b> " . $presentername . " </td>"
                        . "</tr>";
                $total = 0;
                foreach ($payment_detail as $payment) {
                    $receipt_detail .= "<tr><td><b>" . $payment[0]['fee_item_desc_' . $lang] . " </b></td> <td width=25%> &#8377;" . $payment[0]['pamount'] . "</td> </tr>";
                    $total += $payment[0]['pamount'];
                }
                $receipt_detail .= "<tr><td colspan=2><hr></td></tr>";
                $receipt_detail .= "<tr><td><b>" . $rptlabels[14] . " </b></td> <td width=25%> &#8377;" . $total . "</td> </tr>";
                $receipt_detail .= "</table>";

                $acknowledgement = "<p style='text-align:left;'>" . $rptlabels[7] . " " . date('d-m-Y') . " " . $rptlabels[8] . " at " . $off . " ";
                $signiture = " " . $rptlabels[9] . " "
                        . "<br><br><br>"
                        . $off . " </p>";

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>"
//                        . "<tr> "
//                         . "<td><h3 align=center style='border:1px solid black; padding:5px;'>" . $rptlabels[1] . "</h3> </td></tr> "
                        . "<tr><td colspan=2 style='text-align:center;'><h3 style='border:1px solid black; padding:5px;'>$rptlabels[1]</h3> </td> </tr>"
                        . "<tr><td style='text-align:left'> Date :-" . date('d-M-Y') . " </td> "
                        . "<td colspan=2 style='text-align:right;'>" . ($rpt_data[0][0]['doc_reg_no'] ? "Office/" . $rpt_data[0][0]['doc_reg_no'] : '') . "</td> </tr>"
//                        . "</tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr> <td>"
                        . "<ul style='text-align:left;'>"
                        . "<li>" . $rptlabels[3] . ":  &#8377;" . round($market_value) . "/-</li>";
                $title_id = @$rpt_data[0][0]['title_id'];
                if ($art_id == 91) {
                    if (!empty($title_id)) {
                        if ($title_id != 56) {
                            if ($title_id == 112) {
                                $html_design .= "<li>" . $rptlabels[424] . ":  &#8377;" . $consideration_amount . " /-</li>";
                            } else if ($title_id == 113) {
                                $html_design .= "<li>" . $rptlabels[17] . ":  &#8377;" . $consideration_amount . " /-</li>";
                            }
                        }
                    }
                } else {
                    $html_design .= "<li>" . $rptlabels[17] . ":  &#8377;" . $consideration_amount . " /-</li>";
                }


                $html_design .= "<li>" . $rptlabels[4] . ":  &#8377;" . $total . " /-</li>"
                        . "</ul>"
                        . "</td></tr>"
                        . "</table>"
                        . "<hr>"
                        . "<table width=100%>"
                        . "<tr>"
                        . "<td width='50%'>" . $acknowledgement . '<br>' . $signiture . "</td>"
                        . "<td> " . $receipt_detail . "</td>"
                        . "</tr>"
                        . "</table> <br>"
                        . "<hr>"
                ;
//            ====================================================View Summary 1(Yogesh)=======================================================================

                $feedetails_design = "<table width=100% border=1   align='center' cellpadding='5' cellspacing='0' style='border-collapse: collapse'><tr>"
                        . "<th>" . $rptlabels[78] . "</th>"
                        . "<th>" . $rptlabels[79] . "</th>"
                        . "<th>" . $rptlabels[80] . "</th>"
                        . "<th>" . $rptlabels[81] . "</th>"
                        . "<th>" . $rptlabels[82] . "</th>"
                        . "<th>" . $rptlabels[83] . "</th>"
                        . "<th>" . $rptlabels[85] . "</th>"
                        . "<th>" . $rptlabels[84] . "</th>"
                        . "</tr>";

                $payment1 = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
                $paymentfields = $this->PaymentFields->find('list', array('fields' => array('field_name', 'field_name_desc_en'), 'order' => 'srno ASC'));
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));
                $sdamount = 0;
                $paidamount = 0;
                foreach ($feedetails as $fee) {
                    $sdamount += $fee[0]['totalsd'];
                    $amount = 0;
                    foreach ($payment1 as $paydetails) {
                        //  pr($paydetails);exit;              
                        $paydetails = $paydetails[0];

                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $amount += $paydetails['pamount'];
                            $paidamount += $paydetails['pamount'];
                            //$test++;
                        }
                    }
                    $feedetails_design .= "<tr>"
                            . "<td> &nbsp;" . $fee[0]['fee_item_desc_' . $lang] . "</td>"
                            . "<td> &nbsp;" . $fee[0]['totalsd'] . "</td>"
                            . "<td> &nbsp;" . $amount . "</td>"
                            . "<td> &nbsp;" . ($fee[0]['totalsd'] - $amount) . "</td>";

                    $extrarow = 0;
                    foreach ($payment1 as $paydetails) {
                        // pr($paydetails);exit;
                        $paydetails = $paydetails[0];
                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $extrarow++;
                            if ($extrarow > 1) {
                                $feedetails_design .= "</tr><tr><td colspan='4'></td>";
                            }
                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {



                                $feedetails_design .= ""
                                        . "<td> &nbsp;" . $paydetails['payment_mode_desc_en'] . "</td>"
                                        . "<td> &nbsp;" . $paydetails['payee_fname_en'] . " " . $paydetails['payee_mname_en'] . " " . $paydetails['payee_lname_en'] . "</td>"
                                        . "<td> &nbsp;<ul class='list-inline'>";
                                foreach ($paymentfields_trn as $key => $singletrnfield) {
                                    if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
                                        $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
                                    }
                                }
                                $feedetails_design .= "</ul></td><td> " . $paydetails['pamount'] . " </td>";
                            }
                        }
                    }
                    $feedetails_design .= "</tr>";
                }
                $total_amount = $sdamount - $paidamount;
                $feedetails_design .= "<tr>"
                        . "<td>Sub Total</td>"
                        . "<td> $sdamount </td>"
                        . "<td> $paidamount </td>"
                        . "<td> $total_amount </td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
                        . "<td></td>"
//                    . "<td></td>"
                        . "</tr>";
                $feedetails_design .= "</table>";
                $feedetails_design .= "<table>"
                        . "<tr><td>"
                        . "<p style='text-align:left'>";

                if ($art_id == 91) {
                    if (!empty($srt_ty_name)) {
                        $feedetails_design .= "<b>" . $rptlabels[15] . " : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . " (" . $srt_ty_name . ") <br/>";
                    } else {
                        $feedetails_design .= "<b>" . $rptlabels[15] . " : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/>";
                    }
                } else {
                    $feedetails_design .= "<b>" . $rptlabels[15] . " : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/>";
                }

                $feedetails_design .= "</p>"
                        . "</td></tr>"
                        . "</table>";
                $exemptions = $this->fee_exemption->query("select feerule.fee_rule_desc_$lang,fee_exe.exemption_amt from ngdrstab_trn_fee_exemption as fee_exe, ngdrstab_mst_article_fee_rule feerule where fee_exe.fee_rule_id=feerule.fee_rule_id and  fee_exe.token_no=?", array($doc_token_no));
                if (!empty($exemptions)) {
                    $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='center'> <b>" . __('lblExemptionFeerule') . "<b>   </td><td width=50% align='center'> <b>" . __('lblFeeExemption') . " </b></td></tr></table>";
                    foreach ($exemptions as $exemption1) {

                        $feedetails_design .= "<table width=100% border=1><tr><td width=50% align='left'>" . $exemption1[0]['fee_rule_desc_' . $lang] . "</td><td width=50%>" . $exemption1[0]['exemption_amt'] . " /- </td></tr></table>";
                    }
                }
                //echo $html_design . $feedetails_design;exit;
                if ($view_flag == 'pdf' || $view_flag == 'D') {

                    $this->create_pdf($html_design . $feedetails_design, 'doc_reg_summary1_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design . $feedetails_design;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function party_home_visit($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;
        switch ($state_id) {
            case 27:
                return $this->home_visit($doc_token_no, $view_flag, $report_type);
                break;
            default :
                return $this->home_visit($doc_token_no, $view_flag, $report_type);
        }
    }

    public function rpt_reg_summary2($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                $bar_qr = '';
                if (!empty($regconf)) {
                    if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                        $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                    } else {
                        $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                    }
                }

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>" . $bar_qr . ""
                        . "<tr> "
                        . "<td colspan=2><h3 style='border:1px solid black; padding:5px;'>$rptlabels[19]</h3> </td> </tr>"
                        . "<tr><td style='text-align:left'>Date :- " . date('d-M-Y') . " </td> "
                        . "<td style='text-align:right'><b> $rptlabels[20]:</b>" . $rpt_data[0][0]['doc_reg_no'] . " </td></tr> "
                        . "</tr>"
                        . "<tr><td colspan=2 style='text-align:left;'> <b>$rptlabels[33] : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/> </td> </tr>"
                        . "</table>"
                        . "<hr>";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                $party_html = $this->get_party_data($doc_token_no, $lang, $rptlabels, $report_type);
                $party_html .= "<p style='text-align:left'>" . $rptlabels[26];
                $party_html .= "<br>$rptlabels[27] " . " 3 at " . " $rptlabels[32]" . date('d-m-Y') . " </p>";
                $html_design .= $party_html;
//----------------------------------------------------------------for Adding Identification in Report ----------------------------------------------------------------------
                $identification_design = "<p style='text-align:left'><b>Inditification:</b>"
                        . "<br> </p>";
                $identification_design .= $this->get_identification_data($doc_token_no, $lang, $rptlabels, $report_type);
                $html_design .= $identification_design;
                $html_design .= "<hr/>";
//----------------------------------------------------------------For Stamp -----------------------------------------------------------------------------------
                $html_design .= "<table width=100%> "
                        . "<tr> <td>" . $rptlabels[27] . " 4 at " . $rptlabels[32] . " " . date('d-F-Y h:m:s') . "</td> <td>" . $rptlabels[34] . " </td> <tr> "
                        . "<tr style='line-height: 18h;'><td> <br><br><br> </td> <td>  </td> <tr> "
                        . "</table>";
                $html_design .= "<hr/>";
//----------------------------------------------------------------EPayment Details. -----------------------------------------------------------------------------------            



                $payment_data = $this->payment->find('all', array('fields' => array('payment_id', 'payment_mode.payment_mode_desc_' . $lang, 'payment.bank_trn_id', 'payment.pamount'),
                    'joins' => array(
                        array('table' => 'ngdrstab_mst_payment_mode', 'alias' => 'payment_mode', 'conditions' => array('payment_mode.payment_mode_id=payment.payment_mode_id and payment_mode.payment_mode_id NOT IN (8,3)'))
                    ),
                    'conditions' => array('payment.token_no' => $doc_token_no)
                ));
                if ($payment_data) {
                    $ePaymentDetail = "<h5 align=center> $rptlabels[77] </h5> <hr/>";
                    $ePaymentDetail .= "<table class='table table-striped table-bordered table-hover' width=100% align=left>"
                            . "<thead><tr>"
                            . " <td>$rptlabels[21]</td>"
                            . "<td>$rptlabels[35]</td>"
                            . "<td>$rptlabels[36]</td>"
                            . "<tr></thead>"
                            . "<tbody>";
                    $SrNo = 1;
                    foreach ($payment_data as $pd) {
                        $ePaymentDetail .= "<tr><td>" . $SrNo++ . "</td>  <td>" . $pd['payment']['payment_id'] . "</td> <td>" . $pd['payment']['pamount'] . "</td> </tr>";
                    }
                    $ePaymentDetail .= ' <tbody></table>';
                    $html_design .= $ePaymentDetail;
                }
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            
                $instructions = $this->RegInstructionSummary2->find('list', array('fields' => array('instruction_id', 'instruction_desc_' . $lang), 'condtions' => array('state_id' => $stateid)));

                $instructionList = '';
                if ($instructions) {
                    $instructionList .= "<h5 align=center> Know Yours Rights as Registant </h5>"
                            . "<ol style='text-align:center'>";
                    foreach ($instructions as $instru) {
                        $instructionList .= "<li style='text-align:left'>" . $instru . " </li>";
                    }
                    $instructionList .= "</ol>";
                }
                $html_design .= $instructionList;
                if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                    $this->create_pdf($html_design, 'doc_reg_summary2_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design;
                }
            } else {
                return 'invalid data';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary2_36($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F', $lang = 'en', $doc_lang = 'en') {
        try {
//$this->autoRender = FALSE;
            //$doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('regconfig', 'State', 'payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article', 'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';
            $userid = $this->Session->read("citizen_user_id");
            $stateid = $this->Auth->User("state_id");
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $html_design = '';
            $alias_name = '';
            $idenalias = '';
            $witalias = '';

            $state = $this->State->find('all', array('conditions' => array('state_id' => $stateid)));
            $state_name = $state[0]['State']['state_name_en'];

            $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));
            $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
            $bar_qr = '';
            if (!empty($regconf)) {
                if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                } else {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                }
            }
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }
            if (!empty($rptData)) {
                $rptData = $rptData[0];


//===============================         Property Details ==============================================
                $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
                //pr($rptPropDtl);exit;
                $prpt_valuation = 0;
                $imagedata = "/home/NGDRS_UPLOAD/ReportImage/emblem.png";
                $image1 = file_get_contents('/home/NGDRS_UPLOAD/ReportImage/emblem.png');
                $image = base64_encode($image1);

                if ($view_flag == 'V') {
                    $rpt_img = "<img src='data:image/png;charset=utf-8;base64," . $image . "' height='70px' width='70px' /> ";
                } else {
                    $rpt_img = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                }

                $html_design = "<table align='left'><tr><td>" . $bar_qr . "</td></tr></table>";
                $html_design .= "<table  align='right'><tr><td>" . $rpt_img . "</td></tr></table>";

//             $img1="<img src='" . $imagedata . "' height='150px' width='200px' />";
                $rpt_title = " Deed Endorsement Sample Template ";




                $html_design .= "<table width=100% align=center>"
                        . "<tr><td> <b> OFFICE OF THE SUB REGISTRAR </b></td> </tr>"
                        . "<tr><td> <b>Office Name :- </b>" . $off . "</td> </tr>"
                        . "<tr><td> <b>District Name :- </b>" . $rptPropDtl[0]['district']['district_name_en'] . "</td> </tr>"
                        . "<tr><td> <b>State Name :- </b>" . $state_name . "</td></tr>"
                        . "</table>";
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
                $html_design .= "<h4 align=center> <b>" . $rptlabels[363] . " </b></h4> <h5 align=right> Token No :- <b>" . $doc_token_no . "</b></h5>";
                $html_design .= "<div width=100% align=center>"
                        . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                        . "<table width=100% align=center border=1>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[177] . " </b></td> <td width=80%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Fee Details </b></td><td colspan=2> ";

                $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData['article']['article_id']);
                $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;
                $lineNo = 1;
                if ($stamp_duty) {
                    foreach ($stamp_duty as $sd) {
//                    pr($sd);exit;
                        $html_design .= '<b>' . $sd[0]['fee_item_desc_' . $lang] . '</b> :- Rs. ' . $sd[0]['totalsd'] . ', ';
                        if ($lineNo % 3 == 0) {
                            $html_design .= '';
                        }
                        $lineNo++;
                    }
                }

                $html_design .= "</td></tr></table></div>";
                if ($rptPropDtl) {
                    $sr_no = 0;
                    foreach ($rptPropDtl as $prpt) {
                        $sr_no++;


                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }
                        $prop_boundaries = '<b>Property Boundaries</b> :- East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];
//                    pr($prop_boundaries);exit;
                        $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
//                    pr($tmp_prpt_val);exit;
                        $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
//                        pr($prpt_valuation);exit;
//                     $cons_amt='';
                        if (!empty($rptPropDtl)) {
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';
                        }
//                        pr($cons_amt);exit;

                        $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                        $tmp_prop_area = array();
                        foreach ($prop_area as $parea) {
                            if ($parea['item']['is_list_field_flag'] == 'Y')
                                $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                            array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                        }

                        $property_id = $prpt['property_details_entry']['property_id'];
                        $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value
                                                                from ngdrstab_trn_parameter as param
                                                                JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                                                                where 
                                                                param.token_id=? and param.property_id=?", array($doc_token_no, $property_id));



                        $property_id = $prpt['property_details_entry']['property_id'];
                        $lblalias = $rptlabels[402];

                        $valuation = $this->valuation->Query("select val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land 
                                                    from ngdrstab_trn_property_details_entry p
                                                    join ngdrstab_trn_valuation val  ON val.val_id=p.val_id
                                                   join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
                                                   join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
                                                   join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id 
                                                    where p.token_no=$doc_token_no and p.property_id=$property_id
                                                    group by p.property_id,val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang,usage.usage_main_catg_desc_$lang");

                        if (!empty($valuation)) {
                            $sagment_name = $valuation[0][0]['village_name_' . $lang];
                            $type_of_land = $valuation[0][0]['type_of_land'];
                            $seg_desc = $valuation[0][0]['segment_name'];
                            $val_id = $valuation[0][0]['val_id'];
                            $rate = round($valuation[0][0]['rate']);

                            $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                            $area = '';
                            foreach ($valuation_details as $vdetails) {
                                $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
//                       pr($areawwww);
                                foreach ($areawwww as $area1)
                                    if ($area1[0]['area_field_flag'] == 'Y') {
                                        $area .= " " . $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
//                               pr($area);exit;
                                    };
                            }




                            $html_design .= "<div width=100% align=center>"
                                    . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                                    . "<table width=100% align=center border=1 >"
                                    . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Property No. </b></td><td>" . $sr_no . "</td></tr>"
                                    . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Valuation Details </b></td> <td> <b>" . $rptlabels[166] . " :- </b> Rs." . round($prpt_valuation) . "/- ,<b>" . $rptlabels[401] . " </b>:- Rs." . round(@$cons_amt) . "/-</td>";
                        }



                        $html_design .= "</tr>"
                                . "<tr><td bgcolor='#e0e1e2'> <b> Property Details </b></td>"
                                . "<td> <b>District :- </b>" . $rptPropDtl[0]['district']['district_name_en'] . " ,"
                                . "<b> Tehsil :- </b> " . $rptPropDtl[0]['taluka']['taluka_name_en'] . " ,"
                                . "<b> Village Name :- </b> " . $rptPropDtl[0]['village']['village_name_en'] . " <br>"
                                . " $prop_boundaries <br>";
//                      pr($serveyno);
//                      exit;
                        foreach ($serveyno as $attribute) {

                            $html_design .= "<b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> - " . $attribute[0]['paramter_value'] . "";
                        }
                        $html_design .= "<br><b>" . $rptlabels[173] . "</b> :- " . $area . " </td></tr>"
                                . "</table>"
                                . "</div>";
                    }
                } else {
                    
                }

                $html_design .= " <table width=100%> <tr> <td width=70%>"; //divide into two screen
                $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                $alias = $this->party->find('all', array('fields' => array('alias_name_en'), 'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                if (!empty($alias[0]['party']['alias_name_en'])) {

                    $alias_name = '(' . $lblalias . ':- <b>' . $alias[0]['party']['alias_name_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                } else {
                    $alias_name = '';
                }
                $newamt = $this->SroDependentFields->find('all', array('fields' => array('field_value'), 'conditions' => array('token_no' => $doc_token_no, 'field_id' => 1)));
//            pr($newamt);exit;
                //  pr($doc_token_no);exit;
                $party = $this->party_entry->query("SELECT  cate.category_name_$lang,iden.identificationtype_desc_$lang,p.identificationtype_desc_en as iddesc ,p.is_presenter,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left outer join ngdrstab_mst_party_category cate on cate.category_id=p.party_catg_id"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_executer='Y'");

//                    pr($party);exit;
                $sellerflag = 0;
                $buyerflag = 0;
                $buyername = '________';
                $buyerfathername = '_________';
                $image_codes = null;
                $image_codes1 = null;
//            $image_codes=='';
                $img1 = '';
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0 && $party1[0]['is_presenter'] == 'Y') {
                        $sellerflag = 1;
                        $imagedata = $path['file_config']['filepath'] . $party1[0]['photo_img'];
//                     $sellername= $party1[0]['party_full_name_'.$lang];
//                            $sellerfathername= $party1[0]['father_full_name_'.$lang];
//                            pr($imagedata);exit;
                        if ($party1[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='150px' width='200px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }
//                            pr($imagedata);exit;
                    } else {
                        continue;
                    }
                }
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {

                        $sellerflag = 1;
                        $imagedata1 = $path['file_config']['filepath'] . $party1[0]['photo_img'];

                        if ($party1[0]['photo_img'] != null && file_exists($imagedata1)) {
                            $buyername = $party1[0]['party_full_name_en'];
                            $buyerfathername = $party1[0]['father_full_name_' . $lang];
                            $image = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes1 = null;
                            $btnaccept = 0;
                        }
                    } else {
                        continue;
                    }
                }


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' >" . $rptlabels[178] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b>" . $alias_name . "</b>                         
                  " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('__________')) . "</b> "
                        . $rptlabels[180] . "</td></tr></table>";


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' width=100%>" . $rptlabels[199] . " :- <b>" . date('d-M-Y') . "</b>  " . $rptlabels[200] . " :-  <b>" . date('l') . "</b> "
                        . $rptlabels[201] . " :- <b>" . date('H:i:s A') . "</b></td></tr></table><br><br>";

                $html_design .= "<table width=100%><tr><td width=50% align=left>" . $rptlabels[181] . "</td> </tr> </table><br>";


//               echoag);exit; 


                $html_design .= "</td><td></td><td></td><td width=30%> " . $img1 . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "(" . $party[0][0]['category_name_' . $lang] . ")" . " </td></tr> </table>";

                IF ($lang == 'en') {
                    $html_design .= "<table width=100% border=0>"
                            . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b> " . $alias_name . "</b>                       
                  " . $rptlabels[179] . "<b> " . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('_________')) . "</b> 
                  " . $rptlabels[366] . " Rs. <b>" . (($newamt) ? ($newamt[0]['SroDependentFields']['field_value']) : ('-')) . "</b> "
                            . $rptlabels[354] . "  <b>" . $rptData['article']['article_desc_' . $lang] . "</b> "
                            . $rptlabels[367];
                } ELSE {
                    $html_design .= "<table width=100% border=0>"
                            . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b> " . $alias_name . "</b>                       
                  " . $rptlabels[179] . "<b> " . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('_________')) . "</b> 
                  " . $rptlabels[366] . "  <b>" . $art . "</b> "
                            . $rptlabels[354] . "  <b>" . (($newamt) ? ($newamt[0]['SroDependentFields']['field_value']) : ('-')) . "</b> "
                            . $rptlabels[367];
                }




                $data = $this->ApplicationSubmitted->Query("select aps.token_no ,art.book_number,aps.doc_reg_no from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                           join ngdrstab_mst_article art on art.article_id=gen.article_id where aps.token_no=$doc_token_no");
                $book_no = '';
                $doc_no = '';
                if (!empty($data)) {
                    $doc_no = $data[0][0]['doc_reg_no'];
                    $book_no = $data[0][0]['book_number'];
                }

                $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
                if (!empty($identifier)) {

                    $witness = $this->witness->find('all', array('fields' => array('witness_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
                    if (!empty($witness)) {
                        if (count($identifier) > 0) {
                            $html_design .= "<b>" . (isset($identifier[0]) ? ($identifier[0]['identification']['identification_full_name_en']) : ('_________')) . "</b>  " . $rptlabels[368] . "</b>

                                    <b>" . (isset($witness[0]) ? ($witness[0]['witness']['witness_full_name_en']) : ('________')) . "</b> "
                                    . " ,<b>" . (isset($witness[1]) ? ($witness[1]['witness']['witness_full_name_en']) : ('')) . "</b>"
                                    . " (" . $rptlabels[202] . ")</td>"
                                    . "</tr> </table><br>";
                        }
                    }  //witness close
                }// identifier close

                $html_design .= "<table width=100% align=center border=1>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[193] . " </b></td> <td>" . $doc_no . "</td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[194] . " </b></td> <td>" . $book_no . "</td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[195] . " </b></td> <td></td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[196] . " </b></td> <td> </td></tr>"
                        . "</table>";

                $html_design .= "<table width=100%>"
                        . "<tr><td align=left> " . $rptlabels[358] . "</td></tr>"
                        . "</table>";

                $html_design .= "<table width=100%><tr><td align=left>" . $rptlabels[197] . " </td>  </tr><tr> <td>&nbsp;</td></tr>  "
                        . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td> <td align=right> <b>" . $rptlabels[364] . " </b></td></tr> </table><br>";
            }
            $html_design .= "<hr/>";
            $party_html = $this->get_party_data($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);

            $html_design .= $party_html;

            $html_design .= "<hr/>";
            $identification_design = $this->get_identification_data_andaman($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
            $html_design .= $identification_design;

            $html_design .= "<hr/>";


            $witness_design = $this->get_witness_data_andaman($doc_token_no, $lang, $rptlabels, $report_type);
            $html_design .= $witness_design;




            $html_design .= "<table width=100%>"
                    . "<tr><td align=left> " . $rptlabels[192] . "  </td></tr></table><br><br>";


            $html_design .= "<br><br><table width=100%><tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td> <td align=right><b>Signature of Sub Registrar/Joint Sub Registrar</b> </td></tr> </table>";

//            $html_design.="<table><tr><td>State_id=".$stateid."</td></tr></table>";


            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                // echo $html_design;
//                $mfile=fopen("/home/abc.txt","w");
//                fwrite($mfile,$html_design);
//                fclose($mfile);
//                exit;
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', 'SRO');
            } else {
                return $html_design;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary2_20($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F', $lang = 'en', $doc_lang = 'en') {
        try {
//$this->autoRender = FALSE;
            //$doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('regconfig', 'State', 'payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article', 'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';
            $userid = $this->Session->read("citizen_user_id");
            $stateid = $this->Auth->User("state_id");
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $html_design = '';
            $alias_name = '';
            $idenalias = '';
            $witalias = '';
//            $state_name='';
//            $state='';
//             $statename = $this->Session->read("state_name_en");
//             pr($statename);exit;
            $state = $this->State->find('all', array('conditions' => array('state_id' => $stateid)));
//              pr($state);exit;
            $state_name = $state[0]['State']['state_name_en'];
            $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

            $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
//              pr($regconf);
            $bar_qr = '';
            if (!empty($regconf)) {
                if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                } else {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                }
            }
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }
            if (!empty($rptData)) {
                $rptData = $rptData[0];


//===============================         Property Details ==============================================
                $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
                //pr($rptPropDtl);exit;
                $prpt_valuation = 0;
//                $imagedata="/home/NGDRS_UPLOAD/ReportImage/emblem.png";
//                  $image1 = file_get_contents('/home/NGDRS_UPLOAD/ReportImage/emblem.png');
//                 $image = base64_encode($image1);
//                 
//                            if($view_flag=='V'){
//                               $rpt_img="<img src='data:image/png;charset=utf-8;base64," . $image . "' height='70px' width='70px' /> ";  
//                            }else{
//                                $rpt_img="<img src='" . $imagedata . "' height='70px' width='70px' />";
//                            }
//            $html_design = "<table  align='right'><tr><td>".$rpt_img."</td></tr></table>";
//             $img1="<img src='" . $imagedata . "' height='150px' width='200px' />";
                $rpt_title = " Deed Endorsement Sample Template ";


                $html_design = "<table align='left'><tr><td>" . $bar_qr . "</td></tr></table>";

                $html_design .= "<table width=100% align=center>"
                        . "<tr><td style='text-align:center;'> <b> OFFICE OF THE SUB REGISTRAR </b></td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>Office Name :- </b>" . $off . "</td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>District Name :- </b>" . @$rptPropDtl[0]['district']['district_name_en'] . "</td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>State Name :- </b>" . $state_name . "</td></tr>"
                        . "</table>";
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
                $html_design .= "<h3 align=center> <b>" . $rptlabels[363] . " </b></h3> <h5 align=right> Token No :- <b>" . $doc_token_no . "</b></h5>";
                $html_design .= "<div width=100% align=center>"
                        . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                        . "<table width=100% align=center border=1>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[177] . " </b></td> <td width=80%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Fee Details </b></td><td colspan=2> ";

                $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData['article']['article_id']);
                $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;
                $lineNo = 1;
                if ($stamp_duty) {
                    foreach ($stamp_duty as $sd) {
//                    pr($sd);exit;
                        $html_design .= '<b>' . $sd[0]['fee_item_desc_' . $lang] . '</b> :- Rs. ' . $sd[0]['totalsd'] . ', ';
                        if ($lineNo % 3 == 0) {
                            $html_design .= '';
                        }
                        $lineNo++;
                    }
                }

                $html_design .= "</td></tr></table></div>";




                if ($rptPropDtl) {
                    $sr_no = 0;
                    foreach ($rptPropDtl as $prpt) {
                        $sr_no++;


                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }
                        $prop_boundaries = '<b>Property Boundaries</b> :- East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];
//                    pr($prop_boundaries);exit;
                        $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
//                    pr($tmp_prpt_val);exit;
                        $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
//                        pr($prpt_valuation);exit;
//                     $cons_amt='';
                        if (!empty($rptPropDtl)) {
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';
                        }
//                        pr($cons_amt);exit;

                        $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                        $tmp_prop_area = array();
                        foreach ($prop_area as $parea) {
                            if ($parea['item']['is_list_field_flag'] == 'Y')
                                $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                            array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                        }

                        $property_id = $prpt['property_details_entry']['property_id'];
                        $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value
                                                                from ngdrstab_trn_parameter as param
                                                                JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                                                                where 
                                                                param.token_id=? and param.property_id=?", array($doc_token_no, @$property_id));



                        $property_id = $prpt['property_details_entry']['property_id'];
                        $lblalias = $rptlabels[402];

                        $html_design .= "<div width=100% align=center>"
                                . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                                . "<table width=100% align=center border=1 >";

//                        $valuation = $this->valuation->Query("select val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land 
//                                                    from ngdrstab_trn_property_details_entry p
//                                                    join ngdrstab_trn_valuation val  ON val.val_id=p.val_id
//                                                   join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
//                                                   join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
//                                                   join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id 
//                                                    where p.token_no=$doc_token_no and p.property_id=$property_id
//                                                    group by p.property_id,val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang,usage.usage_main_catg_desc_$lang");

                        $valuation = $this->valuation->Query("select val.village_id,val.val_id,val.rate, village.village_name_$lang,loclevel1prop.level_1_desc_$lang,levellist.list_1_desc_$lang,
levellist.list_1_desc_$lang
as segment_name,usage.usage_main_catg_desc_$lang as type_of_land 
   from ngdrstab_trn_property_details_entry p
     join ngdrstab_trn_valuation val  ON val.val_id=p.val_id
                                                    
 join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
 left join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
 join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id 
 left join ngdrstab_mst_location_levels_1_property loclevel1prop on loclevel1prop.level_1_id= p.level1_id 

 
 where p.token_no=$doc_token_no and p.property_id=$property_id
 group by p.property_id,val.village_id,val.val_id,val.rate, 
 village.village_name_$lang,levellist.list_1_desc_$lang,loclevel1prop.level_1_desc_$lang,levellist.list_1_desc_$lang,usage.usage_main_catg_desc_$lang
");
                        if (!empty($valuation)) {
                            $sagment_name = $valuation[0][0]['village_name_' . $lang];
                            $type_of_land = $valuation[0][0]['type_of_land'];
                            $seg_desc = $valuation[0][0]['segment_name'];
                            $val_id = $valuation[0][0]['val_id'];
                            $rate = round($valuation[0][0]['rate']);
                            $locname = $valuation[0][0]['level_1_desc_en'];

                            $listname = $valuation[0][0]['list_1_desc_en'];
                            $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                            $area = '';
                            foreach ($valuation_details as $vdetails) {
                                $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
//                       pr($areawwww);
                                foreach ($areawwww as $area1)
                                    if ($area1[0]['area_field_flag'] == 'Y') {
                                        $area .= " " . $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
//                               pr($area);exit;
                                    };
                            }




                            $html_design .= "<tr><td width=20% bgcolor='#e0e1e2'> <b>Property No. </b></td><td>" . $sr_no . "</td></tr>"
                                    . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Valuation Details </b></td> <td> <b>" . $rptlabels[166] . " :- </b> Rs." . round($prpt_valuation) . "/- ,<b>" . $rptlabels[401] . " </b>:- Rs." . round(@$cons_amt) . "/-</td></tr>";
//                      pr($rptlabels[401]);exit;
                        }



                        $html_design .= ""
                                . "<tr><td bgcolor='#e0e1e2'> <b> Property Details </b></td>"
                                . "<td> <b>District :- </b>" . $rptPropDtl[0]['district']['district_name_en'] . " ,"
                                . "<b> Tehsil :- </b> " . $rptPropDtl[0]['taluka']['taluka_name_en'] . " ,"
                                . "<b> Village Name :- </b> " . $rptPropDtl[0]['village']['village_name_en'] . ","
                                . "<b> Location :- </b> " . $listname . ", " . $locname . " "
                                . " <br>"
                                . " $prop_boundaries <br>";
//                      pr($serveyno);
//                      exit;
                        foreach ($serveyno as $attribute) {

                            $html_design .= "<b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> - " . $attribute[0]['paramter_value'] . "";
                        }
                        $html_design .= "<br><b>" . $rptlabels[173] . "</b> :- " . @$area . " </td></tr>"
                                . "</table>"
                                . "</div>";
                    }
                } else {
                    
                }

                $html_design .= " <table width=100%> <tr> <td width=70%>"; //divide into two screen
                $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en', 'representive_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));
                $executer_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_executer' => 'Y')));
                $alias = $this->party->find('all', array('fields' => array('alias_name_en'), 'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                if (!empty($alias[0]['party']['alias_name_en'])) {

                    $alias_name = '(' . $lblalias . ':- <b>' . $alias[0]['party']['alias_name_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                } else {
                    $alias_name = '';
                }
                $newamt = $this->SroDependentFields->find('all', array('fields' => array('field_value'), 'conditions' => array('token_no' => $doc_token_no, 'field_id' => 1)));
//            pr($newamt);exit;
                //  pr($doc_token_no);exit;
                $party = $this->party_entry->query("SELECT  cate.category_name_$lang,iden.identificationtype_desc_$lang,p.identificationtype_desc_en as iddesc ,p.is_presenter,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left outer join ngdrstab_mst_party_category cate on cate.category_id=p.party_catg_id"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_executer='Y'");
                $party_pres = $this->party_entry->query("SELECT aps.doc_reg_no,aps.final_doc_reg_no,aps.doc_reg_date,aps.final_stamp_date,iden.identificationtype_desc_en,p.identificationtype_desc_en as iddesc "
                        . ",p.pan_no,p.father_full_name_$lang,p.party_full_name_en,p.representive_full_name_en,p.uid,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_trn_application_submitted aps on aps.token_no=p.token_no"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_presenter='Y'");

                //  pr($party_pres);exit;
                $sellerflag = 0;
                $buyerflag = 0;
                $buyername = '________';
                $buyerfathername = '_________';
                $image_codes = null;
                $image_codes1 = null;
//            $image_codes=='';
                $img1 = '';
                foreach ($party as $party1) {
//                    pr($party1);exit;
                    if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0 && $party1[0]['is_presenter'] == 'Y') {
//                     if ($party1[0]['party_type_flag'] == 1 && $party1[0]['is_presenter'] == 'Y') {
                        $sellerflag = 1;
                        $imagedata = $path['file_config']['filepath'] . $party1[0]['photo_img'];
                        //pr($imagedata);exit;
//                     $sellername= $party1[0]['party_full_name_'.$lang];
//                            $sellerfathername= $party1[0]['father_full_name_'.$lang];
//                            pr($imagedata);exit;
                        if ($party1[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='150px' width='200px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }
//                            pr($imagedata);exit;
                    } else {
                        continue;
                    }
                }
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {

                        $sellerflag = 1;
                        $imagedata1 = $path['file_config']['filepath'] . $party1[0]['photo_img'];

                        if ($party1[0]['photo_img'] != null && file_exists($imagedata1)) {
                            $buyername = $party1[0]['party_full_name_en'];
                            $buyerfathername = $party1[0]['father_full_name_' . $lang];
                            $image = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes1 = null;
                            $btnaccept = 0;
                        }
                    } else {
                        continue;
                    }
                }

                if (!empty($presenter_name)) {
                    if ($presenter_name[0]['party']['party_full_name_en'] == null) {
                        $presenter_name1 = $presenter_name[0]['party']['representive_full_name_en'];
                    } else {
                        $presenter_name1 = $presenter_name[0]['party']['party_full_name_en'];
                    }
                }
                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' >" . $rptlabels[178] . "<b>" . (($presenter_name) ? ($presenter_name1) : ('_________')) . "</b>" . $alias_name . "</b>                         
                  " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('__________')) . "</b> "
                        . $rptlabels[180] . "</td></tr></table>";


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' width=100%>" . $rptlabels[199] . " :- <b>" . date('d-M-Y') . "</b>  " . $rptlabels[200] . " :-  <b>" . date('l') . "</b> "
                        . $rptlabels[201] . " :- <b>" . date('H:i:s A') . "</b></td></tr></table><br><br>";

                $html_design .= "</td><td></td><td></td><td width=30%> " . $img1 . (($presenter_name) ? ($presenter_name1) : ('_________')) . "(" . $party[0][0]['category_name_' . $lang] . ")" . " </td></tr> </table>";


                $data = $this->ApplicationSubmitted->Query("select aps.token_no ,art.book_number,aps.doc_reg_no,volno.volume_number,volno.page_number_start from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                           join ngdrstab_mst_article art on art.article_id=gen.article_id 
                                                           LEFT JOIN ngdrstab_trn_volume_number_page_number_entry volno ON volno.token_no=aps.token_no
where aps.token_no=$doc_token_no");

                $book_no = '____';
                $doc_no = '____';
                $vol_no = '___';
                $page_no = '____';
                $serial_no = '____';
                if (!empty($data)) {
                    $doc_no = $data[0][0]['doc_reg_no'];
                    $book_no = $data[0][0]['book_number'];
                    $vol_no = $data[0][0]['volume_number'];
                    $page_no = $data[0][0]['page_number_start'];
                    $serial_no = $data[0][0]['doc_reg_no'];
                }

                $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
//
                if (!empty($party_pres)) {
                    if ($party_pres[0][0]["party_full_name_en"] == null) {
                        $party_pres1 = $party_pres[0][0]["representive_full_name_en"];
                    } else {
                        $party_pres1 = $party_pres[0][0]["party_full_name_en"];
                    }
                    if ($party_pres[0][0]["pan_no"] == null) {
                        $ide_desc = $this->dec($party_pres[0][0]["uid"]);
                    } else {
                        $ide_desc = $party_pres[0][0]["pan_no"];
                    }
                    $html_design .= "<table width=100% border=1>"
                            . "<tr>
                            <th style='text-align:center;'>" . $rptlabels[359] . "</th>
                            <th style='text-align:center;'>" . $rptlabels[360] . "</th>
                            <th style='text-align:center;'>" . $rptlabels[362] . "</th></tr>
                            <tr>
                            <td>" . $party_pres1 . "</td>
                            <td>" . 'PAN/UID' . "  </td>
                            <td>" . $ide_desc . "</td>
                            </tr>
                            </table>";
                }


                $doc_reg_date = '____';
                if (!empty($party_pres[0][0]['doc_reg_date'])) {
                    $doc_reg_date = date('d-M-Y', strtotime($party_pres[0][0]['doc_reg_date']));
                }
                $doc_reg_date_final = '____';
                if (!empty($party_pres[0][0]['final_stamp_date'])) {
                    $doc_reg_date_final = date('d-M-Y', strtotime($party_pres[0][0]['final_stamp_date']));
                }
                $final_doc_reg_no = '___';
                if (!empty($party_pres[0][0]['final_doc_reg_no'])) {
                    $final_doc_reg_no = $party_pres[0][0]['final_doc_reg_no'];
                }

                $paddress = $this->party_entry->query("select distinct(mp.field_id), mp.pattern_desc_en ,tp.field_value_en

from  ngdrstab_conf_behavioral_patterns mp

JOIN  ngdrstab_trn_behavioral_patterns tp ON tp.field_id=mp.field_id

where tp.mapping_ref_id=2 and tp.mapping_ref_val=? and tp.token_no=?", array($party_pres[0][0]['party_id'], $doc_token_no));

                $address_str = "____";
                if (!empty($paddress)) {
                    $address_str = "";
                    foreach ($paddress as $field) {
                        $address_str .= "," . $field[0]['pattern_desc_en'] . " " . $field[0]['field_value_en'];
                    }
                    if (!empty($address_str)) {
                        $address_str = substr($address_str, 1);
                    }
                }

                /*      $html_design .= "<table width=100%>"
                  . "<tr><td align=left>"
                  . "<p>"
                  . "This <b>".$rptData['article']['article_desc_' . $lang]."</b> was presented before the registering officer on <b>".$doc_reg_date."</b> "
                  . "by <b>".$presenter_name[0]['party']['party_full_name_'.$lang]." S/O,D/O,W/O ".$presenter_name[0]['party']['father_full_name_'.$lang]."</b> resident of ".$address_str." ."
                  . "This was registered as serial no ".$serial_no." and deed no: <b>".$final_doc_reg_no."</b> in volume <b>".$vol_no."</b>"
                  . " under page no <b>".$page_no."</b> of  book no <b>".$book_no."</b> at <b>".$off."</b> on <b>".$doc_reg_date_final."</b>"
                  . "</p>"
                  . "</td><tr>"
                  ."</table>";


                  $html_design.= "<table width=100%><tr> <td>&nbsp;</td></tr>  "
                  . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td><td align=right> <b> Registering Officer </b></td></tr> </table><br>"; */
            }
            $html_design .= "<hr/>";

            $party_html = $this->get_party_data_for_jharkhand($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);

            $html_design .= $party_html;

            $html_design .= "<hr/>";
            $identification_design = $this->get_identification_data_andaman($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
            $html_design .= $identification_design;

            $html_design .= "<hr/>";


            $witness_design = $this->get_witness_data_andaman($doc_token_no, $lang, $rptlabels, $report_type);
            $html_design .= $witness_design;




            $html_design .= "<table width=100%>"
                    . "<tr><td align=left> " . $rptlabels[192] . "  </td></tr></table><br><br>";


            $executer_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y', 'is_executer' => 'Y')));

//                 $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en','father_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
//                 
            $identifier = $this->identification->find('all', array('fields' => array('identification.identification_full_name_en', 'identification.father_full_name_en', 'occupation.occupation_name_en'),
                'joins' => array(
                    array('table' => 'ngdrstab_mst_occupation', 'alias' => 'occupation', 'conditions' => array("occupation.occupation_id=identification.occupation_id")),
                //   array('table' => 'ngdrstab_mst_payment_fields', 'alias' => 'pay', 'conditions' => array('pay.account_head_code=payment.account_head_code and item.fee_param_type_id=2'))
                ),
                'conditions' => array('identification.token_no' => $doc_token_no)
            ));

//                  pr($identifier);exit;
            if (!isset($property_address)) {
                $property_address = array();
            }

//print_r($property_address);exit;
            $html_design .= "<table style=' border: 1px solid black;' width='100%'>"
                    . "<tr><td colspan=1 style='padding-left:5px; padding-right:5px;' align='justify'>Above mentioned,"
                    . " <b>(" . (($executer_name) ? ($executer_name[0]['party']['party_full_name_en']) : ('___')) . ")</b>, "
                    . "has/have admitted the execution before me. He/ She/ They has / have been identified"
                    . " by <b>(" . (($identifier) ? ($identifier[0]['identification']['identification_full_name_en']) : ('___')) . ")</b> "
                    . "Son/Daughter/Wife of <b>(" . (($identifier) ? ($identifier[0]['identification']['father_full_name_en']) : ('___')) . ")</b> "
                    . "resident of <b>{" . implode(',', $property_address) . ") </b> and by occupation <b>(" . (($identifier) ? ($identifier[0]['occupation']['occupation_name_en']) : ('___')) . ")</b>.</td></tr>"
                    . "<tr height='80px'>"
                    . "<td valign='bottom'style='text-align:right;'><b>Signature of Registering Officer </b></td>"
                    . "</tr>"
                    . "</table>";




            $html_design .= "<br><br><table width=100%><tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td> <td align=right><b>Seal and Signature of Registering Officer</b> </td></tr> </table>";

            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {

//                $mfile=fopen("/home/abc.txt","w");
//                fwrite($mfile,$html_design);
//                fclose($mfile);
//                exit;
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', 'SRO');
            } else {
                //echo "<pre>".$html_design."</pre>" ;
                //exit;
                return $html_design;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary2_20_old_27nov2018($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F', $lang = 'en', $doc_lang = 'en') {
        try {
//$this->autoRender = FALSE;
            //$doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('regconfig', 'State', 'payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article', 'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';
            $userid = $this->Session->read("citizen_user_id");
            $stateid = $this->Auth->User("state_id");
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $html_design = '';
            $alias_name = '';
            $idenalias = '';
            $witalias = '';
//            $state_name='';
//            $state='';
//             $statename = $this->Session->read("state_name_en");
//             pr($statename);exit;
            $state = $this->State->find('all', array('conditions' => array('state_id' => $stateid)));
//              pr($state);exit;
            $state_name = $state[0]['State']['state_name_en'];
            $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

            $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
//              pr($regconf);
            $bar_qr = '';
            if (!empty($regconf)) {
                if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                } else {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                }
            }
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }
            if (!empty($rptData)) {
                $rptData = $rptData[0];


//===============================         Property Details ==============================================
                $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
                //pr($rptPropDtl);exit;
                $prpt_valuation = 0;
//                $imagedata="/home/NGDRS_UPLOAD/ReportImage/emblem.png";
//                  $image1 = file_get_contents('/home/NGDRS_UPLOAD/ReportImage/emblem.png');
//                 $image = base64_encode($image1);
//                 
//                            if($view_flag=='V'){
//                               $rpt_img="<img src='data:image/png;charset=utf-8;base64," . $image . "' height='70px' width='70px' /> ";  
//                            }else{
//                                $rpt_img="<img src='" . $imagedata . "' height='70px' width='70px' />";
//                            }
//            $html_design = "<table  align='right'><tr><td>".$rpt_img."</td></tr></table>";
//             $img1="<img src='" . $imagedata . "' height='150px' width='200px' />";
                $rpt_title = " Deed Endorsement Sample Template ";


                $html_design = "<table align='left'><tr><td>" . $bar_qr . "</td></tr></table>";

                $html_design .= "<table width=100% align=center>"
                        . "<tr><td style='text-align:center;'> <b> OFFICE OF THE SUB REGISTRAR </b></td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>Office Name :- </b>" . $off . "</td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>District Name :- </b>" . @$rptPropDtl[0]['district']['district_name_en'] . "</td> </tr>"
                        . "<tr><td style='text-align:center;'> <b>State Name :- </b>" . $state_name . "</td></tr>"
                        . "</table>";
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
                $html_design .= "<h3 align=center> <b>" . $rptlabels[363] . " </b></h3> <h5 align=right> Token No :- <b>" . $doc_token_no . "</b></h5>";
                $html_design .= "<div width=100% align=center>"
                        . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                        . "<table width=100% align=center border=1>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[177] . " </b></td> <td width=80%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Fee Details </b></td><td colspan=2> ";

                $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData['article']['article_id']);
                $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;
                $lineNo = 1;
                if ($stamp_duty) {
                    foreach ($stamp_duty as $sd) {
//                    pr($sd);exit;
                        $html_design .= '<b>' . $sd[0]['fee_item_desc_' . $lang] . '</b> :- Rs. ' . $sd[0]['totalsd'] . ', ';
                        if ($lineNo % 3 == 0) {
                            $html_design .= '';
                        }
                        $lineNo++;
                    }
                }

                $html_design .= "</td></tr></table></div>";




                if ($rptPropDtl) {
                    $sr_no = 0;
                    foreach ($rptPropDtl as $prpt) {
                        $sr_no++;


                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }
                        $prop_boundaries = '<b>Property Boundaries</b> :- East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];
//                    pr($prop_boundaries);exit;
                        $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
//                    pr($tmp_prpt_val);exit;
                        $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
//                        pr($prpt_valuation);exit;
//                     $cons_amt='';
                        if (!empty($rptPropDtl)) {
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';
                        }
//                        pr($cons_amt);exit;

                        $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                        $tmp_prop_area = array();
                        foreach ($prop_area as $parea) {
                            if ($parea['item']['is_list_field_flag'] == 'Y')
                                $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                            array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                        }

                        $property_id = $prpt['property_details_entry']['property_id'];
                        $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value
                                                                from ngdrstab_trn_parameter as param
                                                                JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                                                                where 
                                                                param.token_id=? and param.property_id=?", array($doc_token_no, @$property_id));



                        $property_id = $prpt['property_details_entry']['property_id'];
                        $lblalias = $rptlabels[402];

                        $html_design .= "<div width=100% align=center>"
                                . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                                . "<table width=100% align=center border=1 >";

                        $valuation = $this->valuation->Query("select val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land 
                                                    from ngdrstab_trn_property_details_entry p
                                                    join ngdrstab_trn_valuation val  ON val.val_id=p.val_id
                                                   join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
                                                   join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
                                                   join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id 
                                                    where p.token_no=$doc_token_no and p.property_id=$property_id
                                                    group by p.property_id,val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang,usage.usage_main_catg_desc_$lang");

                        if (!empty($valuation)) {
                            $sagment_name = $valuation[0][0]['village_name_' . $lang];
                            $type_of_land = $valuation[0][0]['type_of_land'];
                            $seg_desc = $valuation[0][0]['segment_name'];
                            $val_id = $valuation[0][0]['val_id'];
                            $rate = round($valuation[0][0]['rate']);

                            $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                            $area = '';
                            foreach ($valuation_details as $vdetails) {
                                $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
//                       pr($areawwww);
                                foreach ($areawwww as $area1)
                                    if ($area1[0]['area_field_flag'] == 'Y') {
                                        $area .= " " . $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
//                               pr($area);exit;
                                    };
                            }




                            $html_design .= "<tr><td width=20% bgcolor='#e0e1e2'> <b>Property No. </b></td><td>" . $sr_no . "</td></tr>"
                                    . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Valuation Details </b></td> <td> <b>" . $rptlabels[166] . " :- </b> Rs." . round($prpt_valuation) . "/- ,<b>" . $rptlabels[401] . " </b>:- Rs." . round(@$cons_amt) . "/-</td></tr>";
                        }



                        $html_design .= ""
                                . "<tr><td bgcolor='#e0e1e2'> <b> Property Details </b></td>"
                                . "<td> <b>District :- </b>" . $rptPropDtl[0]['district']['district_name_en'] . " ,"
                                . "<b> Tehsil :- </b> " . $rptPropDtl[0]['taluka']['taluka_name_en'] . " ,"
                                . "<b> Village Name :- </b> " . $rptPropDtl[0]['village']['village_name_en'] . " <br>"
                                . " $prop_boundaries <br>";
//                      pr($serveyno);
//                      exit;
                        foreach ($serveyno as $attribute) {

                            $html_design .= "<b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> - " . $attribute[0]['paramter_value'] . "";
                        }
                        $html_design .= "<br><b>" . $rptlabels[173] . "</b> :- " . @$area . " </td></tr>"
                                . "</table>"
                                . "</div>";
                    }
                } else {
                    
                }

                $html_design .= " <table width=100%> <tr> <td width=70%>"; //divide into two screen
                $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));
                $executer_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_executer' => 'Y')));
                $alias = $this->party->find('all', array('fields' => array('alias_name_en'), 'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                if (!empty($alias[0]['party']['alias_name_en'])) {

                    $alias_name = '(' . $lblalias . ':- <b>' . $alias[0]['party']['alias_name_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                } else {
                    $alias_name = '';
                }
                $newamt = $this->SroDependentFields->find('all', array('fields' => array('field_value'), 'conditions' => array('token_no' => $doc_token_no, 'field_id' => 1)));
//            pr($newamt);exit;
                //  pr($doc_token_no);exit;
                $party = $this->party_entry->query("SELECT  cate.category_name_$lang,iden.identificationtype_desc_$lang,p.identificationtype_desc_en as iddesc ,p.is_presenter,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left outer join ngdrstab_mst_party_category cate on cate.category_id=p.party_catg_id"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_executer='Y'");
                $party_pres = $this->party_entry->query("SELECT aps.doc_reg_no,aps.final_doc_reg_no,aps.doc_reg_date,aps.final_stamp_date,iden.identificationtype_desc_en,p.identificationtype_desc_en as iddesc "
                        . ",p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_trn_application_submitted aps on aps.token_no=p.token_no"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_presenter='Y'");

//                    pr($party);exit;
                $sellerflag = 0;
                $buyerflag = 0;
                $buyername = '________';
                $buyerfathername = '_________';
                $image_codes = null;
                $image_codes1 = null;
//            $image_codes=='';
                $img1 = '';
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0 && $party1[0]['is_presenter'] == 'Y') {
                        $sellerflag = 1;
                        $imagedata = $path['file_config']['filepath'] . $party1[0]['photo_img'];
//                     $sellername= $party1[0]['party_full_name_'.$lang];
//                            $sellerfathername= $party1[0]['father_full_name_'.$lang];
//                            pr($imagedata);exit;
                        if ($party1[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='150px' width='200px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }
//                            pr($imagedata);exit;
                    } else {
                        continue;
                    }
                }
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {

                        $sellerflag = 1;
                        $imagedata1 = $path['file_config']['filepath'] . $party1[0]['photo_img'];

                        if ($party1[0]['photo_img'] != null && file_exists($imagedata1)) {
                            $buyername = $party1[0]['party_full_name_en'];
                            $buyerfathername = $party1[0]['father_full_name_' . $lang];
                            $image = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes1 = null;
                            $btnaccept = 0;
                        }
                    } else {
                        continue;
                    }
                }


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' >" . $rptlabels[178] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b>" . $alias_name . "</b>                         
                  " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('__________')) . "</b> "
                        . $rptlabels[180] . "</td></tr></table>";


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' width=100%>" . $rptlabels[199] . " :- <b>" . date('d-M-Y') . "</b>  " . $rptlabels[200] . " :-  <b>" . date('l') . "</b> "
                        . $rptlabels[201] . " :- <b>" . date('H:i:s A') . "</b></td></tr></table><br><br>";

                $html_design .= "</td><td></td><td></td><td width=30%> " . $img1 . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "(" . $party[0][0]['category_name_' . $lang] . ")" . " </td></tr> </table>";


                $data = $this->ApplicationSubmitted->Query("select aps.token_no ,art.book_number,aps.doc_reg_no,volno.volume_number,volno.page_number_start from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                           join ngdrstab_mst_article art on art.article_id=gen.article_id 
                                                           LEFT JOIN ngdrstab_trn_volume_number_page_number_entry volno ON volno.token_no=aps.token_no
where aps.token_no=$doc_token_no");

                $book_no = '____';
                $doc_no = '____';
                $vol_no = '___';
                $page_no = '____';
                $serial_no = '____';
                if (!empty($data)) {
                    $doc_no = $data[0][0]['doc_reg_no'];
                    $book_no = $data[0][0]['book_number'];
                    $vol_no = $data[0][0]['volume_number'];
                    $page_no = $data[0][0]['page_number_start'];
                    $serial_no = $data[0][0]['doc_reg_no'];
                }

                $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));

                if (!empty($party_pres)) {
                    $html_design .= "<table width=100% border=1>"
                            . "<tr>
                            <th style='text-align:center;'>" . $rptlabels[359] . "</th>
                            <th style='text-align:center;'>" . $rptlabels[360] . "</th>
                            <th style='text-align:center;'>" . $rptlabels[362] . "</th></tr>
                            <tr>
                            <td>" . $party_pres[0][0]["party_full_name_en"] . "</td>
                            <td>" . $party_pres[0][0]["identificationtype_desc_en"] . "  </td>
                            <td>" . $party_pres[0][0]["pan_no"] . "</td>
                            </tr>
                            </table>";
                }


                $doc_reg_date = '____';
                if (!empty($party_pres[0][0]['doc_reg_date'])) {
                    $doc_reg_date = date('d-M-Y', strtotime($party_pres[0][0]['doc_reg_date']));
                }
                $doc_reg_date_final = '____';
                if (!empty($party_pres[0][0]['final_stamp_date'])) {
                    $doc_reg_date_final = date('d-M-Y', strtotime($party_pres[0][0]['final_stamp_date']));
                }
                $final_doc_reg_no = '___';
                if (!empty($party_pres[0][0]['final_doc_reg_no'])) {
                    $final_doc_reg_no = $party_pres[0][0]['final_doc_reg_no'];
                }

                $paddress = $this->party_entry->query("select distinct(mp.field_id), mp.pattern_desc_en ,tp.field_value_en

from  ngdrstab_conf_behavioral_patterns mp

JOIN  ngdrstab_trn_behavioral_patterns tp ON tp.field_id=mp.field_id

where tp.mapping_ref_id=2 and tp.mapping_ref_val=? and tp.token_no=?", array($party_pres[0][0]['party_id'], $doc_token_no));

                $address_str = "____";
                if (!empty($paddress)) {
                    $address_str = "";
                    foreach ($paddress as $field) {
                        $address_str .= "," . $field[0]['pattern_desc_en'] . " " . $field[0]['field_value_en'];
                    }
                    if (!empty($address_str)) {
                        $address_str = substr($address_str, 1);
                    }
                }

                /*      $html_design .= "<table width=100%>"
                  . "<tr><td align=left>"
                  . "<p>"
                  . "This <b>".$rptData['article']['article_desc_' . $lang]."</b> was presented before the registering officer on <b>".$doc_reg_date."</b> "
                  . "by <b>".$presenter_name[0]['party']['party_full_name_'.$lang]." S/O,D/O,W/O ".$presenter_name[0]['party']['father_full_name_'.$lang]."</b> resident of ".$address_str." ."
                  . "This was registered as serial no ".$serial_no." and deed no: <b>".$final_doc_reg_no."</b> in volume <b>".$vol_no."</b>"
                  . " under page no <b>".$page_no."</b> of  book no <b>".$book_no."</b> at <b>".$off."</b> on <b>".$doc_reg_date_final."</b>"
                  . "</p>"
                  . "</td><tr>"
                  ."</table>";


                  $html_design.= "<table width=100%><tr> <td>&nbsp;</td></tr>  "
                  . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td><td align=right> <b> Registering Officer </b></td></tr> </table><br>"; */
            }
            $html_design .= "<hr/>";

            $party_html = $this->get_party_data_for_jharkhand($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);

            $html_design .= $party_html;

            $html_design .= "<hr/>";
            $identification_design = $this->get_identification_data_andaman($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
            $html_design .= $identification_design;

            $html_design .= "<hr/>";


            $witness_design = $this->get_witness_data_andaman($doc_token_no, $lang, $rptlabels, $report_type);
            $html_design .= $witness_design;




            $html_design .= "<table width=100%>"
                    . "<tr><td align=left> " . $rptlabels[192] . "  </td></tr></table><br><br>";


            $executer_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                'conditions' => array('token_no' => $doc_token_no, 'is_executer' => 'Y')));

//                 $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en','father_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
//                 
            $identifier = $this->identification->find('all', array('fields' => array('identification.identification_full_name_en', 'identification.father_full_name_en', 'occupation.occupation_name_en'),
                'joins' => array(
                    array('table' => 'ngdrstab_mst_occupation', 'alias' => 'occupation', 'conditions' => array("occupation.occupation_id=identification.occupation_id")),
                //   array('table' => 'ngdrstab_mst_payment_fields', 'alias' => 'pay', 'conditions' => array('pay.account_head_code=payment.account_head_code and item.fee_param_type_id=2'))
                ),
                'conditions' => array('identification.token_no' => $doc_token_no)
            ));

//                  pr($identifier);exit;
            if (!isset($property_address)) {
                $property_address = array();
            }

//print_r($property_address);exit;
            $html_design .= "<table style=' border: 1px solid black;' width='100%'>"
                    . "<tr><td colspan=1 style='padding-left:5px; padding-right:5px;' align='justify'>Above mentioned,"
                    . " <b>(" . (($executer_name) ? ($executer_name[0]['party']['party_full_name_en']) : ('___')) . ")</b>, "
                    . "has/have admitted the execution before me. He/ She/ They has / have been identified"
                    . " by <b>(" . (($identifier) ? ($identifier[0]['identification']['identification_full_name_en']) : ('___')) . ")</b> "
                    . "Son/Daughter/Wife of <b>(" . (($identifier) ? ($identifier[0]['identification']['father_full_name_en']) : ('___')) . ")</b> "
                    . "resident of <b>{" . implode(',', $property_address) . ") </b> and by occupation <b>(" . (($identifier) ? ($identifier[0]['occupation']['occupation_name_en']) : ('___')) . ")</b>.</td></tr>"
                    . "<tr height='80px'>"
                    . "<td valign='bottom'style='text-align:right;'><b>Signature of Registering Officer </b></td>"
                    . "</tr>"
                    . "</table>";




            $html_design .= "<br><br><table width=100%><tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td> <td align=right><b>Seal and Signature of Registering Officer</b> </td></tr> </table>";

            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {

//                $mfile=fopen("/home/abc.txt","w");
//                fwrite($mfile,$html_design);
//                fclose($mfile);
//                exit;
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', 'SRO');
            } else {
                //echo "<pre>".$html_design."</pre>" ;
                //exit;
                return $html_design;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary2_31($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F', $lang = 'en', $doc_lang = 'en') {
        try {
//$this->autoRender = FALSE;


            $doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article',
                'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation',
                'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';
            $userid = $this->Session->read("citizen_user_id");

            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);

            $rpt_data = $this->party_entry->Query("select app.final_doc_reg_no,article.book_number,app.stamp1_date,app.stamp2_date,app.stamp3_date,app.stamp4_date,app.stamp5_date,article.book_number, app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }

            $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData[0]['article']['article_id']);
//            pr($stamp_duty_details);exit;totalsd

            $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;
//            pr($stamp_duty);exit;



            $html_design = "<h4 align=center><b>Government of Goa</b></h3>"
                    . "<h4 align=center><b> Document Registration Summary 2</b></h4>"
                    . "<h4 align=center>" . $off . " </h4>"
                    . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                    . "<table width=100%>"
                    . "<tr><td style='text-align:left;'>Print Date & Time : - <b>" . date('d-M-Y h:m:s a') . " </b> </td></tr>"
                    . "<tr><td style='text-align:left;'>Document Serial Number :- <b>" . $rpt_data[0][0]['doc_reg_no'] . " </b> </td></tr>"
                    . "<tr><td style='text-align:left;'>Presented at <b>" . date('h:m:s a') . " </b> on <b>" . date('d-M-Y') . "</b> in the office of the <b>" . $off . " </b> along with fees paid as follows </td></tr>"
                    . "</table>";

            $lineNo = 1;
            $html_design .= "<table width=100% border=1>"
                    . "<tr>"
                    . "<th style='text-align:center;font-size:medium;'>Sr.No</th>"
                    . "<th style='text-align:center;font-size:medium;'>Description</th>"
                    . "<th style='text-align:center;font-size:medium;'>Rs.Ps</th>"
                    . "</tr>"
                    . "<tr>";

//                             . "<td colspan=3>";
            $total = 0;
            if ($stamp_duty) {
                foreach ($stamp_duty as $sd) {
//                    pr($sd);exit;
                    $html_design .= '<tr>'
                            . '<td style="text-align:center;">' . $lineNo . '</td>'
                            . '<td style="text-align:center;">' . $sd[0]['fee_item_desc_' . $lang] . '</td>'
                            . '<td style="text-align:center;">' . $sd[0]['totalsd'] . ' </td>'
                            . '</tr>';
//               if ($lineNo % 3 == 0) {
//                            $html_design .= '';
//                        }
                    $lineNo++;
                    $total = $sd[0]['totalsd'] + $total;
                }
            }

            $html_design .= "</tr>"
                    . "<tr>"
                    . "<td colspan=2 style='text-align:right; font-size:medium;'><b>Total</b></td>"
                    . "<td style='text-align:center; font-size:medium;'><b>" . $total . " </b></td>"
                    . "</tr>"
                    . "</table>";

            $html_design .= "<table width=100%>"
                    . "<tr><td>Stamp Duty Required :<b>" . $stamp_duty[0][0]['totalsd'] . " </b></td><td> Stamp Duty Paid : <b>" . $stamp_duty[0][0]['totalsd'] . " </b></td></tr>"
                    . "</table><br>";

            $party_html = $this->get_party_data_GOA($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
//                $party_html.="<p style='text-align:left'>" . $rptlabels[26];
//                if ($rpt_data[0][0]['stamp3_date'] != NULL) {
//                    $party_html.="<br>$rptlabels[27]" . " 3 at " . " $rptlabels[32] " . date('d-M-Y h:m:s a', strtotime($rpt_data[0][0]['stamp3_date'])) . " </p>";
//                }
            $html_design .= $party_html;
//----------------------------------------------------------------for Adding Identification in Report ----------------------------------------------------------------------
            $identification_design = $this->get_identification_data_andaman($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);

//                  pr($identification_design);exit;
            $html_design .= $identification_design;
//----------------------------------------------------------------Witeness in Report ----------------------------------------------------------------------
            $witness_design = $this->get_witness_data_andaman($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
            $html_design .= $witness_design;

//                $html_design.="<table width='100%'><tr><td valign='bottom' style='text-align: right;'><b>Sub Registrar</b></td></tr></table>"; 
//              $html_design.= "<p style='page-break-after: always;'>&nbsp;</p>";


            $html_design .= "<table><tr height='200px'></tr></table>";

//               $html_design.= "<br><br><br><br><br><br><br><br><br><br><br><br>";
//            $date = "04/30/1973";
            list($num, $char, $num1) = split('[-]', $rpt_data[0][0]['doc_reg_no']);
//echo "Month: $num1;\n";   exit;


            $html_design .= "<h4 align='left'> Document Serial No:-<b>" . $num1 . " /" . $num . "</b> </h4> "
                    . "<table style='border: 2px solid black;' width='100%'>"
                    . "<tr><td style='text-align: center;'> <b>Certificate of Registration </b></td></tr>"
                    . "<tr><td style='text-align: center;'>Registration Number :- <b>" . $rpt_data[0][0]['final_doc_reg_no'] . " </b>  </td></tr>"
                    . "<tr><td style='text-align: center;'>Book :- " . $rpt_data[0][0]['book_number'] . " Document</td></tr>"
//                       . "<tr><td style='text-align: center;'>CD Number :-  on </td></tr>"
                    . "<tr><td style='text-align: center;'>Date : " . date('d-M-Y') . " </td></tr>"
                    . "</table>";




            $html_design .= "<br><br><br><br><table width=100%><tr><tdstyle='text-align: center;'><b>Sub Registrar(" . $off . ")</b> </td></tr> </table>";
            $html_design .= "<p style='page-break-after: always;'>&nbsp;</p>";
            $thumb_book = $this->party_entry->Query("select party.party_full_name_$lang,party.photo_img,party.biometric_img,aps.doc_reg_no,aps.doc_reg_date from ngdrstab_trn_party_entry_new  party  
                                                join ngdrstab_trn_application_submitted  aps on aps.token_no=party.token_no where aps.token_no=?", array($doc_token_no));

//               pr($thumb_book);exit;
            $html_design .= "<table><tr height='200px'></tr></table>";
            $html_design .= "<h4 align=center>" . $off . " </h4>
                    <h4 align=center>Goverment of Goa </h4>
                    <h2 align='center'>Thumb Book </h2> 
                                <h4 align='left'>Print date and time :- <b>" . date('d-M-Y h:m:s a') . " </b></h4>
                                    <table width='100%' class='table table-danger table-striped table-bordered table-hover '>
                                    <thead class=''>
                                        <tr >
                                            <th style='text-align: center;'>Document Serial Number/ <br> Registration Number <br> Registration Date</th> 
                                            <th style='text-align: center;'>Name of the Person</th>
                                            <th style='text-align: center;'>Photo</th>
                                            <th style='text-align: center;'>Thumb Expression </th>
                                            <th style='text-align: center;'>Signature</th> 
                                        </tr>
                                    </thead>";

            foreach ($thumb_book as $tb) {

                $html_design .= "<tr>"
                        . "<td style='text-align: center;'> <b>" . $tb[0]['doc_reg_no'] . " /<br> " . date('d/m/Y ', strtotime($tb[0]['doc_reg_date'])) . "</td>"
                        . "<td style='text-align: center;'> <b>" . $tb[0]['party_full_name_' . $lang] . " </b></td>"
                        . "<td style='text-align: center;'>";

                $imagedata = $path['file_config']['filepath'] . $tb[0]['photo_img'];
                $img1 = '';
                if ($tb[0]['photo_img'] != null && file_exists($imagedata)) {
                    $image = file_get_contents($imagedata);
                    $image_codes = base64_encode($image);
                    if ($view_flag == 'V') {
                        $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50px' width='50px' /> ";
                    } else {
                        $img1 = "<img src='" . $imagedata . "' height='50px' width='50px' />";
                    }
                } else {
                    $image_codes = null;
                    $btnaccept = 0;
                }


                $html_design .= " " . $img1 . " </td>";

                $html_design .= "<td style='text-align: center;'>";

                $imagedata1 = $path['file_config']['filepath'] . $tb[0]['biometric_img'];
                $img2 = '';

                if ($tb[0]['biometric_img'] != null && file_exists($imagedata1)) {
                    $image1 = file_get_contents($imagedata1);
                    $image_codes1 = base64_encode($image1);
                    if ($view_flag == 'V') {
                        $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                    } else {
                        $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                    }
                } else {
                    $image_codes1 = null;
                }
                $html_design .= "" . $img2 . "</td>"
                        . "<td></td>";
            }
            $html_design .= "</tr></table>";



            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, 'A4-L', '');
            } else {
                return $html_design;
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_receipt1_31($doc_token_no = NULL, $view_flag = NULL) {
        try {
//            echo 1;
            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['num_to_words', 'ReceiptCounter', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));
//                pr($rptlabels);exit;
                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_en'];
                } else {
                    $off = NULL;
                }

                $rpt_data = $this->payment->Query("select vill.village_name_$lang,geninfo.presentation_date,app.doc_reg_no,article.article_id, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name, party_full_name_$lang as party_full_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_conf_admblock7_village_mapping vill on vill.village_id=party.village_id
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    where  geninfo.token_no=?", array($doc_token_no));

//                pr($rpt_data);
                $market_value = $consideration_amount = 0;
                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
//                pr($property_ids);
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));
                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('fee_calc_id' => $fee_calc_ids
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    //$this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));

                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
                                                                ngdrstab_trn_fee_calculation_detail stampd 
                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
                                                                WHERE  stamp.token_no=?  
                                                                AND stamp.delete_flag='N' 
                                                                AND feeitem.fee_param_type_id=2 
                                                                group by feeitem.fee_item_id
                                                                order by feeitem.fee_preference ASC
                                                                ", array($doc_token_no));


                $acknowledgement = "<p style='text-align:left;'>Probable date of issue of Registered Document:&nbsp; &nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp; /";
                $signiture = "<br>Signature of the Sub-Registrar</p>";



                $html_design = "<table width='100%' style='font-size:12px'>"
                        . "<tr><td style='text-align:center;'><b> <u> FORM.T- RECEIPT FOR FEE RECEIVED </b> </u></td> <td></td> </tr>"
                        . "<tr><td style='text-align:center;'> " . $off . " </td></tr><br>"
                        . "<tr><td style='text-align:center;'>REGISTRATION DEPARTMENT. GOVERNMENT OF GOA </td></tr></table>";

//            ====================================================View Summary 1(Yogesh)=======================================================================
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=? and receipt_number is not null group by receipt_number", array($doc_token_no));

                if ($rpt_data[0][0]['presenter_name'] == '') {
                    $presentername = $rpt_data[0][0]['party_full_name'];
                } else {
                    $presentername = $rpt_data[0][0]['presenter_name'];
                }
                $feedetails_design = '';
                foreach ($receipt_no as $recno) {

                    $receipt_number = $recno[0]['receipt_number'];
                    $feedetails_design .= "<hr>"
                            . "<table width=100% style='font-size:12px'>"
                            . "<tr><td style='text-align: right;'>Print Date Time:- " . date('d-M-Y') . "</td> "
                            . "<tr> <td style='text-align: right;'>Date of Receipt: " . date('d-M-Y') . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>Receipt No : " . $receipt_number . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>Serial No. of the Document : " . $rpt_data[0][0]['doc_reg_no'] . "</td> </tr>"
                            . "<tr> <td style='text-align: left;'>Nature of, Document :  <b>" . $rpt_data[0][0]['article_desc_' . $lang] . " </b> </td> </tr>"
                            . "<tr> <td style='text-align: left;'>Received the following amounts from <b>" . $presentername . "</b> for Registration of above Document in Book-1 for the year 2018</td> </tr>"
                            . "</table>"
                            . "";
                }
                $feedetails_design .= "<table  align='right' cellpadding='6' width=100% border=1 style='border-collapse:collapse;font-size:12px' class='table'>";
                $feedetails = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rpt_data[0][0]['article_id']);
                $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_$lang,mode.verification_flag  FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
                $paymentfields = $this->PaymentFields->find('list', array('fields' => array('field_name', 'field_name_desc_' . $lang), 'order' => 'srno ASC'));
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));



                $verifyed = 'Y';
                $sdamount = 0;
                $paidamount = 0;
                $headwise_tally_flag = 1;
                foreach ($feedetails as $fee) {
                    if ($fee[0]['receipt_flag'] == 'Y') {
                        $sdamount += $fee[0]['totalsd'];
                        $amount = 0;

                        foreach ($payment as $paydetails):
                            $paydetails = $paydetails[0];

                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                                $amount += $paydetails['pamount'];
                                $paidamount += $paydetails['pamount'];
                                //$test++;
                            }
                        endforeach;
                        $balance = $fee[0]['totalsd'] - $amount;
                        if ($balance > 0) {
                            $headwise_tally_flag = 0;
                        }
                        $feedetails_design .= "<tr class='bg-info'>  <td>  " . $fee[0]['fee_item_desc_' . $lang] . " </td>  <td> " . $fee[0]['totalsd'] . " </td> ";

                        $extrarow = 0;
                        foreach ($payment as $paydetails) {
                            $paydetails = $paydetails[0];
                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                                $extrarow++;
                                if ($extrarow > 1) {
                                    $feedetails_design .= "</tr><tr><td colspan='2'></td>";
                                }
                                if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {

                                    $feedetails_design .= "  <td class='bg-success'>" . $paydetails['payment_mode_desc_' . $lang] . "</td>
                        
                            <td class='bg-success'> <ul class='list-inline no-padding'>    ";

                                    foreach ($paymentfields_trn as $key => $singletrnfield) {
                                        if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
                                            $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
                                        }
                                    }
                                    $feedetails_design .= "</ul></td>
                            <td class='bg-success'><span class='fa fa-rupee'></span> " . $paydetails['pamount'] . "</td>     ";
                                }
                            }
                        }
                    }//if receipt
                }
                $feedetails_design .= "   </tr>
            <tr>
             <td  class=''>
              <b>  Total Paid </b>
                </td>
                <td colspan='4' class=''> <b> " . $paidamount . " </b> ( Rupees " . $this->num_to_words->in_words($paidamount) . " only ) " . "</td>
            </tr>";

                $feedetails_design .= "</table>";



                $feedetails_design .= ""
                        . "<table  width=100% style='font-size:12px'>"
                        . "<tr><td>" . $acknowledgement . "</td></tr>"
                        . "<tr><td style='text-align: right;' width=100%>" . $signiture . "</td></tr>"
                        . "</table> <br>";


                $feedetails_design .= "<table width=100% style='font-size:12px'>"
                        . "<tr><td style='text-align: left;' colspan=2>TO BE FILLED IN BY THE PARTY AT THE TIME OF SUBMISSION OPNONAL</td></tr>"
                        . "<tr><td style='text-align: left;' colspan=2>Please handover the Registered Document to the person named below</td></tr>"
                        . "<tr><td> <b>Name of the Person Authorized :</b> </td></tr>"
                        . "<tr height='40px'><td><br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</td></tr>"
                        . "<tr><td valign='bottom' style='text-align: left;'> Specimen Signature of the Person Authorized</td>"
                        . "<td valign='bottom' style='text-align: right;'> Signature of the Presenter </td></tr>"
                        . "</table>";


                $feedetails_design .= "<table width=100% style='font-size:12px'>"
                        . "<tr><td style='text-align: left;'colspan=2>TO BE FILLED IN At THE TIME OF HANDING OVER OF REGISTERED DOCUMENT </td></tr>"
                        . "<tr><td style='text-align: left;'colspan=2>The Registered Document has been handed over to  on Dated  <b>" . date('d-M-Y') . " </b> </td></tr>"
                        . "<tr height='40px'><td><br><br></td></tr>"
                        . "<tr><td valign='bottom 'style='text-align: left;'>Signature of the person receiving the Document</td>"
                        . "<td valign='bottom 'style='text-align: left;'>Signature of the Sub-Registrar</td></tr>"
                        . "</table>";


                $html = "<h3 align=center>" . $rptlabels[10] . "</h3><br>Office Copy<br>" . $html_design . $feedetails_design;
                $html .= "<p style='page-break-after: always;'>&nbsp;</p>";
                $html .= "<h3 align=center>" . $rptlabels[10] . "</h3><br>Original Copy<br>" . $html_design . $feedetails_design;





//                    $html.=$html_design;
//                    $html.=$feedetails_design;




                if ($view_flag == 'pdf' || $view_flag == 'D') {
                    $this->create_pdf($html, 'receipt_' . $doc_token_no, 'A4', '');
                } else {
                    return $html;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function thumbbook_goa($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;
        switch ($state_id) {
            case 31:
                return $this->rpt_reg_summary2_thumb($doc_token_no, $view_flag, $report_type);
                break;
            default :
                return $this->rpt_reg_summary2_thumb($doc_token_no, $view_flag, $report_type);
        }
    }

    public function rpt_reg_summary2_thumb($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {


            $doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('party_entry', 'file_config'));
            $rpt_title = 'Thumb_Book';
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }
            $thumb_book = $this->party_entry->Query("select party.party_full_name_$lang,party.photo_img,party.biometric_img,aps.final_doc_reg_no,aps.doc_reg_no,aps.doc_reg_date from ngdrstab_trn_party_entry_new  party  
                                                join ngdrstab_trn_application_submitted  aps on aps.token_no=party.token_no where aps.token_no=? and is_executer=? and party.display_flag='Y'", array($doc_token_no, 'Y'));

//               pr($thumb_book);exit;
            $html_design = "";
//            $html_design.="<table><tr height='200px'></tr></table>";
            $html_design .= "<h4 align=center>" . $off . " </h4>
                    <h4 align=center>Goverment of Goa </h4>
                    <h2 align='center'>Thumb Book </h2> 
                                <h4 align='left'>Print date and time :- <b>" . date('d-M-Y h:m:s a') . " </b></h4>
                                    <table width='100%' border=1>
                                    <thead class=''>
                                        <tr >
                                            <th style='text-align: center;'>Document Serial Number/ <br> Registration Number <br> Registration Date</th> 
                                            <th style='text-align: center;'>Name of the Person</th>
                                            <th style='text-align: center;'>Photo</th>
                                            <th style='text-align: center;'>Thumb Expression </th>
                                            <th style='text-align: center;'>Signature of Party </th> 
                                        </tr>
                                    </thead>";
//                 pr($thumb_book);
            foreach ($thumb_book as $tb) {

                $html_design .= "<tr>"
                        . "<td style='text-align: center;'> <b>" . $tb[0]['doc_reg_no'] . " / " . $tb[0]['final_doc_reg_no'] . "<br> " . date('d/m/Y ', strtotime($tb[0]['doc_reg_date'])) . "</td>"
                        . "<td style='text-align: center;'> <b>" . $tb[0]['party_full_name_' . $lang] . " </b></td>"
                        . "<td style='text-align: center;'>";

                $imagedata = $path['file_config']['filepath'] . $tb[0]['photo_img'];
                $img1 = '';
                if ($tb[0]['photo_img'] != null && file_exists($imagedata)) {
                    $image = file_get_contents($imagedata);
                    $image_codes = base64_encode($image);
                    if ($view_flag == 'V') {
                        $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='75px' width='75px' /> ";
                    } else {
                        $img1 = "<img src='" . $imagedata . "' height='75px' width='75px' />";
                    }
                } else {
                    $image_codes = null;
                    $btnaccept = 0;
                }


                $html_design .= " " . $img1 . " </td>";

                $html_design .= "<td style='text-align: center;'>";

                $imagedata1 = $path['file_config']['filepath'] . $tb[0]['biometric_img'];
                $img2 = '';

                if ($tb[0]['biometric_img'] != null && file_exists($imagedata1)) {
                    $image1 = file_get_contents($imagedata1);
                    $image_codes1 = base64_encode($image1);
                    if ($view_flag == 'V') {
                        $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                    } else {
                        $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                    }
                } else {
                    $image_codes1 = null;
                }
                $html_design .= "" . $img2 . "</td>"
                        . "<td></td>";
            }
            $html_design .= "</tr></table><br><br>";
//          pr($html_design);exit;

            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', '');
            } else {
                return $html_design;
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function thumbbook($doc_token_no, $view_flag = 'D') {
        array_map(array($this, 'loadModel'), array('party_entry', 'file_config'));
        $rpt_title = 'Deed Enorsment Sample Template';
        $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
        $path = $this->file_config->find('first', array('fields' => array('filepath')));
        $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
            'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
        if (!empty($officename)) {
            $off = $officename[0]['off']['office_name_en'];
        } else {
            $off = NULL;
        }
        $thumb_book = $this->party_entry->Query("select party.party_full_name_$lang,party.photo_img,party.biometric_img,aps.final_doc_reg_no,aps.doc_reg_no,aps.doc_reg_date from ngdrstab_trn_party_entry_new party  
                                                join ngdrstab_trn_application_submitted  aps on aps.token_no=party.token_no where aps.token_no=? and is_executer=?", array($doc_token_no, 'Y'));

//               pr($thumb_book);exit;
        $html_design = "";
//            $html_design.="<table><tr height='200px'></tr></table>";
        $html_design .= "<h4 align=center>" . $off . " </h4>
                    <h4 align=center>Goverment of Goa </h4>
                    <h2 align='center'>Thumb Book </h2> 
                                <h4 align='left'>Print date and time :- <b>" . date('d-M-Y h:m:s a') . " </b></h4>
                                    <table width='100%' border=1>
                                    <thead class=''>
                                        <tr >
                                            <th style='text-align: center;'>Document Serial Number/ <br> Registration Number <br> Registration Date</th> 
                                            <th style='text-align: center;'>Name of the Person</th>
                                            <th style='text-align: center;'>Photo</th>
                                            <th style='text-align: center;'>Thumb Expression </th>
                                            <th style='text-align: center;'>Signature</th> 
                                        </tr>
                                    </thead>";
//                 pr($thumb_book);
        foreach ($thumb_book as $tb) {

            $html_design .= "<tr>"
                    . "<td style='text-align: center;'> <b>" . $tb[0]['doc_reg_no'] . " / " . $tb[0]['final_doc_reg_no'] . "<br> " . date('d/m/Y ', strtotime($tb[0]['doc_reg_date'])) . "</td>"
                    . "<td style='text-align: center;'> <b>" . $tb[0]['party_full_name_' . $lang] . " </b></td>"
                    . "<td style='text-align: center;'>";

            $imagedata = $path['file_config']['filepath'] . $tb[0]['photo_img'];
            $img1 = '';
            if ($tb[0]['photo_img'] != null && file_exists($imagedata)) {
                $image = file_get_contents($imagedata);
                $image_codes = base64_encode($image);
                if ($view_flag == 'V') {
                    $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50px' width='50px' /> ";
                } else {
                    $img1 = "<img src='" . $imagedata . "' height='50px' width='50px' />";
                }
            } else {
                $image_codes = null;
                $btnaccept = 0;
            }


            $html_design .= " " . $img1 . " </td>";

            $html_design .= "<td style='text-align: center;'>";

            $imagedata1 = $path['file_config']['filepath'] . $tb[0]['biometric_img'];
            $img2 = '';

            if ($tb[0]['biometric_img'] != null && file_exists($imagedata1)) {
                $image1 = file_get_contents($imagedata1);
                $image_codes1 = base64_encode($image1);
                if ($view_flag == 'V') {
                    $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                } else {
                    $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                }
            } else {
                $image_codes1 = null;
            }
            $html_design .= "" . $img2 . "</td>"
                    . "<td></td>";
        }
        $html_design .= "</tr></table><br><br>";
        $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', '');


//                pr($html_design);exit;
    }

    public function rpt_reg_summary2_15($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F', $lang = 'en', $doc_lang = 'en') {
        try {
//$this->autoRender = FALSE;
            //$doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('regconfig', 'State', 'payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article', 'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';
            $userid = $this->Session->read("citizen_user_id");
            $stateid = $this->Auth->User("state_id");
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $html_design = '';
            $alias_name = '';
            $idenalias = '';
            $witalias = '';
//            $state_name='';
//            $state='';
//             $statename = $this->Session->read("state_name_en");
//             pr($statename);exit;
            $state = $this->State->find('all', array('conditions' => array('state_id' => $stateid)));
//              pr($state);exit;
            $state_name = $state[0]['State']['state_name_en'];

            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }

            $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

            $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
            $bar_qr = '';
            if (!empty($regconf)) {
                if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                } else {
                    $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                }
            }

            if (!empty($rptData)) {
                $rptData = $rptData[0];


//===============================         Property Details ==============================================
                $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
                //pr($rptPropDtl);exit;
                $prpt_valuation = 0;
                $imagedata = "/home/NGDRS_UPLOAD/ReportImage/emblem.png";
                $image1 = file_get_contents('/home/NGDRS_UPLOAD/ReportImage/emblem.png');
                $image = base64_encode($image1);

                if ($view_flag == 'V') {
                    $rpt_img = "<img src='data:image/png;charset=utf-8;base64," . $image . "' height='70px' width='70px' /> ";
                } else {
                    $rpt_img = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                }

                $html_design = "<table align='left'><tr><td>" . $bar_qr . "</td></tr></table>";
                $html_design .= "<table  align='right'><tr><td>" . $rpt_img . "</td></tr></table>";

//             $img1="<img src='" . $imagedata . "' height='150px' width='200px' />";
                $rpt_title = " Deed Endorsement Sample Template ";




                $html_design .= "<table width=100% align=center>"
                        . "<tr><td> <b> OFFICE OF THE SUB REGISTRAR </b></td> </tr>"
                        . "<tr><td> <b>Office Name :- </b>" . $off . "</td> </tr>"
                        . "<tr><td> <b>District Name :- </b>" . $rptPropDtl[0]['district']['district_name_en'] . "</td> </tr>"
                        . "<tr><td> <b>State Name :- </b>" . $state_name . "</td></tr>"
                        . "</table>";
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
                $html_design .= "<h4 align=center> <b>" . $rptlabels[363] . " </b></h4> <h5 align=right> Token No :- <b>" . $doc_token_no . "</b></h5>";
                $html_design .= "<div width=100% align=center>"
                        . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                        . "<table width=100% align=center border=1>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[177] . " </b></td> <td width=80%>" . $rptData['article']['article_desc_' . $lang] . "</td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Fee Details </b></td><td colspan=2> ";

                $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData['article']['article_id']);
                $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;
                $lineNo = 1;
                if ($stamp_duty) {
                    foreach ($stamp_duty as $sd) {
//                    pr($sd);exit;
                        $html_design .= '<b>' . $sd[0]['fee_item_desc_' . $lang] . '</b> :- Rs. ' . $sd[0]['totalsd'] . ', ';
                        if ($lineNo % 3 == 0) {
                            $html_design .= '';
                        }
                        $lineNo++;
                    }
                }

                $html_design .= "</td></tr></table></div>";
                if ($rptPropDtl) {
                    $sr_no = 0;
                    foreach ($rptPropDtl as $prpt) {
                        $sr_no++;


                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }
                        $prop_boundaries = '<b>Property Boundaries</b> :- East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];
//                    pr($prop_boundaries);exit;
                        $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
//                    pr($tmp_prpt_val);exit;
                        $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
//                        pr($prpt_valuation);exit;
//                     $cons_amt='';
                        if (!empty($rptPropDtl)) {
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';
                        }
//                        pr($cons_amt);exit;

                        $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                        $tmp_prop_area = array();
                        foreach ($prop_area as $parea) {
                            if ($parea['item']['is_list_field_flag'] == 'Y')
                                $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                            array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                        }

                        $property_id = $prpt['property_details_entry']['property_id'];
                        $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value
                                                                from ngdrstab_trn_parameter as param
                                                                JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                                                                where 
                                                                param.token_id=? and param.property_id=?", array($doc_token_no, $property_id));



                        $property_id = $prpt['property_details_entry']['property_id'];
                        $lblalias = $rptlabels[402];

                        $valuation = $this->valuation->Query("select val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land 
                                                    from ngdrstab_trn_property_details_entry p
                                                    join ngdrstab_trn_valuation val  ON val.val_id=p.val_id
                                                   join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
                                                   join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
                                                   join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id 
                                                    where p.token_no=$doc_token_no and p.property_id=$property_id
                                                    group by p.property_id,val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang,usage.usage_main_catg_desc_$lang");

                        if (!empty($valuation)) {
                            $sagment_name = $valuation[0][0]['village_name_' . $lang];
                            $type_of_land = $valuation[0][0]['type_of_land'];
                            $seg_desc = $valuation[0][0]['segment_name'];
                            $val_id = $valuation[0][0]['val_id'];
                            $rate = round($valuation[0][0]['rate']);

                            $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                            $area = '';
                            foreach ($valuation_details as $vdetails) {
                                $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
//                       pr($areawwww);
                                foreach ($areawwww as $area1)
                                    if ($area1[0]['area_field_flag'] == 'Y') {
                                        $area .= " " . $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
//                               pr($area);exit;
                                    };
                            }




                            $html_design .= "<div width=100% align=center>"
                                    . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                                    . "<table width=100% align=center border=1 >"
                                    . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Property No. </b></td><td>" . $sr_no . "</td></tr>"
                                    . "<tr><td width=20% bgcolor='#e0e1e2'> <b>Valuation Details </b></td> <td> <b>" . $rptlabels[166] . " :- </b> Rs." . round($prpt_valuation) . "/- ,<b>" . $rptlabels[401] . " </b>:- Rs." . round(@$cons_amt) . "/-</td>";
                        }



                        $html_design .= "</tr>"
                                . "<tr><td bgcolor='#e0e1e2'> <b> Property Details </b></td>"
                                . "<td> <b>District :- </b>" . $rptPropDtl[0]['district']['district_name_en'] . " ,"
                                . "<b> Tehsil :- </b> " . $rptPropDtl[0]['taluka']['taluka_name_en'] . " ,"
                                . "<b> Village Name :- </b> " . $rptPropDtl[0]['village']['village_name_en'] . " <br>"
                                . " $prop_boundaries <br>";
//                      pr($serveyno);
//                      exit;
                        foreach ($serveyno as $attribute) {

                            $html_design .= "<b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> - " . $attribute[0]['paramter_value'] . "";
                        }
                        $html_design .= "<br><b>" . $rptlabels[173] . "</b> :- " . $area . " </td></tr>"
                                . "</table>"
                                . "</div>";
                    }
                } else {
                    
                }

                $html_design .= " <table width=100%> <tr> <td width=70%>"; //divide into two screen
                $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                $alias = $this->party->find('all', array('fields' => array('alias_name_en'), 'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                if (!empty($alias[0]['party']['alias_name_en'])) {

                    $alias_name = '(' . $lblalias . ':- <b>' . $alias[0]['party']['alias_name_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                } else {
                    $alias_name = '';
                }
                $newamt = $this->SroDependentFields->find('all', array('fields' => array('field_value'), 'conditions' => array('token_no' => $doc_token_no, 'field_id' => 1)));
//            pr($newamt);exit;
                //  pr($doc_token_no);exit;
                $party = $this->party_entry->query("SELECT  cate.category_name_$lang,iden.identificationtype_desc_$lang,p.identificationtype_desc_en as iddesc ,p.is_presenter,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left outer join ngdrstab_mst_party_category cate on cate.category_id=p.party_catg_id"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_executer='Y'");

//                    pr($party);exit;
                $sellerflag = 0;
                $buyerflag = 0;
                $buyername = '________';
                $buyerfathername = '_________';
                $image_codes = null;
                $image_codes1 = null;
//            $image_codes=='';
                $img1 = '';
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0 && $party1[0]['is_presenter'] == 'Y') {
                        $sellerflag = 1;
                        $imagedata = $path['file_config']['filepath'] . $party1[0]['photo_img'];
//                     $sellername= $party1[0]['party_full_name_'.$lang];
//                            $sellerfathername= $party1[0]['father_full_name_'.$lang];
//                            pr($imagedata);exit;
                        if ($party1[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='150px' width='200px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }
//                            pr($imagedata);exit;
                    } else {
                        continue;
                    }
                }
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {

                        $sellerflag = 1;
                        $imagedata1 = $path['file_config']['filepath'] . $party1[0]['photo_img'];

                        if ($party1[0]['photo_img'] != null && file_exists($imagedata1)) {
                            $buyername = $party1[0]['party_full_name_en'];
                            $buyerfathername = $party1[0]['father_full_name_' . $lang];
                            $image = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='150px' width='200px' />";
                            }
                        } else {
                            $image_codes1 = null;
                            $btnaccept = 0;
                        }
                    } else {
                        continue;
                    }
                }


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' >" . $rptlabels[178] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b>" . $alias_name . "</b>                         
                  " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('__________')) . "</b> "
                        . $rptlabels[180] . "</td></tr></table>";


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' width=100%>" . $rptlabels[199] . " :- <b>" . date('d-M-Y') . "</b>  " . $rptlabels[200] . " :-  <b>" . date('l') . "</b> "
                        . $rptlabels[201] . " :- <b>" . date('H:i:s A') . "</b></td></tr></table><br><br>";

                $html_design .= "<table width=100%><tr><td width=50% align=left>" . $rptlabels[181] . "</td> </tr> </table><br>";


//               echoag);exit; 


                $html_design .= "</td><td></td><td></td><td width=30%> " . $img1 . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "(" . $party[0][0]['category_name_' . $lang] . ")" . " </td></tr> </table>";

                IF ($lang == 'en') {
                    $html_design .= "<table width=100% border=0>"
                            . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b> " . $alias_name . "</b>                       
                  " . $rptlabels[179] . "<b> " . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('_________')) . "</b> 
                  " . $rptlabels[366] . " Rs. <b>" . (($newamt) ? ($newamt[0]['SroDependentFields']['field_value']) : ('-')) . "</b> "
                            . $rptlabels[354] . "  <b>" . $rptData['article']['article_desc_' . $lang] . "</b> "
                            . $rptlabels[367];
                } ELSE {
                    $html_design .= "<table width=100% border=0>"
                            . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b> " . $alias_name . "</b>                       
                  " . $rptlabels[179] . "<b> " . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('_________')) . "</b> 
                  " . $rptlabels[366] . "  <b>" . $art . "</b> "
                            . $rptlabels[354] . "  <b>" . (($newamt) ? ($newamt[0]['SroDependentFields']['field_value']) : ('-')) . "</b> "
                            . $rptlabels[367];
                }




                $data = $this->ApplicationSubmitted->Query("select aps.token_no ,art.book_number,aps.doc_reg_no from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                           join ngdrstab_mst_article art on art.article_id=gen.article_id where aps.token_no=$doc_token_no");
                $book_no = '';
                $doc_no = '';
                if (!empty($data)) {
                    $doc_no = $data[0][0]['doc_reg_no'];
                    $book_no = $data[0][0]['book_number'];
                }

                $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
                if (!empty($identifier)) {

                    $witness = $this->witness->find('all', array('fields' => array('witness_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
                    if (!empty($witness)) {
                        if (count($identifier) > 0) {
                            $html_design .= "<b>" . (isset($identifier[0]) ? ($identifier[0]['identification']['identification_full_name_en']) : ('_________')) . "</b>  " . $rptlabels[368] . "</b>

                                    <b>" . (isset($witness[0]) ? ($witness[0]['witness']['witness_full_name_en']) : ('________')) . "</b> "
                                    . " ,<b>" . (isset($witness[1]) ? ($witness[1]['witness']['witness_full_name_en']) : ('')) . "</b>"
                                    . " (" . $rptlabels[202] . ")</td>"
                                    . "</tr> </table><br>";
                        }
                    }  //witness close
                }// identifier close

                $html_design .= "<table width=100% align=center border=1>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[193] . " </b></td> <td>" . $doc_no . "</td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[194] . " </b></td> <td>" . $book_no . "</td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[195] . " </b></td> <td></td></tr>"
                        . "<tr><td width=20% bgcolor='#e0e1e2'> <b>" . $rptlabels[196] . " </b></td> <td> </td></tr>"
                        . "</table>";

                $html_design .= "<table width=100%>"
                        . "<tr><td align=left> " . $rptlabels[358] . "</td></tr>"
                        . "</table>";

                $html_design .= "<table width=100%><tr><td align=left>" . $rptlabels[197] . " </td>  </tr><tr> <td>&nbsp;</td></tr>  "
                        . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td> <td align=right> <b>" . $rptlabels[364] . " </b></td></tr> </table><br>";
            }
            $html_design .= "<hr/>";
            $party_html = $this->get_party_data($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);

            $html_design .= $party_html;

            $html_design .= "<hr/>";
            $identification_design = $this->get_identification_data_andaman($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
            $html_design .= $identification_design;

            $html_design .= "<hr/>";


            $witness_design = $this->get_witness_data_andaman($doc_token_no, $lang, $rptlabels, $report_type);
            $html_design .= $witness_design;




            $html_design .= "<table width=100%>"
                    . "<tr><td align=left> " . $rptlabels[192] . "  </td></tr></table><br><br>";


            $html_design .= "<br><br><table width=100%><tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td> <td align=right><b>Signature of Sub Registrar/Joint Sub Registrar</b> </td></tr> </table>";

//            $html_design.="<table><tr><td>State_id=".$stateid."</td></tr></table>";


            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                // echo $html_design;
//                $mfile=fopen("/home/abc.txt","w");
//                fwrite($mfile,$html_design);
//                fclose($mfile);
//                exit;
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', 'SRO');
            } else {
                return $html_design;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_identification_data_andaman($doc_token_no, $lang = 'en', $rptlabels = NULL, $report_type, $view_flag = NULL) {
        try {
            array_map([$this, 'loadModel'], ['file_config', 'identification', 'party_entry', 'TrnBehavioralPatterns']);
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $party_html = NULL;
            $identification_detail = $this->identification->get_identification($lang, $doc_token_no, $report_type);

            if (!empty($identification_detail)) {
                $party_html = "<table width=100%><tr><td style='text-align:left'><b>Identification:</b>"
                        . "<br></td></tr></table><br>";
                if ($doc_token_no && $lang) {
                    $party_html .= "<table width=100% class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                             <th style='text-align: center;' width='5%'>Sr.NO</th> 
                            <th style='text-align: center;' width='60%'>Party Name and Address</th>
                           
                            <th style='text-align: center;' width='10%'>Photo</th>
                            <th style='text-align: center;' width='10%'>FingerPrint</th> 
                            <th style='text-align: center;' width='15%'>Signature</th> 
                        </tr>
                    </thead>
                    <tbody>";


//                pr($identification_detail);exit;
                    $counter = 0;
                    foreach ($identification_detail as $id_rc) {
//                    pr($id_rc);exit;

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $id_rc['identification']['identification_id'], $doc_token_no, '3');

                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                        }
//                     if($identification_detail[0]['identification']['biometric_img']!= NULL || $identification_detail[0]['identification']['photo_img'] != NULL ){   
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td style='text-align: center;'> <b>" . $id_rc['identification']['identification_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $id_rc['village']['village_name_' . $lang] . ', ' . $id_rc['taluka']['taluka_name_' . $lang] . ', ' . $id_rc['district']['district_name_' . $lang] . ', ' . $id_rc['state']['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $id_rc['identification']['pan_no'] . "</td>"
//                            . "<td><br>" . $id_rc['identification_type']['desc_' . $lang] . "</td>"
//                                . "<td>" . $id_rc['identification_type']['desc_' . $lang] . "<br><b>Age:</b>" . $id_rc['identification']['age'] . " <br><b> </b> </td>"
                                . "<td style='text-align: center;'>";
                        $imagedata = $path['file_config']['filepath'] . $id_rc['identification']['photo_img'];
                        $img1 = '';
                        if ($id_rc['identification']['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);

                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='70px' width='70px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='70px' width='70px' />";
                            }
                        } else {
                            $image_codes = null;
                        }

                        $party_html .= "" . $img1 . " </td>
                                <td style='text-align: center;'>";
                        $imagedata1 = $path['file_config']['filepath'] . $id_rc['identification']['biometric_img'];
                        $img2 = '';
                        if ($id_rc['identification']['biometric_img'] != null && file_exists($imagedata1)) {
                            $image1 = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image1);

                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes1 = null;
                        }
                        $party_html .= "" . $img2 . "</td>"
                                . "<td></td></tr>";
                    }
                    $party_html .= "</tbody> </table>";
                }
            }
            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_witness_data_andaman($doc_token_no, $lang = 'en', $rptlabels = NULL, $report_type, $view_flag) {
        try {
            array_map([$this, 'loadModel'], ['file_config', 'witness', 'party_entry', 'TrnBehavioralPatterns']);
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $party_html = NULL;

            $witness_detail = $this->witness->get_wit($lang, $doc_token_no, $report_type);
//                pr($witness_detail);exit;

            $counter = 0;
            if (!empty($witness_detail)) {
                $party_html = "<table width=100%><tr><td style='text-align:left'><b>Witness:</b>"
                        . "<br>I/We individually/Collectively recognize the Seller(S) and Buyer(s)</td></tr></table><br>";
                if ($doc_token_no && $lang) {
                    $party_html .= "<table width=100%  border=1 style='border: 2px solid black;'>
                    <thead>
                        <tr>
                             <th style='text-align: center;border: 2px solid black;' width='5%'>Sr.NO</th> 
                            <th style='text-align: center;border: 2px solid black;' width='60%'>Party Name and Address</th>
                            <th style='text-align: center;border: 2px solid black;' width='10%'>Photo </th>
                          <th style='text-align: center;border: 2px solid black;' width='10%'>Thumb</th>
                         
                            <th style='text-align: center;border: 2px solid black;' width='15%'>Signature</th> 
                        </tr>
                    </thead>
                    <tbody>";
//                     $party_html.="<p style='text-align:left'><b>Witness:</b>"
//                                . "<br> </p>";
                    foreach ($witness_detail as $id_rc) {
                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $id_rc['witness']['witness_id'], $doc_token_no, '3');
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                        }

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;border: 2px solid black;'>" . ++$counter . "</td>"
                                . "<td style='text-align: center;border: 2px solid black;'> <b>" . $id_rc['witness']['witness_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $id_rc['village']['village_name_' . $lang] . ', ' . $id_rc['taluka']['taluka_name_' . $lang] . ', ' . $id_rc['district']['district_name_' . $lang] . ', ' . $id_rc['state']['state_name_' . $lang] . "</td>"
//                               
                                . "<td style='text-align: center;border: 2px solid black;'>";
                        $imagedata = $path['file_config']['filepath'] . $id_rc['witness']['photo_img'];
                        $img1 = '';
                        if ($id_rc['witness']['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50px' width='50px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }

                        $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;border: 2px solid black;'>";
                        $imagedata1 = $path['file_config']['filepath'] . $id_rc['witness']['biometric_img'];
                        $img2 = '';
                        if ($id_rc['witness']['biometric_img'] != null && file_exists($imagedata1)) {
                            $image1 = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image1);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes1 = null;
                        }
                        $party_html .= "" . $img2 . "</td>"
                                . "<td style='border: 2px solid black;'></td></tr>";
                    }
                    $party_html .= "</tbody> </table>";
                    $party_html .= "<table><tr height='50px'></tr></table>";
                    $party_html .= "<table width='100%'><tr><td valign='bottom' style='text-align: right;'><b>Sub Registrar</b></td></tr></table>";
                    $party_html .= "<hr/>";
                }
            }
            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary2_9($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                $bar_qr = '';
                if (!empty($regconf)) {
                    if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                        $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                    } else {
                        $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                    }
                }

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>" . $bar_qr
                        . "<tr> "
                        . "<td style='vertical-align: bottom;'>" . date('d-M-Y') . " </td> "
                        . "<td><h3 align=center style='border:1px solid black; padding:5px;'>$rptlabels[19]</h3> </td> "
                        . "<td style='vertical-align: bottom;'><b>$rptlabels[20]:</b>" . $rpt_data[0][0]['doc_reg_no'] . " </td> "
                        . "</tr>"
                        . "<tr><td colspan=2 style='text-align:left;'> <b>$rptlabels[33] : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/> </td> </tr>"
                        . "</table>"
                        . "<hr>";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                $party_html = $this->get_party_data($doc_token_no, $lang, $rptlabels, $report_type);
                $party_html .= "<p style='text-align:left'>" . $rptlabels[26];
                $party_html .= "<br>$rptlabels[27]" . " 3 at " . "  $rptlabels[32]" . date('d-m-Y') . " </p>";
                $html_design .= $party_html;
//----------------------------------------------------------------for Adding Identification in Report ----------------------------------------------------------------------
                $identification_design = "<p style='text-align:left'><b>Inditification:</b>"
                        . "<br> </p>";
                $identification_design .= $this->get_identification_data($doc_token_no, $lang, $rptlabels, $report_type);
                $html_design .= $identification_design;
                $html_design .= "<hr/>";
//----------------------------------------------------------------For Stamp -----------------------------------------------------------------------------------
                $html_design .= "<table> "
                        . "<tr> <td>" . $rptlabels[27] . " 4 at " . $rptlabels[32] . " " . date('d-F-Y h:m:s') . "</td> <td>" . $rptlabels[34] . " </td> <tr> "
                        . "<tr style='line-height: 18h;'><td> <br><br><br> </td> <td>  </td> <tr> "
                        . "</table>";
                $html_design .= "<hr/>";
//----------------------------------------------------------------EPayment Details. -----------------------------------------------------------------------------------            



                $payment_data = $this->payment->find('all', array('fields' => array('payment_id', 'payment_mode.payment_mode_desc_' . $lang, 'payment.bank_trn_id', 'payment.pamount'),
                    'joins' => array(
                        array('table' => 'ngdrstab_mst_payment_mode', 'alias' => 'payment_mode', 'conditions' => array('payment_mode.payment_mode_id=payment.payment_mode_id and payment_mode.payment_mode_id NOT IN (8,3)'))
                    ),
                    'conditions' => array('payment.token_no' => $doc_token_no)
                ));
                if ($payment_data) {
                    $ePaymentDetail = "<h5 align=center> $rptlabels[77] </h5> <hr/>";
                    $ePaymentDetail .= "<table class='table table-striped table-bordered table-hover' width=60% align=left>"
                            . "<thead><tr>"
                            . " <td>$rptlabels[21]</td>"
                            . "<td>$rptlabels[35]</td>"
                            . "<td>$rptlabels[36]</td>"
                            . "<tr></thead>"
                            . "<tbody>";
                    $SrNo = 1;
                    foreach ($payment_data as $pd) {
                        $ePaymentDetail .= "<tr><td>" . $SrNo++ . "</td>  <td>" . $pd['payment']['payment_id'] . "</td> <td>" . $pd['payment']['pamount'] . "</td> </tr>";
                    }
                    $ePaymentDetail .= ' <tbody></table>';
                    $html_design .= $ePaymentDetail;
                }
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            
                $instructions = $this->RegInstructionSummary2->find('list', array('fields' => array('instruction_id', 'instruction_desc_' . $lang), 'condtions' => array('state_id' => $stateid)));

                $instructionList = '';
                if ($instructions) {
                    $instructionList .= "<h5 align=center> Know Yours Rights as Registant </h5>"
                            . "<ol style='text-align:center'>";
                    foreach ($instructions as $instru) {
                        $instructionList .= "<li style='text-align:left'>" . $instru . " </li>";
                    }
                    $instructionList .= "</ol>";
                }
                $html_design .= $instructionList;
                if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                    $this->create_pdf($html_design, 'doc_reg_summary2_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design;
                }
            } else {
                return 'invalid data';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary2_27($doc_token_no = NULL, $view_flag = NULL, $report_type = NULL) {

        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {

                array_map([$this, 'loadModel'], ['genernal_info', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'PaymentFields']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.stamp1_date,app.stamp2_date,app.stamp3_date,app.stamp4_date,app.stamp5_date,article.book_number, app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_' . $lang),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_' . $lang];
                } else {
                    $off = NULL;
                }

//                pr($rpt_data);exit;
                $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                $bar_qr = '';
                if (!empty($regconf)) {
                    if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                        $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                    } else {
                        $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                    }
                }

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>" . $bar_qr
                        . "<tr>"
                        . "<td colspan=2 style='text-align:center;'><h3 style='border:1px solid black; padding:5px;'>$rptlabels[19]</h3> </td> </tr>"
                        . "<tr><td style='text-align:left'>$rptlabels[295] :- " . date('d-M-Y') . " </td> "
                        . "<td style='text-align:right'><b> $rptlabels[20]:</b>" . $rpt_data[0][0]['doc_reg_no'] . " </td></tr> "
                        . "</tr>"
                        . "<tr><td colspan=2 style='text-align:left;'> <b>$rptlabels[33] : </b>" . $rpt_data[0][0]['article_desc_' . $lang] . "  <br/> </td> </tr>"
                        . "</table>"
                        . "<hr>";


//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                $party_html = $this->get_party_data_maharashtra($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
                $party_html .= "<p style='text-align:left'>" . $rptlabels[26] . " <b>" . $rpt_data[0][0]['article_desc_' . $lang] . " </b> " . $rptlabels[321];
                if ($rpt_data[0][0]['stamp3_date'] != NULL) {
                    $party_html .= "<br>$rptlabels[27]" . " 3 at " . " $rptlabels[32] " . date('d-M-Y h:m:s a', strtotime($rpt_data[0][0]['stamp3_date'])) . " </p>";
                }
                $html_design .= $party_html;
//----------------------------------------------------------------for Adding Identification in Report ----------------------------------------------------------------------
//                $identification_design = "<p style='text-align:left'><b>Idenitification:</b>"
//                        . "<br> </p>";
                $identification_design = $this->get_identification_data_maharashtra($doc_token_no, $lang, $rptlabels, $report_type, $view_flag);
                $html_design .= $identification_design;
//                $html_design.="<hr/>";
//                pr($html_design);
//----------------------------------------------------------------Witeness in Report ----------------------------------------------------------------------
                $witness_design = $this->get_witness_data($doc_token_no, $lang, $rptlabels, $report_type);
                $html_design .= $witness_design;
                $html_design .= "<hr/>";
//----------------------------------------------------------------For Stamp -----------------------------------------------------------------------------------
                if ($rpt_data[0][0]['stamp4_date'] != NULL) {
                    $html_design .= "<table width=100%>"
                            . "<tr><td style='text-align:left'>" . $rptlabels[27] . " 4 at " . date('d-M-Y h:m:s a', strtotime($rpt_data[0][0]['stamp4_date'])) . "</td></tr></table>";
                }
//                if ($rpt_data[0][0]['stamp5_date'] != NULL) {
                $html_design .= "<table width=100%>"
                        . "<tr><td style='text-align:left'>" . $rptlabels[27] . " 5 at  " . date('d-M-Y h:m:s a', strtotime($rpt_data[0][0]['stamp5_date'])) . " " . $rptlabels[253] . ":- <b>" . $rpt_data[0][0]['book_number'] . "</b> </td></tr></table><br><br>";
//                }
//                    pr($html_design);exit;
                $html_design .= "<table width=100%><tr><td style='text-align:left'>" . $off . " </td> </tr></table>";
                $html_design .= "<hr/>";

//----------------------------------------------------------------EPayment Details. -----------------------------------------------------------------------------------            
//                $payment_data = $this->payment->find('all', array('fields' => array('payment_id', 'payment.*', 'payment_mode.payment_mode_desc_' . $lang, 'payment.bank_trn_id', 'payment.pamount'),
//                    'joins' => array(
//                        array('table' => 'ngdrstab_mst_payment_mode', 'type' => 'left','alias' => 'payment_mode', 'conditions' => array("payment_mode.payment_mode_id=payment.payment_mode_id and payment_mode.verification_flag='Y' ")),
//                        array('table' => 'ngdrstab_mst_article_fee_items', 'type' => 'left','alias' => 'item', 'conditions' => array('item.account_head_code=payment.account_head_code and item.fee_param_type_id=2'))
////                       array('table' => 'ngdrstab_mst_payment_fields','type' => 'left', 'alias' => 'pay', 'conditions' => array('pay.account_head_code=payment.account_head_code and item.fee_param_type_id=2'))
//                    ),
//                    'conditions' => array('payment.token_no' => $doc_token_no)
//                ));

                $payment_data = $this->payment->query("select distinct dat.grn_no,dat.defacement_number from ngdrstab_trn_online_payment_received as pay
                      inner join ngdrstab_trn_payment_details as dat on dat.grn_no=pay.grn_no and dat.grn_no is NOT NULL where dat.token_no=$doc_token_no");


                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));

//                pr($paymentfields_trn);exit;
                if ($payment_data) {
                    $ePaymentDetail = "<h5 align=center> $rptlabels[77] </h5> <hr/>";
                    $ePaymentDetail .= "<table class='table table-striped table-bordered table-hover' width=100% align=center>"
                            . "<thead><tr>"
                            . "<th> $rptlabels[21] </th>"
                            . "<th> $rptlabels[35] </th>"
                            . "<th> $rptlabels[36] </th>"
//                          . "<th> $rptlabels[36] </th>"
                            . "<tr></thead>"
                            . "<tbody>";
                    $SrNo = 1;
                    foreach ($payment_data as $pd) {//                        
                        //    pr($pd);exit;
                        $ePaymentDetail .= "<tr><td align=center>" . $SrNo++ . "</td>  <td align=center>" . $pd[0]['grn_no'] . "</td> <td align=center>" . $pd[0]['defacement_number'] . "</td>";
//                    $ePaymentDetail .= "<tr><td>" . $SrNo++ . "</td>  <td>" . $pd['payment']['payment_id'] . "</td> <td>" . $pd['payment']['pamount'] . "</td><td>";
//                        foreach ($paymentfields_trn as $key => $singletrnfield) {
//                            if ($singletrnfield['PaymentFields']['payment_mode_id'] == $pd['payment']['payment_mode_id']) {
//                                $ePaymentDetail .= "" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $pd['payment'][$singletrnfield['PaymentFields']['field_name']] . " </span><br>";
//                                if ($singletrnfield['PaymentFields']['is_transaction_flag'] == 'Y') {
//                                    $editflag = 'N';
//                                }
//                            }
//                        }
                        $ePaymentDetail .= "</tr>";
                    }
                    $ePaymentDetail .= ' </tbody></table>';

                    $html_design .= $ePaymentDetail;
                }
//                echo $html_design;exit;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            
                $instructions = $this->RegInstructionSummary2->find('list', array('fields' => array('instruction_id', 'instruction_desc_' . $lang), 'condtions' => array('state_id' => $stateid)));

                $instructionList = '';
                if ($instructions) {
                    $instructionList .= "<h5 align=center> Know Yours Rights as Registrant </h5>"
                            . "<ol style='text-align:center'>";
                    foreach ($instructions as $instru) {
                        $instructionList .= "<li style='text-align:left'>" . $instru . " </li>";
                    }
                    $instructionList .= "</ol>";
                }
                $html_design .= $instructionList;

                if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                    $this->create_pdf($html_design, 'doc_reg_summary2_' . $doc_token_no, 'A4', '');
                } else {
                    return $html_design;
                }
            } else {
                return 'invalid data';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_reg_summary2_4($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F', $lang = 'en', $doc_lang = 'en') {
        try {
//$this->autoRender = FALSE;
            // $doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('fees_calculation', 'payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article', 'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';
            $userid = $this->Session->read("citizen_user_id");
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $html_design = '';
            $alias_name = '';
            $idenalias = '';
            $witalias = '';
            $consideration_amount = 0;
            if (!empty($rptData)) {

                $article_id = $rptData[0]['article']['article_id'];

                $rptData = $rptData[0];


//===============================         Property Details ==============================================
                $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
// pr($rptPropDtl);exit;
                $prpt_valuation = 0;
                if ($rptPropDtl) {
                    foreach ($rptPropDtl as $prpt) {
                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);exit;
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }
                        $prop_boundaries = '<b>Property Boundaries</b> <br>East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];
//                    pr($prop_boundaries);exit;
                        $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
//                    pr($tmp_prpt_val);exit;
                        $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
//                        pr($prpt_valuation);exit;
//                     $cons_amt='';
                        if (!empty($rptPropDtl)) {
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';
                        }
//                        pr($cons_amt);exit;
                        $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                            'conditions' => array('article_id' => $article_id, 'delete_flag' => 'N', 'token_no' => $doc_token_no
                        )));
                        $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;


                        $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                        $tmp_prop_area = array();
                        foreach ($prop_area as $parea) {
                            if ($parea['item']['is_list_field_flag'] == 'Y')
                                $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                            array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                        }
                    }
                } else {
                    
                }
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
                $lblalias = $rptlabels[402];
//            $stamp_duty_details = $this->stamp_duty->get_stamp_duty($doc_token_no, $userid, $lang, 1); //1 fee Type Id for Online Payment Only
                $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData['article']['article_id']);
//             pr($stamp_duty_details);
                $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;
//            pr($stamp_duty);

                $rpt_title = "Deed Endorsement Sample Template";

                $html_design = "<h4 align=center>" . $rptlabels[363] . "</h4> <h5 align=right> Token No :- <b>" . $doc_token_no . "</b></h5>"
                        . "<div width=100% align=center>"
                        . "<div style='border:2px solid black; width:98%; padding:5px;'>"
                        . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                        . "<table width=100% align=center>"
                        . "<tr>"
                        . "<tr><td>" . $rptlabels[177] . " :- " . $rptData['article']['article_desc_' . $lang] . " ,<b>" . $rptlabels[166] . " </b>:- Rs." . round($prpt_valuation) . "/-,  <b>" . $rptlabels[401] . " </b>:- Rs." . round($consideration_amount) . "/- </td> </tr>"
                        . "<tr><td colspan=2> ";
                $lineNo = 1;
                if ($stamp_duty) {
                    foreach ($stamp_duty as $sd) {
//                    pr($sd);exit;
                        $html_design .= '<b>' . $sd[0]['fee_item_desc_' . $lang] . '</b> :- Rs. ' . $sd[0]['totalsd'] . ', ';
                        if ($lineNo % 3 == 0) {
                            $html_design .= '';
                        }
                        $lineNo++;
                    }
                }

//                $valuation = $this->valuation->Query("select val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land from ngdrstab_trn_valuation val 
//                                                join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
//                                                join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
//                                                join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id where val.token_no=$doc_token_no");
                $valuation = $this->valuation->Query("select val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land 

                                                    from ngdrstab_trn_property_details_entry p
                                                    join ngdrstab_trn_valuation val  ON val.val_id=p.val_id
                                                join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
                                                join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
                                                join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id where val.token_no=$doc_token_no
                                                        group by p.property_id,val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang,usage.usage_main_catg_desc_$lang");
                $sagment_name = '';
                $type_of_land = '';
                $seg_desc = '';
                $val_id = '';
                $rate = '';
                if (!empty($valuation)) {
                    $sagment_name = $valuation[0][0]['village_name_' . $lang];
                    $type_of_land = $valuation[0][0]['type_of_land'];
                    $seg_desc = $valuation[0][0]['segment_name'];
                    $val_id = $valuation[0][0]['val_id'];
                    $rate = round($valuation[0][0]['rate']);
                }
                $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                $area = '';
                foreach ($valuation_details as $vdetails) {
                    $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
//                       pr($areawwww);
                    foreach ($areawwww as $area1)
                        if ($area1[0]['area_field_flag'] == 'Y') {
                            $area .= " " . $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
//                               pr($area);exit;
                        };
                }






//              pr($sagment_name);exit;
//            $html_design.=($stamp_duty) ? implode(', ', $stamp_duty['item']['fee_item_desc_en'].' = '.$stamp_duty[0]['fees']) : NULL;
                $html_design .= "</td></tr>";
//Property Details
                if ($rptPropDtl) {

                    $html_design .= "<tr><td > <b>" . $rptlabels[172] . " </b>:- $type_of_land"//type of land
                            . " , <b>" . $rptlabels[173] . "</b> :-  $area </td></tr>"// Area of land
                            . " <tr><td>  <b>" . $rptlabels[174] . "</b> :- $sagment_name"//segement name
                            . " ,<b>" . $rptlabels[175] . " </b>:-Rs. $rate </td></tr>"//sagement rate
                            . "<tr><td> <b> " . $rptlabels[176] . "</b> :- $seg_desc</td></tr> "; //sagement desc
                }
//Article Name
                $html_design .= " </tr>"//article
                        . "</table>"

//                    . "<br><br>"
                        . "</div>"
                        . "</div>";

                $html_design .= "<table width=100%> <tr> <td width=70%>"; //divide into two screen
                $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                $alias = $this->party->find('all', array('fields' => array('alias_name_en'), 'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                if (!empty($alias[0]['party']['alias_name_en'])) {

                    $alias_name = '(' . $lblalias . ':- <b>' . $alias[0]['party']['alias_name_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                } else {
                    $alias_name = '';
                }
                $newamt = $this->SroDependentFields->find('all', array('fields' => array('field_value'), 'conditions' => array('token_no' => $doc_token_no, 'field_id' => 1)));
//            pr($presenter_name);exit;
                //  pr($doc_token_no);exit;
                $party = $this->party_entry->query("SELECT  p.party_type_id,cate.category_name_$lang,iden.identificationtype_desc_$lang,p.identificationtype_desc_en as iddesc ,p.is_presenter,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left outer join ngdrstab_mst_party_category cate on cate.category_id=p.party_catg_id"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_executer='Y'");

//                    pr($party);exit;
                $sellerflag = 0;
                $buyerflag = 0;
                $buyername = '________';
                $buyerfathername = '_________';
                $image_codes = null;
                $image_codes1 = null;
//            $image_codes=='';
                foreach ($party as $party1) {
                    //  
                    if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0 && $party1[0]['is_presenter'] == 'Y') {
                        $sellerflag = 1;
                        $imagedata = $path['file_config']['filepath'] . $party1[0]['photo_img'];
//                     $sellername= $party1[0]['party_full_name_'.$lang];
//                            $sellerfathername= $party1[0]['father_full_name_'.$lang];
//                            pr($imagedata);exit;
                        if ($party1[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }
//                            pr($imagedata);exit;
                    } else {
                        continue;
                    }
                }
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {

                        $sellerflag = 1;
                        $imagedata1 = $path['file_config']['filepath'] . $party1[0]['photo_img'];

                        if ($party1[0]['photo_img'] != null && file_exists($imagedata1)) {
                            $buyername = $party1[0]['party_full_name_en'];
                            $catg_name = $party1[0]['category_name_en'];
                            $buyerfathername = $party1[0]['father_full_name_' . $lang];
                            $image = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image);
                        } else {
                            $image_codes1 = null;
                            $btnaccept = 0;
                        }
                    } else {
                        continue;
                    }
                }


                $article = $this->article->query("select aps.final_stamp_date,article.article_desc_$lang from ngdrstab_trn_application_submitted aps
                                            join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                            join ngdrstab_mst_article  article on article.article_id=gen.article_id	
                                            where aps.token_no=$doc_token_no");

                $art = $article[0][0]['article_desc_' . $lang];
//           pr($art);exit;
                if ($article[0][0]['final_stamp_date'] == '' || $article[0][0]['final_stamp_date'] == NULL) {
                    $article[0][0]['final_stamp_date'] = '-';
                    $day = '-';
                    $time = '-';
                } else {
                    $day = date('l', strtotime($article[0][0]['final_stamp_date']));
                    $time = date('h:i:s', strtotime($article[0][0]['final_stamp_date']));
                }

                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' >" . $rptlabels[178] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b>" . $alias_name . "</b>                         
                  " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('__________')) . "</b> "
                        . $rptlabels[180] . "</td></tr></table>";


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' width=100%>" . $rptlabels[199] . " :- <b>" . $article[0][0]['final_stamp_date'] . "</b>  " . $rptlabels[200] . " :-  <b>" . $day . "</b> "
                        . $rptlabels[201] . " :- <b>" . $time . "</b></td></tr></table><br><br>";

                $html_design .= "<table width=100%><tr><td width=50% align=left>" . $rptlabels[181] . "</td> <td width=50% align=left>" . $rptlabels[182] . "</td> </tr> </table><br>";

                $html_design .= "<td></td><td></td><td width = 30%> <img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='150px' width='200px' /> " . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "(" . $party[0][0]['category_name_' . $lang] . ")" . " </td> </table>";

//             $html_design .= "<table width=100% border=0>"
//                    . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_' . $lang]) : ('_________')) . "</b>                        
//                  " . $rptlabels[366] . "  <b> Rs." . round($prpt_valuation) . "</b> "
//                    . $rptlabels[367] ;

                IF ($lang == 'en') {
                    $html_design .= "<table width=100% border=0>"
                            . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b> " . $alias_name . "</b>                       
                  " . $rptlabels[179] . "<b> " . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('_________')) . "</b> 
                  " . $rptlabels[366] . " Rs. <b>" . (($newamt) ? ($newamt[0]['SroDependentFields']['field_value']) : ('-')) . "</b> "
                            . $rptlabels[354] . "  <b>" . $art . "</b> "
                            . $rptlabels[367];
                } ELSE {
                    $html_design .= "<table width=100% border=0>"
                            . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b> " . $alias_name . "</b>                       
                  " . $rptlabels[179] . "<b> " . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('_________')) . "</b> 
                  " . $rptlabels[366] . "  <b>" . $art . "</b> "
                            . $rptlabels[354] . "  <b>" . (($newamt) ? ($newamt[0]['SroDependentFields']['field_value']) : ('-')) . "</b> "
                            . $rptlabels[367];
                }


// display photo 
//            $html_design .= "<table width=100% border=0> <tr><td align=left> " . $rptlabels[184] . " " . $rptlabels[178] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_' . $lang]) : ('_________')) . "</b> 
//                          " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_' . $lang]) : ('__________')) . "</b> 
//
//                         " . $rptlabels[185] . $rptlabels[291] . " <b>Rs." . round($prpt_valuation) . "/- </b> 
//                         " . $rptlabels[354] . " <b>" . $art . "/- </b> 
//                          " . $rptlabels[355] . "      
//                         </td>"
//                    . " </tr> "
//                    . "</table>";
//            }

                $party_pres = $this->party_entry->query("SELECT iden.identificationtype_desc_en,p.identificationtype_desc_en as iddesc ,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_presenter='Y'");

                $data = $this->ApplicationSubmitted->Query("select aps.token_no ,art.book_number,aps.doc_reg_no from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                           join ngdrstab_mst_article art on art.article_id=gen.article_id where aps.token_no=$doc_token_no");
                $book_no = '';
                $doc_no = '';
                if (!empty($data)) {
                    $doc_no = $data[0][0]['doc_reg_no'];
                    $book_no = $data[0][0]['book_number'];
                }

//            pr($party_pres);exit;

                $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
//            pr($identifier);exit;
                if (!empty($identifier[0]['identification']['aliasname_en'])) {

                    $idenalias = '(' . $lblalias . ':- <b>' . $identifier[0]['identification']['aliasname_en'] . '</b>' . ')';
//                   pr($idenalias);exit;
                } else {
                    $idenalias = '';
                }
                if (!empty($identifier)) {

                    $witness = $this->witness->find('all', array('fields' => array('witness_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));

                    if (!empty($witness[0]['witness']['aliasname_en'])) {

                        $witalias = '(' . $lblalias . ':- <b>' . $witness[0]['witness']['aliasname_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                    } else {
                        $witalias = '';
                    }
                    if (!empty($witness)) {
//                      pr(count($identifier));exit;
                        if (count($identifier) > 0) {
//                    pr($identifier);exit;
                            $html_design .= "<b>" . (isset($identifier[0]) ? ($identifier[0]['identification']['identification_full_name_en']) : ('_________')) . "</b> " . $idenalias . " " . $rptlabels[368] . "</b>

                       <b>" . (isset($witness[0]) ? ($witness[0]['witness']['witness_full_name_en']) : ('________')) . "</b> "
                                    . $witalias . " .  $rptlabels[369] ."
                                    . " </td>"
                                    . "</tr> </table>";
                        }


                        if (!empty($party_pres)) {
                            $html_design .= "<table width=100% border=1>"
                                    . "<tr>
                         <th style='text-align:center;'>" . $rptlabels[359] . "</th>
                        <th style='text-align:center;'>" . $rptlabels[360] . "   </th>
                        <th style='text-align:center;'> " . $rptlabels[361] . " </th>
                         <th style='text-align:center;'> " . $rptlabels[362] . " </th>
                     </tr>
                     <tr>
                     <td>   " . $party_pres[0][0]["party_full_name_en"] . "</td>
                     <td>" . $party_pres[0][0]["identificationtype_desc_en"] . "  </td>
                     <td> " . $party_pres[0][0]["iddesc"] . "</td>
                     <td> " . $party_pres[0][0]["pan_no"] . "</td>
                     </tr>
                     </table>";
                        }
                        $html_design .= "<table width=100%>"
                                . "<tr><td align=left> " . $rptlabels[358] . "</td></tr>"
                                . "</table><br><br>";


                        $html_design .= "<table width=100%>"
                                . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . $article[0][0]['final_stamp_date'] . "</b> </td><td align=left>" . $rptlabels[182] . " </td></tr>"
                                . "</table>";
                        //phpto to right

                        $html_design .= "<table><tr><td> " . $rptlabels[202] . " </td></tr></table>";

                        if (count($identifier) == 2) {
                            $html_design .= "<table><tr><td align=left>
                        1.  <b>" . (isset($identifier[1]) ? ($identifier[1]['identification']['identification_full_name_' . $lang]) : ('--')) . "</b>
                      " . $rptlabels[189] . "

                        2. <b>" . (isset($witness[1]) ? ($witness[1]['witness']['witness_full_name_' . $lang]) : ($witness[0]['witness']['witness_full_name_' . $lang])) . "</b>

                        
                      </td>"
                                    . "</tr> </table>";
                        }
                    }  //witness close
                }// identifier close
//              $html_design .= "<table><tr><td width = 20% align=right> <img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /></td></tr> </table>";

                $html_design .= "<table width=100%>"
                        . "<tr><td align=left > 1.-------------------</td><td align=left> 2.----------------------- </td>  <td rowspan=3 align=center> <img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /><br>" . $buyername . " (" . $catg_name . ")" . "</td> </tr>" // punjab state
                        . "<tr><td align=left>(" . $rptlabels[289] . ")</td> <td align=left> (" . $rptlabels[290] . ")</td></tr>"
                        . "<tr><td align=left> ---------------------</td><td align=left> ------------------------- </td>   </td></tr>"
                        . "</table>";



                $html_design .= "<table width=100% border=0> <tr> <td width=50%>";

                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align=left> " . $rptlabels[192] . "  </td></tr></table> </table><br><br>";


//            $html_design .=" <td  width=20% height=140px style='border:1px solid gray'>" . $rptlabels[198] . "</td> </table>";  // photograph



                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . $article[0][0]['final_stamp_date'] . "</b> </td><td align=left>" . $rptlabels[364] . " </td></tr>"
                        . "</table>";


                $html_design .= "<table width=60% border=0><tr><td align=left>" . $rptlabels[193] . " :- $doc_no </td> <td> " . $rptlabels[194] . " :- $book_no   </td> </tr>"
                        . "<tr><td align=left> " . $rptlabels[195] . " :- </td> <td> " . $rptlabels[196] . " :- </td> </tr></table>";


                $html_design .= "<table width=100%><tr><td align=left>" . $rptlabels[197] . " </td> <tr> <td>&nbsp;</td></tr>   </tr>"
                        . "<tr><td align=right>" . $rptlabels[364] . " </td></tr> </table>";
//            pr($html_design);exit;
//            $html_design.="<td align=center width=30% style='border:1px solid gray'> " . $rptlabels[198] . "</td> </tr> </table>";
            }

            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', '');
            } else {
                return $html_design;
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

//----------------------------------------------------for party Details summary 2 ----------------------------------------------------------------------
    public function get_party_data($doc_token_no = NULL, $lang = 'en', $rptlabels = NULL, $report_type, $view_flag = NULL) {

        $this->loadModel('file_config');
        $path = $this->file_config->find('first', array('fields' => array('filepath')));
        $doc_lang = $this->Session->read('doc_lang');
//        pr($report_type);exit;
        try {
            $party_html = NULL;
            if ($doc_token_no && $lang) {
                $party_html = "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                            <th style='text-align: center;'>Sr.NO</th> 
                            <th style='text-align: center;'>Party Name and Address</th>
                            <th style='text-align: center;'>Power Of Attorney</th>
                            <th style='text-align: center;'>Party Type</th>
                            <th style='text-align: center;'>Photo</th>
                            <th style='text-align: center;'>FingerPrint</th> 
                            <th style='text-align: center;'>Signature</th> 
                        </tr>
                    </thead>
                    <tbody>";
                $party_date = $this->party_entry->query("SELECT p.* FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_conf_admblock7"
                        . "_village_mapping village on village.village_id=p.village_id "
                        . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                        . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                        . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                        . " where p.token_no=?", array($doc_token_no));
//                pr($party_date);
//                exit;

                foreach ($party_date as $party_date1) {
                    $bio_date = $party_date1[0]['biometric_upload'];
                    $pho_upload_date = $party_date1[0]['photo_upload'];
                }

                if ($report_type == 'P') {
                    $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7"
                            . "_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=? AND DATE(p.biometric_upload)=? AND DATE(p.photo_upload)=?", array($doc_token_no, $bio_date, $pho_upload_date));
                } else {
                    $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=?", array($doc_token_no));
                }
                $counter = 1;
//                  pr($party);exit;
                foreach ($party as $party) {
//                    pr($party);
                    $poa = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=? and p.power_attoney_party_id=? ", array($doc_token_no, $party[0]['party_id']));
//                    pr($party);exit;

                    if (empty($poa)) {


                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }



//                            if ($party[0]['photo_img'] != NULL) {


                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $counter++ . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party[0]['village_name_' . $lang] . ', ' . $party[0]['taluka_name_' . $lang] . ', ' . $party[0]['district_name_' . $lang] . ', ' . $party[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party[0]['pan_no'] . "</td>"
                                . "<td style='text-align: center;'></td>"
                                . "<td>" . $party[0]['party_type_desc_' . $lang] . "<br><b>Age:</b>" . $party[0]['age'] . " <br><b> </b> </td>"
                                . "<td style='text-align: center;'>";

                        $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];

                        $img1 = '';
                        if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50px' width='50px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }


                        $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;'>";
                        $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                        $img2 = '';

                        if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                            $image1 = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image1);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes1 = null;
                        }

                        $party_html .= "" . $img2 . "</td>"
                                . "<td></td>"
                                . "</tr>";
//                            }
                    } else {


                        $party_html = "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                             <th style='text-align: center;'>Sr.NO</th> 
                            <th style='text-align: center;'>Party Name and Address</th>
                            <th style='text-align: center;'>Power Of Attony</th>
                            <th style='text-align: center;'>Party Type</th>
                            <th style='text-align: center;'>Photo</th>
                            <th style='text-align: center;'>FingerPrint</th> 
                            <th style='text-align: center;'>Signature</th> 
                               
                        </tr>
                    </thead>
                    <tbody>";

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
//                        pr($tmp_party_address);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $counter++ . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party[0]['village_name_' . $lang] . ', ' . $party[0]['taluka_name_' . $lang] . ', ' . $party[0]['district_name_' . $lang] . ', ' . $party[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party[0]['pan_no'] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $poa[0][0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $poa[0][0]['village_name_' . $lang] . ', ' . $poa[0][0]['taluka_name_' . $lang] . ', ' . $poa[0][0]['district_name_' . $lang] . ', ' . $poa[0][0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $poa[0][0]['pan_no'] . "</td>"
                                . "<td>" . $party[0]['party_type_desc_' . $lang] . "<br><b>Age:</b>" . $party[0]['age'] . " <br><b> </b> </td>"
                                . "<td style='text-align: center;'>";

                        $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];
                        $img1 = '';
                        if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50px' width='50px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }


                        $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;'>";
                        $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                        $img2 = '';

                        if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                            $image1 = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image1);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes1 = null;
                        }

                        $party_html .= "" . $img2 . "</td>"
                                . "<td></td>"
                                . "</tr>";

//                        $party_html.="<hr/>";
                    }
                }


                $party_html .= "</tbody> </table>";
                //if doc reg no compl
            }
            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_party_data_for_jharkhand($doc_token_no = NULL, $lang = 'en', $rptlabels = NULL, $report_type, $view_flag = NULL) {



        $this->loadModel('file_config', 'party_entry', 'ekyc');
        $path = $this->file_config->find('first', array('fields' => array('filepath')));
        $doc_lang = $this->Session->read('doc_lang');

        try {


            $party_html = NULL;


            if ($doc_token_no && $lang) {


                $party_html = "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                            <th style='text-align: center;'>Sr.NO</th> 
                            <th style='text-align: center;'>Party Name and Address</th>
                          <th style='text-align: center;'>e-KYC Details</th>
                            <th style='text-align: center;'>Power Of Attorney</th>
                            <th style='text-align: center;'>Party Type</th>
                            <th style='text-align: center;'>Party Photo</th>
                            <th style='text-align: center;'>Finger Print</th> 
                            <th style='text-align: center;'>Signature</th> 
                        </tr>
                    </thead>
                    <tbody>";

                $party_date = $this->party_entry->query("SELECT p.* FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_conf_admblock7"
                        . "_village_mapping village on village.village_id=p.village_id "
                        . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                        . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                        . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                        . " where p.token_no=?", array($doc_token_no));

//            echo 'ojoj';exit;
                foreach ($party_date as $party_date1) {
                    $bio_date = $party_date1[0]['biometric_upload'];
                    $pho_upload_date = $party_date1[0]['photo_upload'];
                }



                if ($report_type == 'P') {

                    $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7"
                            . "_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=? AND DATE(p.biometric_upload)=? AND DATE(p.photo_upload)=?", array($doc_token_no, $bio_date, $pho_upload_date));

//                    pr($party);exit;
                } else {

                    $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=?", array($doc_token_no));
                }

                $counter = 1;

                foreach ($party as $party) {

                    $poa = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                            . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                            . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                            . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                            . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                            . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                            . " where p.token_no=? and p.power_attoney_party_id=? ", array($doc_token_no, $party[0]['party_id']));

                    $kyc_details = $this->party_entry->query("select * from ngdrstab_trn_ekycverification_details where sro_accept_flag='Y' and  party_id=? and token_no=?", array($party[0]['party_id'], $doc_token_no));

                    if (empty($poa)) {


                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }

                        if (!empty($kyc_details)) {
                            foreach ($kyc_details as $KYC) {
                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $counter++ . "</td>"
                                        . "<td style='text-align: center;'> <b>" . $party[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party[0]['village_name_' . $lang] . ', ' . $party[0]['taluka_name_' . $lang] . ', ' . $party[0]['district_name_' . $lang] . ', ' . $party[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party[0]['pan_no'] . "</td>"
                                        . "<td style='text-align: center;'>" . $KYC[0]['fullname'] . " <br><b> Address:- </b> " . $KYC[0]['address'] . " </td>"
                                        . "<td style='text-align: center;'></td>"
                                        . "<td>" . $party[0]['party_type_desc_' . $lang] . "<br><b>Age:</b>" . $party[0]['age'] . " <br><b> </b> </td>"
                                        . "<td style='text-align: center;'>";

                                $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];

                                $img1 = '';
                                if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                                    $image = file_get_contents($imagedata);
                                    $image_codes = base64_encode($image);
                                    if ($view_flag == 'V') {
                                        $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='80px' width='80px' /> ";
                                    } else {
                                        $img1 = "<img src='" . $imagedata . "' height='80px' width='80px' />";
                                    }
                                } else {
                                    $image_codes = null;
                                    $btnaccept = 0;
                                }


                                $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;'>";
                                $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                                $img2 = '';

                                if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                                    $image1 = file_get_contents($imagedata1);
                                    $image_codes1 = base64_encode($image1);
                                    if ($view_flag == 'V') {
                                        $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='60px' width='60px' /> ";
                                    } else {
                                        $img2 = "<img src='" . $imagedata1 . "' height='60px' width='60px' />";
                                    }
                                } else {
                                    $image_codes1 = null;
                                }

                                $party_html .= "" . $img2 . "</td>"
                                        . "<td></td>"
                                        . "</tr>";
                            }
                        } else {
                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $counter++ . "</td>"
                                    . "<td style='text-align: center;'> <b>" . $party[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party[0]['village_name_' . $lang] . ', ' . $party[0]['taluka_name_' . $lang] . ', ' . $party[0]['district_name_' . $lang] . ', ' . $party[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party[0]['pan_no'] . "</td>"
                                    . "<td style='text-align: center;'> </td>"
                                    . "<td style='text-align: center;'></td>"
                                    . "<td>" . $party[0]['party_type_desc_' . $lang] . "<br><b>Age:</b>" . $party[0]['age'] . " <br><b> </b> </td>"
                                    . "<td style='text-align: center;'>";

                            $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];

                            $img1 = '';
                            if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                                $image = file_get_contents($imagedata);
                                $image_codes = base64_encode($image);
                                if ($view_flag == 'V') {
                                    $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50px' width='50px' /> ";
                                } else {
                                    $img1 = "<img src='" . $imagedata . "' height='50px' width='50px' />";
                                }
                            } else {
                                $image_codes = null;
                                $btnaccept = 0;
                            }


                            $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;'>";
                            $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                            $img2 = '';

                            if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                                $image1 = file_get_contents($imagedata1);
                                $image_codes1 = base64_encode($image1);
                                if ($view_flag == 'V') {
                                    $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                                } else {
                                    $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                                }
                            } else {
                                $image_codes1 = null;
                            }

                            $party_html .= "" . $img2 . "</td>"
                                    . "<td></td>"
                                    . "</tr>";
                        }

                        // photo and biometric closing
                    } else {

                        $kyc_details = $this->party_entry->query("select * from ngdrstab_trn_ekycverification_details where sro_accept_flag='Y' and  party_id=? and token_no=?", array($party[0]['party_id'], $doc_token_no));

                        $party_html = "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                            <th style='text-align: center;'>Sr.NO</th> 
                            <th style='text-align: center;'>Party Name and Address</th>
                            <th style='text-align: center;'>e-KYC Details</th>
                            <th style='text-align: center;'>Power Of Attony</th>
                            <th style='text-align: center;'>Party Type</th>
                            <th style='text-align: center;'>Photo</th>
                            <th style='text-align: center;'>FingerPrint</th> 
                            <th style='text-align: center;'>Signature</th> 
                               
                        </tr>
                    </thead>
                    <tbody>";

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
//                        pr($tmp_party_address);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $counter++ . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party[0]['village_name_' . $lang] . ', ' . $party[0]['taluka_name_' . $lang] . ', ' . $party[0]['district_name_' . $lang] . ', ' . $party[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party[0]['pan_no'] . "</td>"
                                . "<td style='text-align: center;'>" . $kyc_details[0][0]['fullname'] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $poa[0][0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $poa[0][0]['village_name_' . $lang] . ', ' . $poa[0][0]['taluka_name_' . $lang] . ', ' . $poa[0][0]['district_name_' . $lang] . ', ' . $poa[0][0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $poa[0][0]['pan_no'] . "</td>"
                                . "<td>" . $party[0]['party_type_desc_' . $lang] . "<br><b>Age:</b>" . $party[0]['age'] . " <br><b> </b> </td>"
                                . "<td style='text-align: center;'>";

                        $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];
                        $img1 = '';
                        if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                            if ($view_flag == 'V') {
                                $img1 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50px' width='50px' /> ";
                            } else {
                                $img1 = "<img src='" . $imagedata . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }


                        $party_html .= "" . $img1 . " </td>     
                                <td style='text-align: center;'>";
                        $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                        $img2 = '';

                        if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                            $image1 = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image1);
                            if ($view_flag == 'V') {
                                $img2 = "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50px' width='50px' /> ";
                            } else {
                                $img2 = "<img src='" . $imagedata1 . "' height='50px' width='50px' />";
                            }
                        } else {
                            $image_codes1 = null;
                        }

                        $party_html .= "" . $img2 . "</td>"
                                . "<td></td>"
                                . "</tr>";
                    }
                }

                $party_html .= "</tbody> </table>";
                //if doc reg no compl
            }
            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

//------------------------------------------------------------------------------------------------------------------------------------------------
//withness is applicable for only will and 
//for other it is identifiers by Madhuri Madam
//---------------------------------------------------- Identification Details summary 1 -------------------------------------------------------------------------------------    
    public function get_identification_data($doc_token_no, $lang = 'en', $rptlabels = NULL, $report_type) {
        try {
            array_map([$this, 'loadModel'], ['file_config', 'identification', 'party_entry', 'TrnBehavioralPatterns']);
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $party_html = NULL;
            $identification_detail = $this->identification->get_identification($lang, $doc_token_no, $report_type);

            if (!empty($identification_detail)) {
                $party_html = "<table width=100%><tr><td style='text-align:left'><b>Identification:</b>"
                        . "<br></td></tr></table><br>";
                if ($doc_token_no && $lang) {
                    $party_html .= "<table width=100% class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                            <th style='text-align: center;'>" . $rptlabels[21] . "</th> 
                            <th style='text-align: center;'>" . $rptlabels[22] . "</th>
                            <th style='text-align: center;'>" . $rptlabels[23] . "</th>
                            <th style='text-align: center;'>" . $rptlabels[24] . "</th>
                            <th style='text-align: center;'>" . $rptlabels[25] . "</th> 
                            <th style='text-align: center;'>" . $rptlabels[31] . "</th> 
                        </tr>
                    </thead>
                    <tbody>";


//                pr($identification_detail);exit;
                    $counter = 0;
                    foreach ($identification_detail as $id_rc) {
//                    pr($id_rc);exit;

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $id_rc['identification']['identification_id'], $doc_token_no, '3');

                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                        }
//                     if($identification_detail[0]['identification']['biometric_img']!= NULL || $identification_detail[0]['identification']['photo_img'] != NULL ){   
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td style='text-align: center;'> <b>" . $id_rc['identification']['identification_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $id_rc['village']['village_name_' . $lang] . ', ' . $id_rc['taluka']['taluka_name_' . $lang] . ', ' . $id_rc['district']['district_name_' . $lang] . ', ' . $id_rc['state']['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $id_rc['identification']['pan_no'] . "</td>"
//                            . "<td><br>" . $id_rc['identification_type']['desc_' . $lang] . "</td>"
                                . "<td>" . $id_rc['identification_type']['desc_' . $lang] . "<br><b>Age:</b>" . $id_rc['identification']['age'] . " <br><b> </b> </td>"
                                . "<td style='text-align: center;'>";
                        $imagedata = $path['file_config']['filepath'] . $id_rc['identification']['photo_img'];

                        if ($id_rc['identification']['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                        } else {
                            $image_codes = null;
                        }

                        $party_html .= "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50' width='50' /> </td>
                                <td style='text-align: center;'>";
                        $imagedata1 = $path['file_config']['filepath'] . $id_rc['identification']['biometric_img'];

                        if ($id_rc['identification']['biometric_img'] != null && file_exists($imagedata1)) {
                            $image1 = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image1);
                        } else {
                            $image_codes1 = null;
                        }
                        $party_html .= "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50' width='50' /></td>"
                                . "<td></td></tr>";
                    }
                    $party_html .= "</tbody> </table>";
                }
            }
            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function get_witness_data($doc_token_no, $lang = 'en', $rptlabels = NULL, $report_type) {
        try {
            array_map([$this, 'loadModel'], ['file_config', 'witness', 'party_entry', 'TrnBehavioralPatterns']);
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $party_html = NULL;

            $witness_detail = $this->witness->get_wit($lang, $doc_token_no, $report_type);
//                pr($witness_detail);exit;

            $counter = 0;
            if (!empty($witness_detail)) {
                $party_html = "<p style='text-align:left'><b>Witness</b></p>";
                if ($doc_token_no && $lang) {
                    $party_html .= "<table width=100% class='table table-striped table-bordered table-hover' border=1>
                    <thead>
                        <tr>
                            <th style='text-align: center;'>" . $rptlabels[21] . "</th> 
                            <th style='text-align: center;'>" . $rptlabels[22] . "</th>
                            
                            <th style='text-align: center;'>" . $rptlabels[31] . "</th> 
                        </tr>
                    </thead>
                    <tbody>";
//                     $party_html.="<p style='text-align:left'><b>Witness:</b><th style='text-align: center;'>" . $rptlabels[23] . "</th>
                    //  <th style='text-align: center;'>" . $rptlabels[24] . "</th>
                    //   <th style='text-align: center;'>" . $rptlabels[25] . "</th> "
//                                . "<br> </p>";
                    foreach ($witness_detail as $id_rc) {
                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $id_rc['witness']['witness_id'], $doc_token_no, '3');
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                        }

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td style='text-align: center;'> <b>" . $id_rc['witness']['witness_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $id_rc['village']['village_name_' . $lang] . ', ' . $id_rc['taluka']['taluka_name_' . $lang] . ', ' . $id_rc['district']['district_name_' . $lang] . ', ' . $id_rc['state']['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $id_rc['witness']['pan_no'] . "<b>Age:</b>" . $id_rc['witness']['age'] . "</td>"
                                //. "<td><br>" . $id_rc['witness_type']['witness_type_desc_' . $lang] . "</td>"
                                /*   . "<td style='text-align: center;'>";
                                  $imagedata = $path['file_config']['filepath'] . $id_rc['witness']['photo_img'];
                                  if ($id_rc['witness']['photo_img'] != null && file_exists($imagedata)) {
                                  $image = file_get_contents($imagedata);
                                  $image_codes = base64_encode($image);
                                  } else {
                                  $image_codes = null;
                                  }
                                  $party_html .= "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50' width='50' /> </td>
                                  <td style='text-align: center;'>";
                                  $imagedata1 = $path['file_config']['filepath'] . $id_rc['witness']['biometric_img'];
                                  if ($id_rc['witness']['biometric_img'] != null && file_exists($imagedata1)) {
                                  $image1 = file_get_contents($imagedata1);
                                  $image_codes1 = base64_encode($image1);
                                  } else {
                                  $image_codes1 = null;
                                  }
                                  $party_html .= "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50' width='50' /></td>" */
                                . "<td></td></tr>";
                    }
                    $party_html .= "</tbody> </table>";
                    $party_html .= "<hr/>";
                }
            }
            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

//--------------*-----------*----------------*----------------*---\\ End Registration Summary 2  //--*---------*---------*------------*-----------*-----------*--------------*-----
//--------------*-----------*----------------*----------------*---//    Payment Cashbook   \\--*---------*---------*------------*-----------*-----------*--------------*-----     
    public function rpt_payment_cashbook() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $officeid = $this->Auth->User("office_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office_list = ClassRegistry::init('office')->find('all', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $stateid, 'office_id' => $officeid), 'order' => 'office_name_' . $lang));
            $officename = $office_list[0]['office']['office_name_' . $lang];
            $this->set('officename', $officename);

//            
//            $fieldlist=array();
//            $fieldlist['from']['text'] = 'is_required';
//            $fieldlist['to']['text'] = 'is_required';
//
//            $this->set('fieldlist', $fieldlist);
//            $this->set('result_codes', $this->getvalidationruleset($fieldlist));




            if ($this->request->is('post')) {
                $this->request->data['rpt_payment_cashbook']['office_id'] = $office_list[0]['office']['office_id'];
                $this->Session->write('rpt_payment_cashbook', $this->request->data['rpt_payment_cashbook']);
                $this->request->data['rpt_payment_cashbook'] = $this->request->data['rpt_payment_cashbook'];

                $state_id = $this->Auth->user('state_id');

                $this->payment_cashbook($this->request->data['rpt_payment_cashbook'], $officename);
            }
        } catch (Exception $ex) {
            
        }
    }

    public function payment_cashbook($frmData = NULL, $officename = NULL) {
        try {

            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_payment_cashbook']) ? $this->request->data['rpt_payment_cashbook'] : $frmData;
//            pr($frmData);exit;
            $stateid = $this->Auth->User("state_id");

            // $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 26)));

            if (isset($frmData['office_id']) && isset($frmData['from']) && isset($frmData['to'])) {
                $frmData['from'] = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));
//                $nextday = strftime("%Y-%m-%d", strtotime("$to +1 day"));
                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {
                    $payment_data = $this->payment->Query('delete from ngdrstab_tmp_cashbook');
                    $payment_data = $this->payment->Query('select * from payment_cashbook(?,?,?)', array($frmData['office_id'], $frmData['from'], $to));
                    $payment_data = $this->payment->Query('select * from ngdrstab_tmp_cashbook');

                    if ($payment_data) {
                        $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 7)));
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center>Payment Cashbook</h2><BR>"
                                . "<h3 align=center>Office : " . $officename . "</h3>"
                                . "<table  align=center border=0 width=50%><tr> <td align=center><b>From:</b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To:</b>  " . date('d-M-Y', strtotime($frmData['to'])) . " </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>" . $labels[276] . "</th>"
                                . "<th style='text-align:center;'>Token No</th>"
                                . "<th style='text-align:center;'>Document Registration No</th>"
                                . "<th style='text-align:center;'>" . $labels[277] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[278] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[279] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[280] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[281] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[282] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[283] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[284] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[285] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[286] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[287] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[288] . "</th>"
                                . "</tr>";
                        $SrNo = 1;
                        $totalFees = 0;
                        foreach ($payment_data as $pd) {
                            $pd = $pd[0];
                            $total = ($pd['registration_fee'] + $pd['local_duty'] + $pd['stamp_duty'] + $pd['search_fee'] + $pd['handling_fee'] + $pd['scanning_fee'] + $pd['encumbrance_fee'] + $pd['certified_copy_fee'] + $pd['penalty'] + $pd['other_fees'] + $pd['handling_fee_online']);
                            $totalFees += $total;
                            $html_design .= "<tr>"
                                    . "<td style='text-align:center;'>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['token_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['document_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['registration_fee'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['stamp_duty'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['local_duty'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['search_fee'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['handling_fee'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['scanning_fee'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['encumbrance_fee'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['certified_copy_fee'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['penalty'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['other_fees'] . "</td>"
                                    . "<td style='text-align:center;'>" . $pd['handling_fee_online'] . "</td>"
                                    . "<td style='text-align:center;'>" . $total . "</td>"
                                    . "</tr>";
                        }
                        $html_design .= "<tr><td align=center colspan=14> <b>Total </b></td><td><b>" . $totalFees . "</b></td></tr>";
                        $html_design .= "</table>";
                        $this->create_pdf($html_design, 'Payment', 'A4-L', 'NGDRS', 'D');
                    } else {
                        echo 'No Data Found';
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    //---------------------------------------Monthly Cashbook-- 03-March 2017---------------------------------------------------------------------------------------
    public function rpt_monthly_cashbook() {
        try {
            $this->set('pdf_flag', NULL);
            if ($this->request->is('post')) {
                $this->check_csrf_token($this->request->data['rpt_monthly_cashbook']['csrftoken']);
                $this->Session->write('rpt_monthly_cashbook', $this->request->data['rpt_monthly_cashbook']);
                $this->set('pdf_flag', 'Y');
                $this->request->data['rpt_monthly_cashbook'] = $this->request->data['rpt_monthly_cashbook'];
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function monthly_cashbook_report() {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['payment', 'finyear', 'ReportLabel']);
            $lang = $this->Session->read("sess_langauge");
            $frmData = $this->Session->read("rpt_monthly_cashbook");
            $mont_year = $frmData['month_year'];

            /*
             * Fetch Records
             * 
             */

            $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 8)));
            $html = "<h3 align=center>" . $labels['45'] . "</h3>";
            if ($frmData['month_year'] == 'H') {
                return $html;
            } else {
                $this->create_pdf($html_design, 'Monthly Cashbook', 'A4-L', '', 'I');
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    /*     * ***************************************************************************************************************************************************** */

    public function confreg() {
        try {
            $this->loadModel('conf_reg_bool_info');
            $confregrecord = $this->conf_reg_bool_info->find("all");
            $this->set('confregrecord', $confregrecord);
            $design = '';
            $index = 1;
            $design = "<h3>Configuration Registration Boolean Information</h3>";
            $design .= "<style> td{padding:3px;} table{border-collapse: collapse;'}</style>"
                    . "<table width=50% border=1 align=center>"
                    . "<tr> "
                    . "<th>Sr.No</th>"
                    . "<th>Config Description [English]</th>"
                    . "<th> Config Description [Local Language]</th>"
                    . "<th> Is Boolean(True Or False)</th>"
                    . "<th>Configuration Value</th>"
                    . "<th>Assign Value</th>"
                    . "</tr>";
            foreach ($confregrecord as $conf) {
                $design .= "<tr>"
                        . "<td style='text-align:center;'>" . $index++ . "</td>"
                        . "<td>" . $conf['conf_reg_bool_info']['conf_desc_en'] . "</td>"
                        . "<td width='40%'>" . $conf['conf_reg_bool_info']['conf_desc_ll'] . "</td>"
                        . "<td style='text-align:center;'>" . $conf['conf_reg_bool_info']['is_boolean'] . "</td>"
                        . "<td style='text-align:center;'>" . $conf['conf_reg_bool_info']['conf_bool_value'] . "</td>"
                        . "<td style='text-align:center;'>" . $conf['conf_reg_bool_info']['info_value'] . "</td>"
                        . "</tr>";
            }
//            pr($design);exit;
            $design .= "</table>";
            $this->create_pdf($design, "Configuration Registration Boolean Information", 'A4');
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function login_statistics() {
        
    }

    public function rpt_login_statistics() {

        $this->autoRender = FALSE;

        array_map([$this, 'loadModel'], ['loginusers', 'User']);
        $date1 = date('Y/m/d');
        $date2 = date('d-F-Y');
        $logindetails = NULL;
        $logindetails = "<table style='border-collapse: collapse;border: 1px solid black; width:100%'><caption><h3>Login Statistics Report</h3></caption>"
                . "<tr><td> $date2 </td></tr>"
                . "<tr>"
                . "<th style='border: 1px solid black;background-color: #4CAF50;color: white;'>User name</th>"
                . "<th style='border: 1px solid black;background-color: #4CAF50;color: white;'>Login Date</th>"
                . "<th style='border: 1px solid black;background-color: #4CAF50;color: white;'>Login Time</th>"
                . "<th style='border: 1px solid black;background-color: #4CAF50;color: white;'>Login Status</th>"
                . "<th style='border: 1px solid black;background-color: #4CAF50;color: white;'>IP Address</th>"
                . "</tr>";
        $loginstateus = $this->loginusers->query("select A.user_id,A.username,B.logintime as LoginTime,to_char(B.logindate,'dd/MM/yyyy')as LoginDate,B.login_status,B.req_ip from ngdrstab_mst_user A LEFT OUTER JOIN ngdrstab_mst_loginusers B on A.user_id=B.user_id where logindate='$date1' order by B.logindate desc,B.logintime desc");

        foreach ($loginstateus as $loginstateus) {
            $logindetails .= "<tr style='border: 1px solid black;'>"
                    . "<td style='border: 1px solid black;'>" . $loginstateus[0]['username'] . "</td>"
                    . "<td style='border: 1px solid black;'>" . $loginstateus[0]['logintime'] . "</td>"
                    . "<td style='border: 1px solid black;'>" . $loginstateus[0]['logindate'] . "</td>"
                    . "<td style='border: 1px solid black;'>" . $loginstateus[0]['login_status'] . "</td>"
                    . "<td style='border: 1px solid black;'>" . $loginstateus[0]['req_ip'] . "</td>"
                    . "</tr>";
        }
        $logindetails .= "</table>";
        $this->create_pdf($logindetails, 'Login Statistics Report', 'A4', 'Login Statistics');
    }

//-----------------------------------------------------------------------------------------------------------------------------
    public function rpt_receipt1_4($doc_token_no = NULL, $view_flag = NULL) {
        try {
            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['num_to_words', 'ReceiptCounter', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));
//                pr($rptlabels);exit;
                $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                    'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
                if (!empty($officename)) {
                    $off = $officename[0]['off']['office_name_en'];
                } else {
                    $off = NULL;
                }

                $rpt_data = $this->payment->Query("select vill.village_name_$lang,geninfo.presentation_date,app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_conf_admblock7_village_mapping vill on vill.village_id=party.village_id
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id
                    left join ngdrstab_trn_application_submitted app on app.token_no=geninfo.token_no
                    where  geninfo.token_no=?", array($doc_token_no));

//                pr($rpt_data);
                $market_value = $consideration_amount = 0;
                $property_ids = $this->property_details_entry->find("list", array('fields' => array('property_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id != ' => 0)));
//                pr($property_ids);
                if (!empty($property_ids)) {
                    $val_ids = $this->property_details_entry->find('list', array('fields' => array('val_id'), 'conditions' => array('property_id' => $property_ids)));
                    $market_value = $this->valuation->find('first', array('fields' => array('SUM(rounded_val_amt) AS rounded_val_amt'), 'conditions' => array('val_id' => $val_ids)));
                    $market_value = ($market_value) ? $market_value[0]['rounded_val_amt'] : 0;
                    $fee_calc_ids = $this->property_details_entry->find('list', array('fields' => array('fee_calc_id'), 'conditions' => array('property_id' => $property_ids)));
                    $considerationvalue = $this->fees_calculation->find('first', array('fields' => array('SUM(cons_amt) AS cons_amt'),
                        'conditions' => array('fee_calc_id' => $fee_calc_ids
                    )));
                    $consideration_amount = ($considerationvalue) ? $considerationvalue[0]['cons_amt'] : 0;
                } else {
                    //$this->Session->setFlash(__("record not found"));
                }
                $payment_detail = $this->payment->Query("SELECT item.fee_item_desc_$lang, payment.pamount 
                    FROM ngdrstab_mst_article_fee_items item
                    CROSS JOIN
                    (
                        SELECT SUM(pamount) pamount, account_head_code,token_no FROM ngdrstab_trn_payment_details group by account_head_code,token_no
                    ) payment
                    where item.account_head_code=payment.account_head_code and payment.token_no=? ", array($doc_token_no));
//            $payment = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));

                $feedetails = $this->article_fee_items->query("SELECT feeitem.account_head_code,feeitem.fee_item_desc_en,SUM(stampd.final_value) as totalsd FROM
                                                                ngdrstab_trn_fee_calculation_detail stampd 
                                                                LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
                                                                LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
                                                                WHERE  stamp.token_no=?  
                                                                AND stamp.delete_flag='N' 
                                                                AND feeitem.fee_param_type_id=2 
                                                                group by feeitem.fee_item_id
                                                                order by feeitem.fee_preference ASC
                                                                ", array($doc_token_no));
//               pr($feedetails);exit;
//                        pr($payment);exit;
                $receipt_detail = "<table style='text-align:left;' width='100%'>"
                        . "<tr><td><b>" . $rptlabels[10] . " : </b></td> <td></td> </tr>"
                        . "<tr><td><b>" . $rptlabels[11] . " : </b></td> <td>" . date('d-m-Y') . "</td> </tr>"
                        . "<tr>"
                        . "<td colspan=2><b>" . $rptlabels[12] . ":</b>" . (($rpt_data[0][0]['presenter_name']) ? $rpt_data[0][0]['presenter_name'] : '-') . " </td>"
                        . "</tr>";
                $total = 0;
                foreach ($payment_detail as $payment) {
                    $receipt_detail .= "<tr><td><b>" . $payment[0]['fee_item_desc_' . $lang] . " </b></td> <td width=25%> &#8377;" . $payment[0]['pamount'] . "</td> </tr>";
                    $total += $payment[0]['pamount'];
                }
                $receipt_detail .= "<tr><td colspan=2><hr></td></tr>";
                $receipt_detail .= "<tr><td><b>" . $rptlabels[14] . " </b></td> <td width=25%> &#8377;" . $total . "</td> </tr>";
                $receipt_detail .= "</table>";

                $acknowledgement = "<p style='text-align:left;'>" . $rptlabels[7] . " " . date('d-m-Y') . " " . $rptlabels[8] . " at " . $rptlabels[5] . " ";
                $signiture = "<br><br><br>"
                        . $off . " </p>";

                $html_design = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>"
                        . "<tr> "
                        . "<td style='text-align: left;'>" . date('l d-M-Y') . " </td> "
                        . "<td style='text-align: right;'>" . ($rpt_data[0][0]['doc_reg_no'] ? "Reg no : " . $rpt_data[0][0]['doc_reg_no'] : '') . "</td> "
                        . "</tr>"
                        . "<tr><td>" . date('h:i A') . "</td></tr>"
                        . "</table>";
//            ====================================================View Summary 1(Yogesh)=======================================================================
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=? group by receipt_number", array($doc_token_no));
//                $rec = $this->ReceiptCounter->find("all", array('fields' => array('receipt_number'), 'conditions' => array('token_no' => $doc_token_no)));
//                    pr($rec);exit;
//                pr($receipt_no);exit;
                foreach ($receipt_no as $recno) {
                    $receipt_number = $recno[0]['receipt_number'];
                    $feedetails_design = "<hr>"
                            . "<table width=100%>"
                            . "<tr><td style='text-align: right;'>Receipt No.:- " . $receipt_number . "</td> <td style='text-align: right;'>Date : " . date('d-M-Y') . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>Village Name : " . $rpt_data[0][0]['village_name_' . $lang] . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>Document No :" . $rpt_data[0][0]['doc_reg_no'] . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>Article Type :  " . $rpt_data[0][0]['article_desc_' . $lang] . " </td> </tr>"
                            . "<tr> <td style='text-align: left;'>" . $rptlabels[12] . "  :  " . $rpt_data[0][0]['presenter_name'] . "</td> </tr>"
                            . "</table>"
                            . "<table  align='right' cellpadding='10'>";
//            }
                }
                $payment1 = $this->payment->query("select pay.*,mode.payment_mode_desc_en FROM ngdrstab_trn_payment_details pay,ngdrstab_mst_payment_mode mode WHERE pay.payment_mode_id=mode.payment_mode_id AND  pay.token_no=?  ", array($doc_token_no));
                $paymentfields_trn = $this->PaymentFields->find('all', array('conditions' => array('is_transaction_flag' => 'Y'), 'order' => 'srno ASC'));
                $sdamount = 0;
                $paidamount = 0;
                foreach ($feedetails as $fee) {
                    $sdamount += $fee[0]['totalsd'];
                    $amount = 0;
                    foreach ($payment1 as $paydetails) {
                        //  pr($paydetails);exit;              
                        $paydetails = $paydetails[0];

                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $amount += $paydetails['pamount'];
                            $paidamount += $paydetails['pamount'];
                            //$test++;
                        }
                    }
                    $feedetails_design .= "<tr>"
                            . "<td> &nbsp;<b>" . $fee[0]['fee_item_desc_en'] . "</b>&nbsp;</td>"
                            . "<td style='text-align:right'> &nbsp;" . $fee[0]['totalsd'] . "</td>";


                    $extrarow = 0;
                    foreach ($payment1 as $paydetails) {
                        // pr($paydetails);exit;
                        $paydetails = $paydetails[0];
                        if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {
                            $extrarow++;
                            if ($extrarow > 1) {
                                $feedetails_design .= "</tr><tr><td colspan='4'></td>";
                            }
                            if ($fee[0]['account_head_code'] == $paydetails['account_head_code']) {

                                $result = $this->requestAction(array('controller' => 'Registration', 'action' => 'payment_verification_status'), array('pass' => $paydetails));
                                foreach ($result as $key => $options) {
                                    $status = $key;
                                }

                                $feedetails_design .= ""
                                        . "<td style='text-align:right'> &nbsp;<b>" . $paydetails['payment_mode_desc_en'] . "</b>&nbsp;</td>"
                                        . "<td> &nbsp;" . $paydetails['payee_fname_en'] . " " . $paydetails['payee_mname_en'] . " " . $paydetails['payee_lname_en'] . "</td>"
                                        . "<td> &nbsp;<ul class='list-inline'>";
                                foreach ($paymentfields_trn as $key => $singletrnfield) {
                                    if ($singletrnfield['PaymentFields']['payment_mode_id'] == $paydetails['payment_mode_id']) {
                                        $feedetails_design .= "<li>" . $singletrnfield['PaymentFields']['field_name_desc_' . $lang] . " : <span class='text-primary'>" . $paydetails[$singletrnfield['PaymentFields']['field_name']] . " </span></li>";
                                    }
                                }
                                $feedetails_design .= "</ul></td><td> " . $paydetails['pamount'] . " </td>";
                            }
                        }
                    }
                    $feedetails_design .= "</tr>";
                }
                $total_amount = $sdamount - $paidamount;

                $feedetails_design .= "<tr style='font-weight:bold; border-top: 1pt solid black;'>"
                        . "<td>Sub Total</td>"
                        . "<td>" . $sdamount . "</td>"
                        . "<td colspan=4>(" . $this->num_to_words->in_words($sdamount) . ")</td></tr></table><br>";


                $feedetails_design .= "</table><br>"
                        . "<table  width=100%>"
                        . "<tr>"
                        . "<td width=50%>" . $acknowledgement . "</td>"
                        . "<td style='text-align: right;' width=50%><br><br>" . $signiture . "</td>"
                        . "</tr>"
                        . "</table> <br>"
                        . "<hr>";
                $feedetails_design .= "<table>"
                        . "<tr> <td>"
                        . "<ul style='text-align:left;'>"
                        . "<li>" . $rptlabels[3] . ":  &#8377;" . $market_value . "</li>"
                        . "<li>" . $rptlabels[17] . ":  &#8377;" . $consideration_amount . "</li>"
                        . "<li>" . $rptlabels[4] . ":  &#8377;" . $total . "</li>"
                        . "</ul>"
                        . "</td></tr>"
                        . "</table>";


                $html = "<style>table td {padding-right: 10px; padding-left: 10px;}</style>"
                        . "<table width=100%>"
                        . "<tr>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%><h3 align=center  padding:5px;'>" . $rptlabels[10] . "</h3></td>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%><h3 align=center  padding:5px;'>" . $rptlabels[10] . "</h3></td>"
                        . "</tr> "
                        . "<tr>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%>Office Use</td>"
                        . "<td style='text-align: right; border-right: 2px dashed #000; padding-right: 20px;' width=50%>Original/Duplicate</td>"
                        . "<tr> "
                        . "<tr>"
                        . "<td style='border-right: 2px dashed #000;' width=50%>" . $html_design . "</td>"
                        . "<td style='border-right: 2px dashed #000;' width=50%>" . $html_design . "</td>"
                        . "<tr> "
                        . "<td style='text-align: left; border-right: 2px dashed #000;' width=50%>" . $feedetails_design . " </td> "
                        . "<td style='text-align: left; border-right: 2px dashed #000;' width=50%>" . $feedetails_design . " </td> "
                        . "</tr>"
                        . "</table><br><br>";
                if ($view_flag == 'pdf' || $view_flag == 'D') {
                    $this->create_pdf($html, 'receipt_' . $doc_token_no, 'A4', '');
                } else {
                    return $html;
                }
            } else {
                return 'Invalid data Provided';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_index2_31($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {


            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['valuation', 'property_details_entry', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

                //get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 22)));
                //get Report Basic Data
                $rpt_data = $this->party_entry->Query("select tal.taluka_name_en,app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                        left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                        left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                        left join ngdrstab_trn_application_submitted app on app.token_no=?       
                        JOIN ngdrstab_conf_admblock5_taluka tal on tal.taluka_id=party.taluka_id
                        where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));


                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.final_doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang, tal.taluka_name_$lang,
                                property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                                fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang,	
                                property.boundries_east_en,property.boundries_west_en,property.boundries_south_en,property.boundries_north_en,    
                                info.presentation_date
                                from ngdrstab_trn_application_submitted as app
                                LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                                LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no
                                 LEFT JOIN ngdrstab_conf_admblock5_taluka tal on tal.taluka_id=property.taluka_id
                                LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
                                left join ngdrstab_mst_article article on article.article_id=info.article_id
                                left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
                                left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
                                left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
                                left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                                left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                                where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                                group by info.presentation_date, property.boundries_east_en,property.boundries_west_en,property.boundries_south_en,property.boundries_north_en,
                                app.token_no,app.doc_reg_no,app.final_doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang, tal.taluka_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                                ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");



//pr($documents);exit;
//                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
//                                property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
//                                fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang,	
//                                property.boundries_east_en,property.boundries_west_en,property.boundries_south_en,property.boundries_north_en,    
//                                info.presentation_date
//                                from ngdrstab_trn_application_submitted as app
//                                LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
//                                LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
//                                LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no
//
//                                LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
//                                left join ngdrstab_mst_article article on article.article_id=info.article_id
//                                left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
//                                left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
//                                left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
//                                left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
//                                left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
//                                where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
//                                group by info.presentation_date, property.boundries_east_en,property.boundries_west_en,property.boundries_south_en,property.boundries_north_en,
//                                app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
//                                ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");
//pr($documents);exit;
                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    $area = NULL;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
                        foreach ($areawwww as $area1)
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                    }
                    $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));


                    //                   pr($area);exit;

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
                            //                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $aaa = '';
                    //                pr($documents[0][0]['property_id']);exit;

                    if (is_numeric($documents[0][0]['property_id'])) {
                        //                    pr($documents[0][0]['property_id']);exit;
                        $property_id = $documents[0][0]['property_id'];
                        // pr($documents[0][0]['property_id']);exit;
                        // $property_id=219;
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_$doc_lang
                        from ngdrstab_trn_behavioral_patterns as trn_beh
                        LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                        Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1
                             ");
                        foreach ($prop_add as $add) {
                            $aaa .= ' ' . $add[0]['pattern_desc_' . $lang] . ":" . $add[0]['field_value_' . $doc_lang];
                            //pr($add);exit;
                        }
                        // pr($aaa);exit;
                    }
                    $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
                    $serveyno = '';

                    // pr($serveyno);exit;
                    foreach ($rptPropDtl as $prpt) {

                        $property_id = $prpt['property_details_entry']['property_id'];

                        $serveyno = $this->valuation->query("SELECT mparam.eri_attribute_name_$lang,param.paramter_value
                                                                from ngdrstab_trn_parameter as param
                                                                JOIN ngdrstab_mst_attribute_parameter as mparam ON mparam.attribute_id=param.paramter_id
                                                                where 
                                                                param.token_id=? and param.property_id=?", array($doc_token_no, $property_id));
                    }

                    $token = substr($documents[0][0]['token_no'], -4);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }


                    if ($doc_token_no && $lang) {

                        if ($report_type == 'P') {
                            $party = $this->party_entry->query("SELECT p.id,gen.gender_desc_$lang,occ.occupation_name_$lang,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_mst_occupation occ on occ.occupation_id=p.occupation_id "
                                    . " left join ngdrstab_mst_gender gen on gen.gender_id=p.gender_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                        } else {
                            $party = $this->party_entry->query("SELECT pt.party_type_flag,gen.gender_desc_$lang,occ.occupation_name_$lang,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_mst_occupation occ on occ.occupation_id=p.occupation_id "
                                    . " left join ngdrstab_mst_gender gen on gen.gender_id=p.gender_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        }

                        $counter = 0;
                        $html_design = "";
                        $sellerflag = 0;
                        $buyerflag = 0;
                        // for seller

                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h3 align=center>OFFICE OF THE CIVIL REGISTRAR,CUM-SUBREGISTRAR,TALUKA " . $documents[0][0]['taluka_name_' . $lang] . " </h3>"
                                . "<h3 align=center>Registration Department,Goverment Of Goa</h3>"
                                . "<h2 align=center style='color:#9C6F7A';> Index 2  </h2>"
                                . "<hr style='color:red';>"
                                . "<div class='table-responsive'>"
                                . "<table  align=center border=0 width=100%><tr><td align=left><b> Office Name: </b> " . $documents[0][0]['office_name_' . $lang] . "  </td> <td align=right><b>Village Name:</b> " . $documents[0][0]['office_name_' . $lang] . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th>Sr.No</th>"
                                . "<th>Name Of Deed and Consideration(in Cases of Leases of land,State Whether lesser or lessee pays assessment)</th>"
                                . "<th>Matriz No(Description ,Survey and House No,if mentioned)</th>"
                                . "<th >Area (in square meters) Property Details (Name & area )</th>"
                                . "<th>Name of Executing Party or in case of decree or order of civil court,of Defendent</th>"
                                . "<th>Name of Claiming Party or in case of decree or order of civil court,of Plaintiff</th>"
                                . "<th>Execution Date </th>"
                                . "<th>Presentation Date</th>"
                                . "<th>Serial No</th>"
                                . "<th>Reg.No </th>"
                                . "<th>Reg Date</th>"
                                . "<th>CD No</th>"
                                . "<th>Remarks</th>"
                                . "</tr>";
                        $SrNo = 1;
                        $html_design .= "<tr>"
                                . "<td style='text-align:center;'>" . $SrNo++ . "</td>"
                                . "<td style='text-align:center;'>" . $documents[0][0]['article_desc_' . $lang] . "<br> " . $documents[0][0]['cons_amt'] . "</td><td>";
                        foreach ($serveyno as $attribute) {
                            $html_design .= "<b>" . $attribute[0]['eri_attribute_name_' . $lang] . "</b> :- " . $attribute[0]['paramter_value'] . "<br>";
                        }
                        $html_design .= "</td><td><b> Area :- </b>" . $area . " <br> <b>Property Details:- </b>" . $aaa . "  <br> <b>Boundries Description :-</b>  East:-" . $documents[0][0]['boundries_east_en'] . ",  West:-" . $documents[0][0]['boundries_west_en'] . ", South:-" . $documents[0][0]['boundries_south_en'] . ",  North:-" . $documents[0][0]['boundries_north_en'] . "</td>";
                        $html_design .= "<td style='text-align:center;'>";
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                            $html_design .= " <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . ",<b>Age:</b> " . $party1[0]['age'] . ",<b>Gender:</b>" . $party1[0]['gender_desc_' . $lang] . ",<b>Occupation:</b> " . $party1[0]['occupation_name_' . $lang] . "<br>";
                        }
                        $html_design .= "</td><td style='text-align:center;'>";
                        // for buyer
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                            $html_design .= "<b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . ",<b>Age:</b> " . $party1[0]['age'] . ",<b>Gender:</b>" . $party1[0]['gender_desc_' . $lang] . ",<b>Occupation:</b> " . $party1[0]['occupation_name_' . $lang] . "<br>";
                        }
                        $html_design .= "</td>";
// pr($html_design);exit;

                        $html_design .= "<td style='text-align:center;'>" . date('d/m/Y', strtotime($documents[0][0]['exec_date'])) . "</td>"
                                . "<td style='text-align:center;'> " . date('d-M-Y', strtotime($documents[0][0]['presentation_date'])) . " </td>"
                                . "<td style='text-align:center;'>" . $documents[0][0]['doc_reg_no'] . "</td>"
                                . "<td style='text-align:center;'>" . $documents[0][0]['final_doc_reg_no'] . "</td>"
                                . "<td style='text-align:center;'>" . date('d/m/Y', strtotime($documents[0][0]['doc_reg_date'])) . "  </td>"
                                . "<td style='text-align:center;'></td>"
                                . "<td style='text-align:center;'></td>"
                                . "</tr>";
                    }

                    $html_design .= "</table></div>";
//                pr($html_design);
//                exit;
                    //----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                    if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                        $this->create_pdf($html_design, 'Index2_31_' . $doc_token_no, 'A4-P', '', $view_flag);
                    } else {
                        return $html_design;
                    }
                } else {
                    return 'invalid data';
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

//---------------------------------------by shridhar on 14-July-2017------------------------------------
    public function employee_hierarchy() {
        try {
            array_map([$this, 'loadModel'], ['employee', 'User']);
            $user_id = $this->Auth->User("user_id");
            $my_details = $this->employee->get_emloyee_detail($user_id);
            $hierarchy_detail = (isset($my_details[0][0]['reporting_officer_id'])) ? $this->employee->get_employee_hierarchy($my_details[0][0]['reporting_officer_id']) : NULL;
            $this->set(compact('my_details', 'hierarchy_detail'));
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

//------------------Joint Report (Valuation,Stamp_Duty,Summary1,Summary2)--by shridhar on 28-July-2017--------------------------------------------------------
    public function joint_report($doc_token_no = NULL, $dflag = 'D') {
        try {
            $doc_token_no = base64_decode($doc_token_no);
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['property_details_entry']);
            $html_design = '';

            $html_design .= $this->pre_registration_docket(base64_encode($doc_token_no), 'V');

            $ids = $this->property_details_entry->find('list', array('fields' => array('val_id', 'fee_calc_id'), 'conditions' => array('token_no' => $doc_token_no, 'val_id !=' => 0)));
            $lang = $this->Session->read('sess_langauge');
            $val_ids = $fee_cals_ids = array();
            if ($ids) {
                $val_ids = array_keys($ids);
                $fee_cals_ids = array_keys($ids);
            }

            $valuation_design = "<h3 align=center>Property Valuation</h3>";
            if ($val_ids) {
                foreach ($val_ids as $val_id) {
                    $valuation_design .= $this->rptview('V', base64_encode($val_id));
                }
                $html_design .= $valuation_design;
            }

            $stamp_duty_design = "<p style='page-break-after: always;'>&nbsp;</p>"
                    . "<h3 align=center> Stamp Duty </h3>";
            if ($fee_cals_ids) {
                $fees = new FeesController();
                $stamp_duty_design .= $fees->view_sd_calc($doc_token_no, 2, $lang);
                //  $html_design .= $stamp_duty_design;
            }

            $summary1 = "<p style='page-break-after: always;'>&nbsp;</p>"
                    . $this->rpt_reg_summary1(base64_encode($doc_token_no), 'V');
            $html_design .= $summary1;

            $summary2 = "<p style='page-break-after: always;'>&nbsp;</p>"
                    . $this->summary2_report(base64_encode($doc_token_no), 'JR');
            $html_design .= $summary2;
//            $index1 = $this->rpt_index1(base64_encode($doc_token_no), 'V', 'F');
//            $html_design.=$index1;

            if ($dflag == 'D') {
                $this->create_pdf($html_design, 'joint_report_' . $doc_token_no);
            } else {
                return $html_design;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    // index 1 report
    public function rpt_index1($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;
        switch ($state_id) {
            case 4:
                return $this->rpt_index1_4($doc_token_no, $view_flag, $report_type);
                break;

            case 36:
                return $this->rpt_index1_4($doc_token_no, $view_flag, $report_type);
                break;

            case 31:
                return $this->rpt_index1_4($doc_token_no, $view_flag, $report_type);
                break;

            case 20:
                return $this->rpt_index1_4($doc_token_no, $view_flag, $report_type);
                break;

            case 15:
                return $this->rpt_index1_4($doc_token_no, $view_flag, $report_type);
                break;

            case 27:
                return $this->rpt_index1_27($doc_token_no, $view_flag, $report_type);
                break;

            default :
                return $this->rpt_index1_27($doc_token_no, $view_flag, $report_type);
        }
    }

    public function rpt_index1_4($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 21)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no
                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
                            where app.token_no=?", array($doc_token_no));


                $token = $documents[0][0]['token_no'];
                $fyear = "";
                $regdate = "";
                $exedate = "";
                if (isset($documents[0][0]['doc_reg_date']) && !empty($documents[0][0]['doc_reg_date'])) {
                    $fyear = date('Y', strtotime($documents[0][0]['doc_reg_date']));
                    $regdate = date('d/m/Y', strtotime($documents[0][0]['doc_reg_date']));
                }
                if (isset($documents[0][0]['exec_date']) && !empty($documents[0][0]['exec_date'])) {
                    $exedate = date('d/m/Y', strtotime($documents[0][0]['exec_date']));
                }
                $receipt_number = '';
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                foreach ($receipt_no as $recno) {
                    $receipt_number = $recno[0]['receipt_number'];
                }

                $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                $party_html = NULL;

                if ($doc_token_no && $lang) {

                    $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                    $bar_qr = '';
                    if (!empty($regconf)) {
                        if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                            $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                        } else {
                            $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                        }
                    }
                    $party_html = "<table><tr><td>" . $bar_qr . "</td></tr></table>";

                    $party_html .= "<table width='100%'  border=1>
                    <thead>
                     <tr>
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>INDEX 1 <br> ( RULE 29 )</td>
                             <td style='text-align: left;width:30%'>Office Name : " . $documents[0][0]['office_name_' . $lang] . "<br>
                                  Receipt No:- " . $receipt_number . " <br>
                                  Doc Reg.NO:- " . $documents[0][0]['doc_reg_no'] . " 
                              </td>         
                        </tr>
                        
                    </thead>
                    </table>
                    <table width='100%'  border=1>
                     
                    <tbody>";
                    if ($report_type == 'P') {
                        $party = $this->party_entry->query("SELECT p.id,gen.gender_desc_$lang,occ.occupation_name_$lang,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                . " left join ngdrstab_mst_occupation occ on occ.occupation_id=p.occupation_id "
                                . " left join ngdrstab_mst_gender gen on gen.gender_id=p.gender_id "
                                . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                    } else {
                        $party = $this->party_entry->query("SELECT pt.party_type_flag,gen.gender_desc_$lang,occ.occupation_name_$lang,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                . " left join ngdrstab_mst_occupation occ on occ.occupation_id=p.occupation_id "
                                . " left join ngdrstab_mst_gender gen on gen.gender_id=p.gender_id "
                                . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                . " where p.token_no=?", array($doc_token_no));
                    }



                    $counter = 0;

                    $sellerflag = 0;
                    $buyerflag = 0;
                    // for seller
                    foreach ($party as $party1) {
                        if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0) {
                            $sellerflag = 1;
                        } else {
                            continue;
                        }

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> (" . ++$counter . " )</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>Seller/Executor 1/Vendor </td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>,<b>Age:</b> " . $party1[0]['age'] . ",<b>Gender:</b>" . $party1[0]['gender_desc_' . $lang] . ",<b>Occupation:</b> " . $party1[0]['occupation_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<tr>";
                    }
                    // for buyer
                    foreach ($party as $party1) {
                        if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {
                            $buyerflag = 1;
                        } else {
                            continue;
                        }

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>Purchaser/Buyer/Executor 2</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>,<b>Age:</b> " . $party1[0]['age'] . ",<b>Gender:</b>" . $party1[0]['gender_desc_' . $lang] . ",<b>Occupation:</b> " . $party1[0]['occupation_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<tr>";
                    }

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>Property Location :- </td>"
                            . "<td style='text-align: center;'> <b>" . $documents[0][0]['village_name_' . $lang] . "</td>"
                            . "<tr>";

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>Date Execution</td>"
                            . "<td style='text-align: center;'> <b>" . $exedate . "</td>"
                            . "<tr>";

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>Registration Date</td>"
                            . "<td style='text-align: center;'> <b>" . $regdate . "</td>"
                            . "<tr>";
                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>Sr.No and Year</td>"
                            . "<td style='text-align: center;'> <b>" . $token . "/" . $fyear . "</td>"
                            . "<tr>";

                    $party_html .= "</tbody> </table>";

                    $html_design .= $party_html;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                    if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                        $this->create_pdf($html_design, 'Index1_4_' . $doc_token_no, 'A4', 'Index 1', $view_flag);
                    } else {
                        return $html_design;
                    }
                } else {
                    return 'invalid data';
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    public function rpt_index1_27_old($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 21)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no
                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
                            where app.token_no=?", array($doc_token_no));


                $token = $documents[0][0]['token_no'];
                $fyear = "";
                $regdate = "";
                $exedate = "";
                if (isset($documents[0][0]['doc_reg_date']) && !empty($documents[0][0]['doc_reg_date'])) {
                    $fyear = date('Y', strtotime($documents[0][0]['doc_reg_date']));
                    $regdate = date('d/m/Y', strtotime($documents[0][0]['doc_reg_date']));
                }
                if (isset($documents[0][0]['exec_date']) && !empty($documents[0][0]['exec_date'])) {
                    $exedate = date('d/m/Y', strtotime($documents[0][0]['exec_date']));
                }
                $receipt_number = '';
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                foreach ($receipt_no as $recno) {
                    $receipt_number = $recno[0]['receipt_number'];
                }

                $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                $party_html = NULL;

                if ($doc_token_no && $lang) {

                    $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                    $bar_qr = '';
                    if (!empty($regconf)) {
                        if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                            $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                        } else {
                            $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                        }
                    }
                    $party_html = "<table><tr><td>" . $bar_qr . "</td></tr></table>";

                    $party_html .= "<table width='100%'  border=1>
                    <thead>
                     <tr>
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>" . $rptlabels[207] . " <br> ( RULE 29 )</td>
                             <td style='text-align: left;width:30%'>" . $rptlabels[208] . ": " . $documents[0][0]['office_name_' . $lang] . "<br>
                                  Receipt No:- " . $receipt_number . " <br>
                                  Doc Reg.NO:- " . $documents[0][0]['doc_reg_no'] . " 
                              </td>         
                        </tr>
                        
                    </thead>
                    </table>
                    <table width='100%'  border=1>
                     
                    <tbody>";
                    if ($report_type == 'P') {
                        $party = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                    } else {
                        $party = $this->party_entry->query("SELECT pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                . " where p.token_no=?", array($doc_token_no));
                    }



                    $counter = 0;

                    $sellerflag = 0;
                    $buyerflag = 0;
                    // for seller
                    foreach ($party as $party1) {
                        if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                            $sellerflag = 1;
                        } else {
                            continue;
                        }

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> (" . ++$counter . " )</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[209] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<tr>";
                    }
                    // for buyer
                    foreach ($party as $party1) {
                        if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                            $buyerflag = 1;
                        } else {
                            continue;
                        }

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[210] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<tr>";
                    }

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[211] . " :- </td>"
                            . "<td style='text-align: center;'> <b>" . $documents[0][0]['village_name_' . $lang] . "</td>"
                            . "<tr>";

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[212] . "</td>"
                            . "<td style='text-align: center;'> <b>" . $exedate . "</td>"
                            . "<tr>";

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[213] . "</td>"
                            . "<td style='text-align: center;'> <b>" . $regdate . "</td>"
                            . "<tr>";
                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[214] . "</td>"
                            . "<td style='text-align: center;'> <b>" . $token . "/" . $fyear . "</td>"
                            . "<tr>";

                    $party_html .= "</tbody> </table>";

                    $html_design .= $party_html;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                    if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                        $this->create_pdf($html_design, 'Index1_4_' . $doc_token_no, 'A4', 'Index 1', $view_flag);
                    } else {
                        return $html_design;
                    }
                } else {
                    return 'invalid data';
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    public function rpt_index1_27($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') { //for MH state
        try {
            $this->loadModel('conf_reg_bool_info');
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 21)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no
                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
                            where app.token_no=?", array($doc_token_no));


//                $token = $documents[0][0]['token_no'];
                $token = substr($documents[0][0]['token_no'], -4);
                //list($num, $char, $num1) = split('[-]', $rpt_data[0][0]['doc_reg_no']);
                $fyear = "";
                $regdate = "";
                $exedate = "";
                if (isset($documents[0][0]['doc_reg_date']) && !empty($documents[0][0]['doc_reg_date'])) {
                    $fyear = date('Y', strtotime($documents[0][0]['doc_reg_date']));
                    $regdate = date('d/m/Y', strtotime($documents[0][0]['doc_reg_date']));
                }
                if (isset($documents[0][0]['exec_date']) && !empty($documents[0][0]['exec_date'])) {
                    $exedate = date('d/m/Y', strtotime($documents[0][0]['exec_date']));
                }
                $receipt_number = '';
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                foreach ($receipt_no as $recno) {
                    $receipt_number = $recno[0]['receipt_number'];
                }

                $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                $party_html = NULL;

                if ($doc_token_no && $lang) {

                    $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                    $bar_qr = '';
                    if (!empty($regconf)) {
                        if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                            $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                        } else {
                            $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                        }
                    }
                    $party_html = "<table><tr><td>" . $bar_qr . "</td></tr></table>";

                    $party_html .= "<style> table{border-collapse: collapse;}</style><table width='100%' border=1>
                    <thead>
                    <tr >
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>" . $rptlabels[207] . " <br> ( RULE 29 )</td>
                            <td style='text-align: left;width:30%'>" . $rptlabels[208] . ": " . $documents[0][0]['office_name_' . $lang] . "<br>
                                  Receipt No:- " . $receipt_number . " <br>
                                  Doc Reg.NO:- " . $documents[0][0]['doc_reg_no'] . " 
                            </td>         
                    </tr>
                    </thead>
                    </table>";

                    if ($report_type == 'P') {
                        $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                . " where p.token_no=?", array($doc_token_no));
                    } else {
                        $party = $this->party_entry->query("SELECT p.*, pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                . " where p.token_no=?", array($doc_token_no));
                    }

                    $counter = 0;

                    $sellerflag = 0;
                    $buyerflag = 0;

                    $party_html .= "<table width='100%'  border=1>
                                    <tbody><tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;width:5%'> " . ++$counter . " </td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;width:20%'>" . $rptlabels[209] . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;width:20%'>";

                    // for seller
                    foreach ($party as $party1) {
                        if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                            $sellerflag = 1;
                        } else {
                            continue;
                        }

                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }
                        if (!empty($party_address)) {
                            $address = implode(', ', $party_address);
                        } else {
                            $address = $party1[0]['address_' . $lang];
                        }

                        $party_html .= "<p style='text-align: justify;'>" . $party1[0]['party_full_name_' . $lang] . ", " . $address . " " . $party1[0]['village_name_' . $lang] . ' ' . $party1[0]['taluka_name_' . $lang] . ' ' . $party1[0]['district_name_' . $lang] . ' ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</p>";
                    }
                    $party_html .= "</td><tr>";

                    $party_html .= "<tr>"
                            . "<td style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td style='text-align: center; font-weight:bold;'>" . $rptlabels[210] . "</td>"
                            . "<td style='text-align: center;'>";
                    // for buyer
                    foreach ($party as $party1) {
                        if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                            $buyerflag = 1;
                        } else {
                            continue;
                        }
                        $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                        $party_address = array();
//                        pr($party_address);
                        foreach ($tmp_party_address as $tmp_party_address) {
                            array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                        }
                        if (!empty($party_address)) {
                            $address2 = implode(', ', $party_address);
                        } else {
                            $address2 = $party1[0]['address_' . $lang];
                        }
                        $party_html .= "<p> " . $party1[0]['party_full_name_' . $lang] . " </b> " . $address2 . " " . $party1[0]['village_name_' . $lang] . ' ' . $party1[0]['taluka_name_' . $lang] . ' ' . $party1[0]['district_name_' . $lang] . '' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</p>";
                    }
                    $party_html .= "</td><tr>";

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[211] . " :- </td>"
                            . "<td style='text-align: center;'> <b>" . $documents[0][0]['village_name_' . $lang] . "</td>"
                            . "<tr>";

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[212] . "</td>"
                            . "<td style='text-align: center;'> <b>" . $exedate . "</td>"
                            . "<tr>";

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[213] . "</td>"
                            . "<td style='text-align: center;'> <b>" . $regdate . "</td>"
                            . "<tr>";
                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[214] . "</td>"
                            . "<td style='text-align: center;'> <b>" . $rpt_data[0][0]['doc_reg_no'] . "</td>"
                            . "<tr>";

                    $party_html .= "</tbody> </table>";

                    $html_design .= $party_html;
//                  echo $html_design;exit;

                    if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                        $this->create_pdf($html_design, 'Index1_4_' . $doc_token_no, 'A4', 'Index 1', $view_flag);
                    } else {
                        return $html_design;
                    }
                } else {
                    return 'invalid data';
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash('Sorry! Error in generating index1');
        }
    }

    // index 2 report
    public function rpt_index2($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;
        switch ($state_id) {
            case 4:
                return $this->rpt_index2_4($doc_token_no, $view_flag, $report_type);
                break;
            case 36:
                return $this->rpt_index2_4($doc_token_no, $view_flag, $report_type);
                break;
            case 31:
                return $this->rpt_index2_31($doc_token_no, $view_flag, $report_type);
                break;
            case 20:
                return $this->rpt_index2_4($doc_token_no, $view_flag, $report_type);
                break;
            case 15:
                return $this->rpt_index2_4($doc_token_no, $view_flag, $report_type);
                break;
            case 27:
                return $this->rpt_index2_27($doc_token_no, $view_flag, $report_type);
                break;
            default :
                return $this->rpt_index2_4($doc_token_no, $view_flag, $report_type);
                break;
        }
    }

    public function rpt_index2_27($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') { // for MH state
        try {
            $this->loadModel('conf_reg_bool_info');
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

                //get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 22)));
                //get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                        left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                        left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                        left join ngdrstab_trn_application_submitted app on app.token_no=?       

                        where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
                                property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                                fee.cons_amt,trn_val.rounded_val_amt as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang			    
                                from ngdrstab_trn_application_submitted as app
                                LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                                LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no
                                LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
                                left join ngdrstab_mst_article article on article.article_id=info.article_id
                                left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no and fee.cons_amt is not null
                                left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
                                left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
                                left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                                left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                                where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                                group by
                                app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                                ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");

//pr($documents);
                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    $area = NULL;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    //pr($valuation_details);
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);

                        foreach ($areawwww as $area1)
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area + $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                    }

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
                            //                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $address = '';
                    //                pr($documents[0][0]['property_id']);exit;

                    if (is_numeric($documents[0][0]['property_id'])) {
                        //                    pr($documents[0][0]['property_id']);exit;
                        $property_id = $documents[0][0]['property_id'];
                        // pr($documents[0][0]['property_id']);exit;
                        // $property_id=219;
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_$doc_lang
                        from ngdrstab_trn_behavioral_patterns as trn_beh
                        LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                        Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1
                             ");
//                        pr($prop_add);
//                        foreach ($prop_add as $add) {
//                            $address .= ' ' . $add[0]['pattern_desc_' . $lang] . ":" . $add[0]['field_value_' . $doc_lang];
//                            
//                        }
                        $address .= ($prop_add[1][0]['field_value_' . $doc_lang]);
                    }

                    $fyear = "";
                    $token = substr($documents[0][0]['token_no'], -4);
                    list($num, $char, $num1) = split('[-]', $rpt_data[0][0]['doc_reg_no']);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }

                    if (isset($documents[0][0]['doc_reg_date']) && !empty($documents[0][0]['doc_reg_date'])) {
                        $fyear = date('Y', strtotime($documents[0][0]['doc_reg_date']));
                    }

                    $receipt_number = '';
                    $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                    foreach ($receipt_no as $recno) {
                        $receipt_number = $recno[0]['receipt_number'];
                    }
                    if ($doc_token_no && $lang) {

                        $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                        $bar_qr = '';
                        if (!empty($regconf)) {
                            if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                            } else {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                            }
                        }
                        $html_design = "";
                        //----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                        $party_html = NULL;
                        if ($doc_token_no && $lang) {

                            $party_html = "<table><tr><td>" . $bar_qr . "</td></tr></table>";

                            $party_html .= "<style> table{border-collapse: collapse;} td{padding:5px;} </style><table width='100%'  border=1>
                            <tr>
                                <td style='text-align: center;width:25%'><b>" . $rptlabels[215] . "</b> <br> ( RULE 29 )</td>
                            </tr>
                            <tr>
                                  <td style='text-align: center;width:25%'>" . $rptlabels[225] . ": <b>" . $documents[0][0]['village_name_' . $lang] . "</b><br><br><><br> </td>
                                      </tr>
                            </table>";
                            $party_html .= " <table width='100%'  border=1>  
                             <tr>
                                <td style='text-align: center;width:25%'>" . date('l , d F ,Y h:s A') . "</td> 
                             <td style='text-align: center;width:25%'>" . $rptlabels[216] . ": " . $documents[0][0]['office_name_' . $lang] . "<br>
                                 
                                  " . $rptlabels[323] . ":- " . $documents[0][0]['doc_reg_no'] . " 
                               </td> 
                            </tr>
                           </table>
                     <table width='100%'  border=1>  

                        <tbody>";
                            if ($report_type == 'P') {
                                $party = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_en,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                        . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                        . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                        . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                        . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                        . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                            } else {
                                $party = $this->party_entry->query("SELECT pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_en,p.party_full_name_en,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                        . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                        . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                        . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                        . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                        . " where p.token_no=?", array($doc_token_no));
                            }

                            $counter = 0;

                            $sellerflag = 0;
                            $buyerflag = 0;
                            // for seller
                            foreach ($party as $party1) {
                                if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                                    $sellerflag = 1;
                                } else {
                                    continue;
                                }

                                $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                                $party_address = array();
                                foreach ($tmp_party_address as $tmp_party_address) {
                                    array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                                }

                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[217] . "</td>"
                                        . "<td style='text-align: center;'> <b>" . $documents[0][0]['article_desc_' . $lang] . " </b> <br>" . "</td>"
                                        . "</tr>";

                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[218] . "</td>"
                                        . "<td style='text-align: center;'> <b>" . $documents[0][0]['cons_amt'] . " </b> <br>" . "</td>"
                                        . "</tr>";

                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[219] . "</td>"
                                        . "<td style='text-align: center;'> <b>" . $documents[0][0]['market_value'] . " </b> <br>" . "</td>"
                                        . "</tr>";

                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[220] . "</td>"
                                        . "<td style='text-align: center;'> <b>" . $address . " </b> <br>" . "</td>"
                                        . "</tr>";

                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[221] . "</td>"
                                        . "<td style='text-align: center;'> <b></b> <br>" . "</td>"
                                        . "</tr>";

                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[222] . " </td>"
                                        . "<td style='text-align: center;'> <b> </b> <br>" . "</td>"
                                        . "</tr>";

                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'> " . $rptlabels[223] . " </td>"
                                        . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_en'] . " </b> <br>" . implode(', ', $party_address) . ",<b> " . $rptlabels[340] . ":</b> " . $party1[0]['age'] . ",<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                        . "</tr>";
                            }
                            // for buyer
                            foreach ($party as $party1) {
                                if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                                    $sellerflag = 1;
                                } else {
                                    continue;
                                }

                                $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                                $party_address = array();
                                foreach ($tmp_party_address as $tmp_party_address) {
                                    array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                                }
                                $party_html .= "<tr>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                        . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[224] . "</td>"
                                        . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_en'] . " </b> <br>" . implode(', ', $party_address) . ",<b> " . $rptlabels[340] . ":</b> " . $party1[0]['age'] . ",<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . ",<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                        . "<tr>";
                            }

//                            $party_html .= "<tr>"
//                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
//                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[225] . "</td>"
//                                    . "<td style='text-align: center;'> <b>" . $documents[0][0]['village_name_' . $lang] . "</td>"
//                                    . "<tr>";

                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[226] . "</td>"
                                    . "<td style='text-align: center;'> <b>" . date('d/m/Y', strtotime($documents[0][0]['exec_date'])) . "</td>"
                                    . "<tr>";

                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[227] . "</td>"
                                    . "<td style='text-align: center;'> <b>" . date('d/m/Y', strtotime($documents[0][0]['doc_reg_date'])) . "</td>"
                                    . "<tr>";
                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[228] . "</td>"
                                    . "<td style='text-align: center;'> <b>" . $num . "-" . $char . "/" . $fyear . "</td>"
                                    . "<tr>";

                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[229] . "</td>"
                                    . "<td style='text-align: center;'> <b>" . $stamp . "</td>"
                                    . "<tr>";

                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[230] . "</td>"
                                    . "<td style='text-align: center;'> <b>" . $reg . "</td>"
                                    . "<tr>";
                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[337] . "</td>"
                                    . "<td style='text-align: center;'> <b></td>"
                                    . "<tr>";

                            $party_html .= "</tbody> </table>";

                            $html_design .= $party_html;
//                            echo $html_design; exit;
                            //----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                                $this->create_pdf($html_design, 'Index2_4_' . $doc_token_no, 'A4', 'Index 2', $view_flag);
                            } else {
                                return $html_design;
                            }
                        }
                    } else {
                        return 'invalid data';
                    }
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    public function rpt_index2_4($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {

            $this->autoRender = FALSE;

            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

                //get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 22)));
                //get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                        left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                        left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                        left join ngdrstab_trn_application_submitted app on app.token_no=?       

                        where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
                                property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                                fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang			    
                                from ngdrstab_trn_application_submitted as app
                                LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                                LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no

                                LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
                                left join ngdrstab_mst_article article on article.article_id=info.article_id
                                left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
                                left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
                                left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
                                left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                                left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                                where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                                group by
                                app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                                ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");


                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    $area = NULL;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
                        foreach ($areawwww as $area1)
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                    }

                    //                   pr($area);exit;

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
                            //                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $aaa = '';
                    if (is_numeric($documents[0][0]['property_id'])) {
                        $property_id = $documents[0][0]['property_id'];
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_$doc_lang
                                                            from ngdrstab_trn_behavioral_patterns as trn_beh
                                                            LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                                                            Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1");
                        foreach ($prop_add as $add) {
                            $aaa .= ' ' . $add[0]['pattern_desc_' . $lang] . ":" . $add[0]['field_value_' . $doc_lang];
                        }
                    }

                    $token = substr($documents[0][0]['token_no'], -4);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }

                    $html_design = "";
                    //----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                    $party_html = NULL;
                    if ($doc_token_no && $lang) {
                        $party_html = "<table width='100%'  border=1>
                        <thead>
                         <tr>
                                <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                                <td style='text-align: center;width:30%'>" . $rptlabels[215] . " <br> ( RULE 29 )</td>
                                <td style='text-align: center;width:30%'>" . $rptlabels[216] . ": " . $documents[0][0]['office_name_' . $lang] . " </td>

                            </tr>

                        </thead>
                        </table>
                        <table width='100%'  border=1>

                        <tbody>";
                        if ($report_type == 'P') {
                            $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        } else {
                            $party = $this->party_entry->query("SELECT p.*,pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        }

                        $counter = 0;

                        $sellerflag = 0;
                        $buyerflag = 0;

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[217] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['article_desc_' . $lang] . " </b> <br>" . "</td>"
                                . "</tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[218] . "</td>"
                                . "<td style='text-align: center;'> Rs.<b>" . $documents[0][0]['cons_amt'] . "/-</b> <br>" . "</td>"
                                . "</tr>";

                        $val_amt = $this->ApplicationSubmitted->query("select sum(rounded_val_amt) as market_val from ngdrstab_trn_valuation trnval
                                      join ngdrstab_trn_property_details_entry as prop on prop.val_id = trnval.val_id
                                      where trnval.token_no=$doc_token_no and trnval.delete_flag = 'N'");
                        if (!empty($val_amt)) {
                            $val = $val_amt[0][0]['market_val'];
                        }

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[219] . "</td>"
                                . "<td style='text-align: center;'> Rs.<b>" . $val . " </b>/- <br>" . "</td>"
                                . "</tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[220] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $aaa . " </b> <br>" . "</td>"
                                . "</tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[221] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $area . " </b> <br>" . "</td>"
                                . "</tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[222] . " </td>"
                                . "<td style='text-align: center;'> <b> </b> <br>" . "</td>"
                                . "</tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'> " . $rptlabels[223] . " </td>"
                                . "<td style='text-align: center;'>";

                        // for seller
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();

                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                            if (!empty($party_address)) {
                                $address = implode(', ', $party_address);
                            } else {
                                $address = $party1[0]['address_' . $lang];
                            }

                            $party_html .= "<p>" . $party1[0]['party_full_name_' . $lang] . " </b>, " . $address . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</p>";
                        }
                        $party_html .= "</td></tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[224] . "</td>"
                                . "<td style='text-align: center;'>";

                        // for buyer
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }

                            if (!empty($party_address)) {
                                $address2 = implode(', ', $party_address);
                            } else {
                                $address2 = $party1[0]['address_' . $lang];
                            }

                            $party_html .= "<p>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . $address2 . ", " . $party1[0]['village_name_' . $lang] . ' ' . $party1[0]['taluka_name_' . $lang] . ' ' . $party1[0]['district_name_' . $lang] . ' ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</p>";
                        }
                        $party_html .= "</td><tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[225] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['village_name_' . $lang] . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[226] . "</td>"
                                . "<td style='text-align: center;'> <b>" . date('d/m/Y', strtotime($documents[0][0]['exec_date'])) . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[227] . "</td>"
                                . "<td style='text-align: center;'> <b>" . date('d/m/Y', strtotime($documents[0][0]['doc_reg_date'])) . "</td>"
                                . "<tr>";
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[228] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no']. "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[229] . "</td>"
                                . "<td style='text-align: center;'> Rs.<b>" . $stamp . "/-</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[230] . "</td>"
                                . "<td style='text-align: center;'> Rs.<b>" . $reg . "/-</td>"
                                . "<tr>";

                        $party_html .= "</tbody> </table>";

                        $html_design .= $party_html;
                        //----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                        if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                            $this->create_pdf($html_design, 'Index2_4_' . $doc_token_no, 'A4', 'Index 2', $view_flag);
                        } else {
                            return $html_design;
                        }
                    } else {
                        return 'invalid data';
                    }
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    // index 3 report
    // index 1 report
    public function rpt_index3($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;
        switch ($state_id) {

            case 4:
                return $this->rpt_index3_4($doc_token_no, $view_flag, $report_type);
                break;

            case 36:
                return $this->rpt_index3_4($doc_token_no, $view_flag, $report_type);
                break;

            case 31:
                return $this->rpt_index3_4($doc_token_no, $view_flag, $report_type);
                break;

            case 20:
                return $this->rpt_index3_4($doc_token_no, $view_flag, $report_type);
                break;

            case 15:
                return $this->rpt_index3_4($doc_token_no, $view_flag, $report_type);
                break;

            case 27:
                return $this->rpt_index3_27($doc_token_no, $view_flag, $report_type);
                break;

            default :
                return $this->rpt_index3_27($doc_token_no, $view_flag, $report_type);
        }
    }

    public function rpt_index3_4($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 23)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
                            property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                            fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang			    
                            from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no

                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
			    left join ngdrstab_mst_article article on article.article_id=info.article_id
			    left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
			    left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
			    left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
			    left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                            left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                            where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                            group by
                            app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                            ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");


                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
                        foreach ($areawwww as $area1) {
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                        }
                    }

//                   pr($area);exit;

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
//                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $aaa = '';
//                pr($documents[0][0]['property_id']);exit;

                    if (is_numeric($documents[0][0]['property_id'])) {
//                    pr($documents[0][0]['property_id']);exit;
                        $property_id = $documents[0][0]['property_id'];
                        // pr($documents[0][0]['property_id']);exit;
                        // $property_id=219;
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_en
                    from ngdrstab_trn_behavioral_patterns as trn_beh
                    LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                    Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1
                         ");
                        foreach ($prop_add as $add) {
                            $aaa .= ' ' . $add[0]['pattern_desc_en'] . ":" . $add[0]['field_value_en'];
                            //pr($add);exit;
                        }
                        // pr($aaa);exit;
                    }


                    $token = substr($documents[0][0]['token_no'], -4);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }



                    $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                    $party_html = NULL;
                    if ($doc_token_no && $lang) {
                        $party_html = "<table width='100%'  border=1>
                    <thead>
                     <tr>
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>INDEX III </td>
                            <td style='text-align: center;width:30%'> OFFICE NAME: " . $documents[0][0]['office_name_' . $lang] . " </td>
                            
                        </tr>
                        
                    </thead>
                    </table>
                    <table width='100%'  border=1>
                     
                    <tbody>";
                        if ($report_type == 'P') {
                            $party = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                        } else {
                            $party = $this->party_entry->query("SELECT pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        }

                        $counter = 0;

                        $sellerflag = 0;
                        $buyerflag = 0;
                        // for seller
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }



                            $party_html .= "<tr>"
                                    //. "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤®à¥ƒà¤¤ï¿½?à¤¤ï¿½?à¤¯à¥‚à¤ªà¤¤ï¿½?à¤°à¤¾à¤•à¤°ï¿½?à¤¤ï¿½?à¤¯à¤¾à¤šà¥‡ à¤•à¤¿à¤‚à¤µà¤¾ à¤¦à¤¾à¤¤ï¿½?à¤¯à¤¾à¤šà¥‡ à¤¨à¤¾à¤µ" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤¨à¤¿à¤µà¤¾à¤¸à¤¸ï¿½?à¤¥à¤¾à¤¨" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤®à¥ƒà¤¤ï¿½?à¤¤ï¿½?à¤¯à¥‚à¤ªà¤¤ï¿½?à¤° à¤µï¿½?à¤¯à¤µà¤¸ï¿½?à¤¥à¤¾à¤ªà¤• à¤ªà¤¾à¤²à¤•à¤š à¤¨à¤¾à¤µ  " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤¨à¤¿à¤µà¤¾à¤¸à¤¸ï¿½?à¤¥à¤¾à¤¨" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤®à¥ƒà¤¤ï¿½?à¤¤ï¿½?à¤¯à¥‚à¤ªà¤¤ï¿½?à¤°à¤¾ à¤…à¤¨ï¿½?à¤µà¤¯à¥‡ à¤•à¤¿à¤‚à¤µà¤¾ à¤¦à¤¤ï¿½?à¤¤à¤• à¤˜à¥‡à¤£ï¿½?à¤¯à¤¾à¤šà¤¾ à¤ªï¿½?à¤°à¤¾à¤§à¤¿à¤•à¤¾à¤°  " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤¨à¤¿à¤µà¤¾à¤¸à¤¸ï¿½?à¤¥à¤¾à¤¨" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤œï¿½?à¤¯à¤¾ à¤®à¤¾à¤²à¤®à¤¤ï¿½?à¤¤à¥‡ à¤¸à¤‚à¤¬à¤‚à¤§à¥€ à¤¦à¤¸ï¿½?à¤¤ï¿½?à¤µà¤œ  à¤…à¤¸à¥‡à¤² à¤¤ï¿½?à¤¯à¤¾ à¤®à¤¾à¤²à¤®à¤¤ï¿½?à¤¤à¥‡à¤šà¥‡  à¤µà¤°ï¿½?à¤£à¤¨ " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤®à¥ƒà¤¤ï¿½?à¤¤ï¿½?à¤¯à¥‚à¤ªà¤¤ï¿½?à¤°à¤¾à¤•à¤°ï¿½?à¤¤ï¿½?à¤¯à¤¾à¤šà¥‡ à¤•à¤¿à¤‚à¤µà¤¾ à¤¦à¤¾à¤¤ï¿½?à¤¯à¤¾à¤šà¥‡ à¤®à¥ƒà¤¤ï¿½?à¤¯à¥‚ à¤¤à¤¾à¤°à¥€à¤–" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤®à¥ƒà¤¤ï¿½?à¤¤ï¿½?à¤¯à¥‚à¤ªà¤¤ï¿½?à¤¤ï¿½?à¤°à¤¾à¤šï¿½?à¤¯à¤¾ à¤•à¤¿à¤‚à¤µà¤¾ à¤¦à¤¤ï¿½?à¤¤à¤• à¤˜à¥‡à¤£ï¿½?à¤¯à¤¾à¤šà¤¾ à¤ªï¿½?à¤°à¤¾à¤§à¥€à¤•à¤° à¤ªà¤¤ï¿½?à¤¤ï¿½?à¤°à¤¾à¤šà¤¾ à¤¨à¥‹à¤‚à¤¦à¤£à¥€à¤šà¤¾ à¤¦à¤¿à¤¨à¤¾à¤‚à¤•  " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤–à¤‚à¤¡ à¤µ à¤ªà¥ƒà¤·ï¿½?à¤ " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "à¤¦à¤¸ï¿½?à¤¤ï¿½?à¤µà¤œ à¤•ï¿½?à¤°à¤®à¤¾à¤‚à¤•" . "</td>"
                                    //. "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";

                            $party_html .= "<tr>"
                                    //. "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(1)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(2)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(3)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(4)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(5)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(6)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(7)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(8)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(9)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(10)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(11)" . "</td>"
                                    //. "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";
                        }
                        // for buyer
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                        }
                        $party_html .= "<tr>"
                                //. "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                //. "<td scope='row' style='text-align: center; font-weight:bold;'>" . "Purchaser/Buyer/Executor 2" . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b></td>"
                                . "<td style='text-align: center;'>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "/" . $dt . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "</tbody> </table>";

                        $html_design .= $party_html;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                        if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                            $this->create_pdf($html_design, 'index3_4_' . $doc_token_no, 'A4', 'Index 3', $view_flag);
                        } else {
                            return $html_design;
                        }
                    } else {
                        return 'invalid data';
                    }
                }
            }
        } catch (Exception $ex) {
            //pr($ex);
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    public function rpt_index3_27_old($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
                            property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                            fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang			    
                            from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no

                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
			    left join ngdrstab_mst_article article on article.article_id=info.article_id
			    left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
			    left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
			    left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
			    left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                            left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                            where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                            group by
                            app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                            ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");

                $receipt_number = '';
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                foreach ($receipt_no as $recno) {
                    $receipt_number = $recno[0]['receipt_number'];
                }
                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
                        foreach ($areawwww as $area1) {
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                        }
                    }

//                   pr($area);exit;

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
//                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $aaa = '';
//                pr($documents[0][0]['property_id']);exit;

                    if (is_numeric($documents[0][0]['property_id'])) {
//                    pr($documents[0][0]['property_id']);exit;
                        $property_id = $documents[0][0]['property_id'];
                        // pr($documents[0][0]['property_id']);exit;
                        // $property_id=219;
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_en
                    from ngdrstab_trn_behavioral_patterns as trn_beh
                    LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                    Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1
                         ");
                        foreach ($prop_add as $add) {
                            $aaa .= ' ' . $add[0]['pattern_desc_en'] . ":" . $add[0]['field_value_en'];
                            //pr($add);exit;
                        }
                        // pr($aaa);exit;
                    }


                    $token = substr($documents[0][0]['token_no'], -4);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }



                    $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                    $party_html = NULL;
                    if ($doc_token_no && $lang) {

                        $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                        $bar_qr = '';
                        if (!empty($regconf)) {
                            if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                            } else {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                            }
                        }

                        $party_html = "<table><tr><td>" . $bar_qr . "</td></tr></table>";

                        $party_html = "<table width='100%'  border=1>
                    <thead>
                     <tr>
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>INDEX III </td>
                          <td style='text-align: left;width:30%'>OFFICE NAME: : " . $documents[0][0]['office_name_' . $lang] . "<br>
                                  Receipt No:- " . $receipt_number . " <br>
                                  Doc Reg.NO:- " . $documents[0][0]['doc_reg_no'] . " 
                              </td>    
                            
                        </tr>
                        
                    </thead>
                    </table>
                    <table width='100%'  border=1>
                     
                    <tbody>";
                        if ($report_type == 'P') {
                            $party = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                        } else {
                            $party = $this->party_entry->query("SELECT pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        }

                        $counter = 0;

                        $sellerflag = 0;
                        $buyerflag = 0;
                        // for seller
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }



                            $party_html .= "<tr>"
                                    //. "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "मृत�?त�?यूपत�?राकर�?त�?याचे किंवा दात�?याचे नाव" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "निवासस�?थान" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "मृत�?त�?यूपत�?र व�?यवस�?थापक पालकच नाव  " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "निवासस�?थान" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "मृत�?त�?यूपत�?रा अन�?वये किंवा दत�?तक घेण�?याचा प�?राधिकार  " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "निवासस�?थान" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "ज�?या मालमत�?ते संबंधी दस�?त�?वज  असेल त�?या मालमत�?तेचे  वर�?णन " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "मृत�?त�?यूपत�?राकर�?त�?याचे किंवा दात�?याचे मृत�?यू तारीख" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "मृत�?त�?यूपत�?त�?राच�?या किंवा दत�?तक घेण�?याचा प�?राधीकर पत�?त�?राचा नोंदणीचा दिनांक  " . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "खंड व पृष�?ठ" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "दस�?त�?वज क�?रमांक" . "</td>"
                                    //. "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";

                            $party_html .= "<tr>"
                                    //. "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(1)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(2)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(3)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(4)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(5)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(6)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(7)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(8)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(9)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(10)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(11)" . "</td>"
                                    //. "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";
                        }
                        // for buyer
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                        }
                        $party_html .= "<tr>"
                                //. "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                //. "<td scope='row' style='text-align: center; font-weight:bold;'>" . "Purchaser/Buyer/Executor 2" . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b></td>"
                                . "<td style='text-align: center;'>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "/" . $dt . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "</tbody> </table>";

                        $html_design .= $party_html;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                        if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                            $this->create_pdf($html_design, 'index3_27_' . $doc_token_no, 'A4', 'Index 3');
                        } else {
                            return $html_design;
                        }
                    } else {
                        return 'invalid data';
                    }
                }
            }
        } catch (Exception $ex) {
            //pr($ex);
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    public function rpt_index3_27($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') { //for MH state
        try {
            $this->loadModel('conf_reg_bool_info');
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
                            property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                            fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang			    
                            from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no

                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
			    left join ngdrstab_mst_article article on article.article_id=info.article_id
			    left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
			    left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
			    left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
			    left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                            left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                            where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                            group by
                            app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                            ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");

                $receipt_number = '';
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                foreach ($receipt_no as $recno) {
                    $receipt_number = $recno[0]['receipt_number'];
                }
                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
                        foreach ($areawwww as $area1) {
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                        }
                    }

//                   pr($area);exit;

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
//                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $aaa = '';
//                pr($documents[0][0]['property_id']);exit;

                    if (is_numeric($documents[0][0]['property_id'])) {
//                    pr($documents[0][0]['property_id']);exit;
                        $property_id = $documents[0][0]['property_id'];
                        // pr($documents[0][0]['property_id']);exit;
                        // $property_id=219;
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_en
                    from ngdrstab_trn_behavioral_patterns as trn_beh
                    LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                    Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1
                         ");
                        foreach ($prop_add as $add) {
                            $aaa .= ' ' . $add[0]['pattern_desc_en'] . ":" . $add[0]['field_value_en'];
                            //pr($add);exit;
                        }
                        // pr($aaa);exit;
                    }


                    $token = substr($documents[0][0]['token_no'], -4);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }



                    $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                    $party_html = NULL;
                    if ($doc_token_no && $lang) {

                        $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                        $bar_qr = '';
                        if (!empty($regconf)) {
                            if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                            } else {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                            }
                        }

                        $party_html = "<table><tr><td>" . $bar_qr . "</td></tr></table>";

                        $party_html = "<table width='100%'  border=1>
                    <thead>
                     <tr>
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>" . $rptlabels[317] . "</td>
                          <td style='text-align: left;width:30%'>" . $rptlabels[316] . " : " . $documents[0][0]['office_name_' . $lang] . "<br>
                                   $rptlabels[318] :- " . $receipt_number . " <br>
                                   $rptlabels[319] :- " . $documents[0][0]['doc_reg_no'] . " 
                              </td>    
                            
                        </tr>
                        
                    </thead>
                    </table>
                    <table width='100%'  border=1>
                     
                    <tbody>";
                        if ($report_type == 'P') {
                            $party = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                        } else {
                            $party = $this->party_entry->query("SELECT pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        }

                        $counter = 0;

                        $sellerflag = 0;
                        $buyerflag = 0;
                        // for seller
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }



                            $party_html .= "<tr>"
                                    //. "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[306] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[307] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[308] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[307] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[309] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[307] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[310] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[311] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[312] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[313] . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[314] . "</td>"
                                    //. "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";

                            $party_html .= "<tr>"
                                    //. "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(1)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(2)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(3)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(4)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(5)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(6)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(7)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(8)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(9)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(10)" . "</td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . "(11)" . "</td>"
                                    //. "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";
                        }
                        // for buyer
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                        }
                        $party_html .= "<tr>"
                                //. "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                //. "<td scope='row' style='text-align: center; font-weight:bold;'>" . "Purchaser/Buyer/Executor 2" . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b></td>"
                                . "<td style='text-align: center;'>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> " . $rptlabels[320] . ":</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "/" . $dt . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "</tbody> </table>";

                        $html_design .= $party_html;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                        if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                            $this->create_pdf($html_design, 'index3_27_' . $doc_token_no, 'A4', 'Index 3');
                        } else {
                            return $html_design;
                        }
                    } else {
                        return 'invalid data';
                    }
                }
            }
        } catch (Exception $ex) {
            //pr($ex);
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    // index 4 report

    public function rpt_index4($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        $state_id = $this->Auth->user('state_id');
        $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
        $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type;
        switch ($state_id) {
            case 4:
                return $this->rpt_index4_4($doc_token_no, $view_flag, $report_type);
                break;

            case 36:
                return $this->rpt_index4_4($doc_token_no, $view_flag, $report_type);
                break;

            case 31:
                return $this->rpt_index4_4($doc_token_no, $view_flag, $report_type);
                break;

            case 20:
                return $this->rpt_index4_4($doc_token_no, $view_flag, $report_type);
                break;

            case 15:
                return $this->rpt_index4_4($doc_token_no, $view_flag, $report_type);
                break;

            case 27:
                return $this->rpt_index4_27($doc_token_no, $view_flag, $report_type);
                break;

            default :
                return $this->rpt_index4_27($doc_token_no, $view_flag, $report_type);
        }
    }

    public function rpt_index4_4($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 24)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
                            property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                            fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang			    
                            from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no

                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
			    left join ngdrstab_mst_article article on article.article_id=info.article_id
			    left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
			    left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
			    left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
			    left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                            left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                            where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                            group by
                            app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                            ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");


                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
                        foreach ($areawwww as $area1) {
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                        }
                    }

//                   pr($area);exit;

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
//                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $aaa = '';
//                pr($documents[0][0]['property_id']);exit;

                    if (is_numeric($documents[0][0]['property_id'])) {
//                    pr($documents[0][0]['property_id']);exit;
                        $property_id = $documents[0][0]['property_id'];
                        // pr($documents[0][0]['property_id']);exit;
                        // $property_id=219;
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_en
                    from ngdrstab_trn_behavioral_patterns as trn_beh
                    LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                    Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1
                         ");
                        foreach ($prop_add as $add) {
                            $aaa .= ' ' . $add[0]['pattern_desc_en'] . ":" . $add[0]['field_value_en'];
                            //pr($add);exit;
                        }
                        // pr($aaa);exit;
                    }


                    $token = substr($documents[0][0]['token_no'], -4);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }



                    $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                    $party_html = NULL;
                    if ($doc_token_no && $lang) {
                        $party_html = "<table width='100%'  border=1>
                    <thead>
                     <tr>
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>INDEX IV </td>
                            <td style='text-align: center;width:30%'>Office Name: " . $documents[0][0]['office_name_' . $lang] . " </td>
                            
                        </tr>
                        
                    </thead>
                    </table>
                    <table width='100%'  border=1>
                     
                    <tbody>";
                        if ($report_type == 'P') {
                            $party = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                        } else {
                            $party = $this->party_entry->query("SELECT pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        }

                        $counter = 0;

                        $sellerflag = 0;
                        $buyerflag = 0;
                        // for seller
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }



                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>Seller/Executor /Vendor</td>"
                                    . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";
                        }
                        // for buyer
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                        }
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>Purchaser/Buyer/Executor 2</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>Article</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['article_desc_' . $lang] . " </b> <br>" . "</td>"
                                . "</tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>Registration Date</td>"
                                . "<td style='text-align: center;'> <b>" . date('d/m/Y', strtotime($documents[0][0]['doc_reg_date'])) . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>Sr.No and Year</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "/" . $dt . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>Documents Registration No</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>Remark</td>"
                                //. "<td style='text-align: center;'> <b>" .$documents[0][0]['doc_reg_no']. "</td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<tr>";


                        $party_html .= "</tbody> </table>";

                        $html_design .= $party_html;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                        if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                            $this->create_pdf($html_design, 'Index4_4_' . $doc_token_no, 'A4', 'Index 4', $view_flag);
                        } else {
                            return $html_design;
                        }
                    } else {
                        return 'invalid data';
                    }
                }
            }
        } catch (Exception $ex) {
            //pr($ex);
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    public function rpt_index4_27_old($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 24)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
                            property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                            fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang			    
                            from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no

                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
			    left join ngdrstab_mst_article article on article.article_id=info.article_id
			    left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
			    left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
			    left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
			    left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                            left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                            where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                            group by
                            app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                            ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");
                $receipt_number = '';
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                foreach ($receipt_no as $recno) {
                    $receipt_number = $recno[0]['receipt_number'];
                }

                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
                        foreach ($areawwww as $area1) {
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                        }
                    }

//                   pr($area);exit;

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
//                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $aaa = '';
//                pr($documents[0][0]['property_id']);exit;

                    if (is_numeric($documents[0][0]['property_id'])) {
//                    pr($documents[0][0]['property_id']);exit;
                        $property_id = $documents[0][0]['property_id'];
                        // pr($documents[0][0]['property_id']);exit;
                        // $property_id=219;
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_en
                    from ngdrstab_trn_behavioral_patterns as trn_beh
                    LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                    Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1
                         ");
                        foreach ($prop_add as $add) {
                            $aaa .= ' ' . $add[0]['pattern_desc_en'] . ":" . $add[0]['field_value_en'];
                            //pr($add);exit;
                        }
                        // pr($aaa);exit;
                    }


                    $token = substr($documents[0][0]['token_no'], -4);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }



                    $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                    $party_html = NULL;
                    if ($doc_token_no && $lang) {

                        $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                        $bar_qr = '';
                        if (!empty($regconf)) {
                            if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                            } else {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                            }
                        }

                        $party_html = "<table><tr><td>" . $bar_qr . "</td></tr></table>";

                        $party_html .= "<table width='100%'  border=1>
                    <thead>
                     <tr>
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>" . $rptlabels[231] . " </td>
                            <td style='text-align: left;width:30%'>" . $rptlabels[232] . ": " . $documents[0][0]['office_name_' . $lang] . "<br>
                                  Receipt No:- " . $receipt_number . " <br>
                                  Doc Reg.NO:- " . $documents[0][0]['doc_reg_no'] . " 
                              </td>      
                            
                        </tr>
                        
                    </thead>
                    </table>
                    <table width='100%'  border=1>
                     
                    <tbody>";
                        if ($report_type == 'P') {
                            $party = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                        } else {
                            $party = $this->party_entry->query("SELECT pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        }

                        $counter = 0;

                        $sellerflag = 0;
                        $buyerflag = 0;
                        // for seller
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }



                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[233] . "</td>"
                                    . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";
                        }
                        // for buyer
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                        }
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[234] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[235] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['article_desc_' . $lang] . " </b> <br>" . "</td>"
                                . "</tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[236] . "</td>"
                                . "<td style='text-align: center;'> <b>" . date('d/m/Y', strtotime($documents[0][0]['doc_reg_date'])) . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[237] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "/" . $dt . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[238] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[239] . "</td>"
                                //. "<td style='text-align: center;'> <b>" .$documents[0][0]['doc_reg_no']. "</td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<tr>";


                        $party_html .= "</tbody> </table>";

                        $html_design .= $party_html;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                        if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                            $this->create_pdf($html_design, 'Index4_4_' . $doc_token_no, 'A4', 'Index 4', $view_flag);
                        } else {
                            return $html_design;
                        }
                    } else {
                        return 'invalid data';
                    }
                }
            }
        } catch (Exception $ex) {
            //pr($ex);
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    public function rpt_index4_27($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {
            $this->loadModel('conf_reg_bool_info');
            $this->autoRender = FALSE;
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $doc_lang = $this->Session->read("doc_lang");
            $doc_token_no = isset($this->request->data['doc_token_no']) ? $this->request->data['doc_token_no'] : $doc_token_no; // Get DOcument No
            $doc_token_no = base64_decode($doc_token_no);
            $report_type = isset($this->request->data['report_type']) ? $this->request->data['report_type'] : $report_type; // Report Type Full / Partial 
            $this->loadModel('genernal_info');
            $this->loadModel('valuation_details');
            if (is_integer((int) $doc_token_no) && $this->genernal_info->find('count', array('conditions' => array('token_no' => $doc_token_no))) == 1) {
                array_map([$this, 'loadModel'], ['ReceiptCounter', 'payment', 'RegInstructionSummary2', 'ReportLabel', 'party_entry', 'TrnBehavioralPatterns', 'witness', 'regconfig', 'ApplicationSubmitted']);

//get Report Label
                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 24)));
//get Report Basic Data
                $rpt_data = $this->party_entry->Query("select app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

                $documents = $this->ApplicationSubmitted->query("select app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_$lang,
                            property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id,
                            fee.cons_amt,round(sum(trn_val.rounded_val_amt)) as market_value,fee_cal.final_value,ar_fee.fee_item_desc_$lang			    
                            from ngdrstab_trn_application_submitted as app
                            LEFT JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                            LEFT JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id 
                            LEFT JOIN ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no

                            LEFT JOIN ngdrstab_conf_admblock7_village_mapping as village ON village.village_id=property.village_id
			    left join ngdrstab_mst_article article on article.article_id=info.article_id
			    left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
			    left join ngdrstab_trn_fee_calculation_detail fee_cal on fee_cal.fee_calc_id=fee.fee_calc_id
			    left join ngdrstab_mst_article_fee_items  ar_fee on ar_fee.fee_item_id=fee_cal.fee_item_id
			    left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                            left join ngdrstab_trn_valuation_details val_det on val_det.val_id=trn_val.val_id
                            where fee.delete_flag='N' and ar_fee.fee_param_type_id=2 and app.token_no=$doc_token_no
                            group by
                            app.token_no,app.doc_reg_no,app.doc_reg_date,office.office_name_$lang,info.exec_date,village.village_name_$lang,article.article_desc_en,fee.cons_amt,fee_cal.final_value,
                            ar_fee.fee_item_desc_en,property.property_id,ar_fee.fee_item_id,trn_val.val_id,article.article_id,val_det.rule_id");
                $receipt_number = '';
                $receipt_no = $this->ReceiptCounter->query("select receipt_number from ngdrstab_trn_receipt_counter  where token_no=$doc_token_no");
                foreach ($receipt_no as $recno) {
                    $receipt_number = $recno[0]['receipt_number'];
                }

                if (!empty($documents)) {


                    $val_id = 0;
                    $article_id = 0;
                    $rul_id = 0;
                    if (is_numeric($documents[0][0]['val_id'])) {
                        $val_id = $documents[0][0]['val_id'];
                    }

                    $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                    foreach ($valuation_details as $vdetails) {
                        $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
                        foreach ($areawwww as $area1) {
                            if ($area1[0]['area_field_flag'] == 'Y') {
                                $area = $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
                            };
                        }
                    }

//                   pr($area);exit;

                    $stamp = 0;
                    $reg = 0;
                    if (!empty($documents)) {
                        foreach ($documents as $fee) {
//                        pr($fee);exit;
                            if ($fee[0]['fee_item_id'] == 1) {
                                $reg = $fee[0]['final_value'];
                            }

                            if ($fee[0]['fee_item_id'] == 2) {
                                $stamp = $fee[0]['final_value'];
                            }
                        }
                    }

                    $aaa = '';
//                pr($documents[0][0]['property_id']);exit;

                    if (is_numeric($documents[0][0]['property_id'])) {
//                    pr($documents[0][0]['property_id']);exit;
                        $property_id = $documents[0][0]['property_id'];
                        // pr($documents[0][0]['property_id']);exit;
                        // $property_id=219;
                        $prop_add = $this->ApplicationSubmitted->query("select trn_beh.field_id,mst_beh.pattern_desc_$lang,trn_beh.field_value_en
                    from ngdrstab_trn_behavioral_patterns as trn_beh
                    LEFT JOIN ngdrstab_conf_behavioral_patterns as mst_beh on mst_beh.field_id=trn_beh.field_id
                    Where trn_beh.mapping_ref_val=$property_id and trn_beh.mapping_ref_id=1
                         ");
                        foreach ($prop_add as $add) {
                            $aaa .= ' ' . $add[0]['pattern_desc_en'] . ":" . $add[0]['field_value_en'];
                            //pr($add);exit;
                        }
                        // pr($aaa);exit;
                    }


                    $token = substr($documents[0][0]['token_no'], -4);
                    $dt = '';
                    if (!empty($documents[0][0]['doc_reg_date'])) {
                        $dt = substr(0, 1);
                    }



                    $html_design = "";
//----------------------------------------------------------------get Party Details----------------------------------------------------------------------            
                    $party_html = NULL;
                    if ($doc_token_no && $lang) {

                        $regconf = $this->regconfig->find("all", array('conditions' => array('reginfo_id' => 36, 'is_boolean' => 'Y', 'conf_bool_value' => 'Y')));
                        $bar_qr = '';
                        if (!empty($regconf)) {
                            if ($regconf[0]['regconfig']['info_value'] == 'QR') {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "' type='" . $regconf[0]['regconfig']['info_value'] . "' class='barcode' size='0.8' error='M' /></td></tr>";
                            } else {
                                $bar_qr = " <tr><td><barcode code='" . $rpt_data[0][0]['doc_reg_no'] . "'class='barcode'   type='CODABAR' /></td></tr>";
                            }
                        }

                        $party_html = "<table><tr><td>" . $bar_qr . "</td></tr></table>";

                        $party_html .= "<table width='100%'  border=1>
                    <thead>
                     <tr>
                            <td style='text-align: center;width:30%'>" . date('l , d F ,Y h:s A') . "</td> 
                            <td style='text-align: center;width:30%'>" . $rptlabels[231] . " </td>
                            <td style='text-align: left;width:30%'>" . $rptlabels[232] . ": " . $documents[0][0]['office_name_' . $lang] . "<br>
                                  Receipt No:- " . $receipt_number . " <br>
                                  Doc Reg.NO:- " . $documents[0][0]['doc_reg_no'] . " 
                              </td>      
                            
                        </tr>
                        
                    </thead>
                    </table>
                    <table width='100%'  border=1>
                     
                    <tbody>";
                        if ($report_type == 'P') {
                            $party = $this->party_entry->query("SELECT p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=? AND biometric_upload=? AND photo_upload=?", array($doc_token_no, date('Y-m-d'), date('Y-m-d')));
                        } else {
                            $party = $this->party_entry->query("SELECT pt.party_type_flag,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                                    . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                                    . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                                    . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                                    . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                                    . " where p.token_no=?", array($doc_token_no));
                        }

                        $counter = 0;

                        $sellerflag = 0;
                        $buyerflag = 0;
                        // for seller
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 0 && $sellerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }



                            $party_html .= "<tr>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                    . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[233] . "</td>"
                                    . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                    . "</tr>";
                        }
                        // for buyer
                        foreach ($party as $party1) {
                            if ($party1[0]['party_type_flag'] == 1 && $buyerflag == 0) {
                                $sellerflag = 1;
                            } else {
                                continue;
                            }

                            $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party1[0]['party_id'], $doc_token_no, '2', $doc_lang);
                            $party_address = array();
                            foreach ($tmp_party_address as $tmp_party_address) {
                                array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                            }
                        }
                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[234] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $party1[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party1[0]['village_name_' . $lang] . ', ' . $party1[0]['taluka_name_' . $lang] . ', ' . $party1[0]['district_name_' . $lang] . ', ' . $party1[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party1[0]['pan_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;width:10%'> " . ++$counter . " </td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[235] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['article_desc_' . $lang] . " </b> <br>" . "</td>"
                                . "</tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[236] . "</td>"
                                . "<td style='text-align: center;'> <b>" . date('d/m/Y', strtotime($documents[0][0]['doc_reg_date'])) . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[237] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "/" . $dt . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[238] . "</td>"
                                . "<td style='text-align: center;'> <b>" . $documents[0][0]['doc_reg_no'] . "</td>"
                                . "<tr>";

                        $party_html .= "<tr>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . ++$counter . "</td>"
                                . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $rptlabels[239] . "</td>"
                                //. "<td style='text-align: center;'> <b>" .$documents[0][0]['doc_reg_no']. "</td>"
                                . "<td style='text-align: center;'> <b> </td>"
                                . "<tr>";


                        $party_html .= "</tbody> </table>";

                        $html_design .= $party_html;
//----------------------------------------------------------------Instruction-------------------------------------------------------------------------------------------------------            

                        if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D' || strtoupper($view_flag) == 'I') {
                            $this->create_pdf($html_design, 'Index4_4_' . $doc_token_no, 'A4', 'Index 4', $view_flag);
                        } else {
                            return $html_design;
                        }
                    } else {
                        return 'invalid data';
                    }
                }
            }
        } catch (Exception $ex) {
            //pr($ex);
            $this->Session->setFlash('Sorry! Error in generating summary 2');
        }
    }

    //certified copy payment receipt//
    public function cert_copy_payment_receipt($payment_id = NULL, $water_mark = "") {
        try {
            $this->autoRender = FALSE;
            $lang = $this->Session->read("sess_langauge");

            $doc_token_no = NULL;
            if (is_numeric($payment_id)) {
                //load Models
                array_map([$this, 'loadModel'], ['payment', 'PaymentPreference', 'num_to_words', 'valuation']);
                $pmt_dtl = $this->payment->get_payment_detail($doc_token_no, $payment_id, $lang);
                $acc_head_detail = $this->payment->get_payment_acc_head_detail($doc_token_no, $payment_id);

                // $acc_head_detail= $this->payment->get_account_wise_payment($doc_token_no);

                $arr = array_map(function($el) {
                    return $el['item']['fee_item_desc_en'];
                }, $acc_head_detail);

                if ($pmt_dtl && $acc_head_detail) {
                    $html_design = "<h1 align=center> CHALLEN <br/></h1> "
                            . "<table width=100% >"
                            . "<tr> <td width=50%> <b>Receipt No. : </b>" . (($acc_head_detail[0]['receipt']['receipt_id']) ? $acc_head_detail[0]['receipt']['receipt_id'] : $pmt_dtl['payment']['payment_id']) . "</td><td width=50% align='right'> <b>MTR Form Number -6</b></td> </tr>"
                            . "</table>"
                            . "<style>table {border-collapse: collapse;} td{padding:5px;}</style>"
                            . "<table width=100% border=1>"
                            . "<tr> <td width=50%> <b>GRN : </b>" . (($pmt_dtl['payment']['grn_no']) ? $pmt_dtl['payment']['grn_no'] : '-') . "</td><b>BARCODE : </b>" . "<td> <b>Date : </b> " . date('d-m-Y', strtotime(($pmt_dtl['payment']['pdate']) ? $pmt_dtl['payment']['pdate'] : date("Y-m-d"))) . "</td> </tr>"
                            . "</table>";

                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td width=50%> <b>Department : </b> Inspector General of Registration</td> <td align=center> <h3> Payment Detail </td> </tr>"
                            . "<tr> <td rowspan=2> <b>Type of Payment : </b> <br><ul><li>" . implode('<li>', $arr) . "</ul></td> <td> <b> TAX ID(if Any)</b>" . "</td></tr>"
                            . "<tr> <td> <b>PAN No.(if Applicable)<b>" . "</td></tr>"
                            . "</table><br/>";

                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td width=50%> <b>Office Name : </b>" . $pmt_dtl['office']['office_name_en'] . "</td> <td> <b> Full Name : </b>" . $pmt_dtl['payment']['payee_fname_en'] . ' ' . $pmt_dtl['payment']['payee_mname_en'] . ' ' . $pmt_dtl['payment']['payee_lname_en'] . " </td> </tr>"
                            . "<tr> <td> <b>Year : <b>" . "</td> <td> <b> Address : </b>" . " </td> </tr>"
                            . "</table> <br/>";
                    // for Account Head Detail
                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td width=50% align=center> <b>Account Head Details <b></td> <td align=center> <b> Amount in Rupees </b></td></tr>";
                    $total = 0;

                    foreach ($acc_head_detail as $ahd) {
                        $html_design .= "<tr> <td> <b>" . $ahd['item']['fee_item_desc_en'] . " <b>" . "</td> <td align=right> &#8377;" . $this->valuation->format_money_india(number_format((float) $ahd['payment']['pamount'], 2, '.', '')) . " </td></tr>";
                        $total += $ahd['payment']['pamount'];
                    }

                    $html_design .= "<tr> <td align=center> <b>Total <b> </td> <td align=right> <b> &#8377;" . $this->valuation->format_money_india(number_format((float) $total, 2, '.', '')) . "</b> </td> </tr>"
                            . "<tr> <td colspan=2> <b>Amount in Words : </b> " . $this->num_to_words->in_words($total) . "Rupees only. </td> </tr>"
                            . "</table> <br/>";

                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td> <b>Remarks (if Any) : </b> <br>" . "</td></tr>"
                            . "</table> <br/>";

                    $payment_detail = "<table width=100% border=1>"
                            . "<tr> <td colspan=2 align=center><b>Cheque/DD Details</b></tr>"
                            . "<tr> <td>Cheque/DD No</td> <td>" . "</td> </tr>"
                            . "<tr> <td>Name of Bank</td> <td align=center>" . (($pmt_dtl['bank']['bank_name_' . $lang]) ? $pmt_dtl['bank']['bank_name_' . $lang] : ' - ') . "</td> </tr>"
                            . "<tr> <td>Bank Branch</td> <td align=center>" . (($pmt_dtl['bank_branch']['branch_name_' . $lang]) ? $pmt_dtl['bank_branch']['branch_name_' . $lang] : ' - ') . "</td> </tr>"
                            . "</table>";

                    $receiving_bank = "<table width=100% border=1>"
                            . "<tr> <td width=25%><b>Bank CIN</b></td> <td width=30%>" . (($pmt_dtl['payment']['cin_no']) ? $pmt_dtl['payment']['cin_no'] : " - " ) . "</td> <td width=20%><b>REF No.</b></td width=25%> <td>" . "</td> </tr>"
                            . "<tr> <td colspan=2>Date</td> <td colspan=2>" . date('d-m-Y', strtotime(($pmt_dtl['payment']['pdate']) ? $pmt_dtl['payment']['pdate'] : date("Y-m-d"))) . "</td> </tr>"
                            . "<tr> <td colspan=2>Bank Branch</td> <td colspan=2>" . "</td> </tr>"
                            . "<tr> <td colspan=2>Scroll No., Date</td> <td colspan=2>" . "</td> </tr>"
                            . "</table>";
                    $html_design .= "<table width=100% border=1>"
                            . "<tr> <td align=center> <b>Payment Detail<b></td> <td align=center> <b>FOR USE IN RECEIVING BANK  </b></td> </tr>";
                    $html_design .= ""
                            . "<tr> <td width=50%>" . $payment_detail . "</td> <td width=50%>" . $receiving_bank . "</td> </tr>"
                            . "</table>";

                    $this->create_pdf($html_design, "doc_payment_receipt_" . $payment_id, 'A4', $water_mark);
                } else {
                    return 'no record found';
                }
            } else {
                return 'Invalid Payment Id';
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function document_status() {
        array_map([$this, 'loadModel'], ['office']);
        $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
        $office_id = $this->Auth->User('office_id');

        $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
        $officename = $officename[0][0]['office_name_' . $lang];
        $this->set('officename', $officename);
        $this->set('htmldesign', null);
        $this->set('actiontype', NULL);
        $fieldlist = array();
        $fieldlist['from']['text'] = 'is_required';
        $fieldlist['to']['text'] = 'is_required';

        $this->set('fieldlist', $fieldlist);
        $this->set('result_codes', $this->getvalidationruleset($fieldlist));


        if ($this->request->is('post')) {

            $errarr = $this->validatedata($this->request->data['document_status'], $fieldlist);
            //  pr($errarr);exit;
            if ($this->ValidationError($errarr)) {


                $from = $this->request->data['document_status']['from'];
                $to = $this->request->data['document_status']['to'];

                $result = $this->office->query("select count(A.last_status_id),B.document_status_desc_en from ngdrstab_trn_generalinformation A 
inner join  ngdrstab_mst_document_status_description B on B.id= A.last_status_id  WHERE  Date(A.created) between '$from' and '$to' and A.office_id = '$office_id' group by A.last_status_id ,B.document_status_desc_en ");
                $data = array();
                foreach ($result as $key => $value) {

                    $data[$value[0]['document_status_desc_en']] = $value[0]['count']; //             
                }
                if (!isset($data['Registration Process'])) {
                    $data['Registration Process'] = 0;
                }
                if (!isset($data['Submitted'])) {
                    $data['Submitted'] = 0;
                }
                if (!isset($data['Data Entry'])) {
                    $data['Data Entry'] = 0;
                }
                if (!isset($data['Registered'])) {
                    $data['Registered'] = 0;
                }
                if ($result) {

                    $html_design = "<style>td{padding:5px;} </style>"
                            . "<h2 align=center style='color:#641E16;'> Status for " . $officename . " </h2>"
                            . "<hr style color:red;>"
                            . "<table  align=center border=0 width=100%><tr> <td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                            . "<br/>"
                            . "<table border=1 style='border-collapse:collapse;' width=100%>"
                            . "<tr>"
                            . "<th style='text-align:center;' >Document Status</th><th style='text-align:center;'>Count</th>"
                            . "</tr><tr>"
                            . "<td style='text-align:center;'>Data Entry</td><td style='text-align:center;'>" . $data['Data Entry'] . "</td>"
                            . "</tr><tr>"
                            . "<td style='text-align:center;'>Submitted</td><td style='text-align:center;'>" . $data['Submitted'] . "</td>"
                            . "</tr><tr>"
                            . "<td style='text-align:center;'>Registration In Proccess</td><td style='text-align:center;'>" . $data['Registration Process'] . "</td>"
                            . "</tr><tr>"
                            . "<td style='text-align:center;'>Registered</td><td style='text-align:center;'>" . $data['Registered'] . "</td>"
                            . "</tr>"; //                    }

                    $html_design .= "</table>";
                    $this->set('htmldesign', $html_design);
                    if ($_POST['actiontype'] == 1) {
                        $this->set('actiontype', NULL);
                        $this->create_pdf($html_design, 'Document Status', 'A4-L', '');
                    }
                }
            }
        }
    }

    public function rpt_register_deed() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
//            $office_list = ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => 'office_name_' . $lang));
//            $this->set('office_list', $office_list);
            if ($this->request->is('post')) {
                $this->Session->write('rpt_register_deed', $this->request->data['rpt_register_deed']);
                $this->request->data['rpt_register_deed'] = $this->request->data['rpt_register_deed'];
                $state_id = $this->Auth->user('state_id');

                $this->registerd_deed($this->request->data['rpt_register_deed']);
            }
        } catch (Exception $ex) {
            
        }
    }

    public function registerd_deed($frmData = NULL) {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_register_deed']) ? $this->request->data['rpt_register_deed'] : $frmData;
            $stateid = $this->Auth->User("state_id");
            // $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 24)));
            $user_id = $this->Auth->user('user_id');
            $user_type_flag = $this->Session->read("session_usertype");



            if (isset($frmData['from']) && isset($frmData['to'])) {
                $from = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));

                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {

                    $deed_writer = $this->genernal_info->Query("select office.office_name_en,(select count(*) from ngdrstab_trn_generalinformation gen join ngdrstab_mst_user_citizen citi on citi.user_id=gen.user_id  where  gen.last_status_id=3  and citi.deed_write_accept_flag='Y' and  gen.office_id = gen1.office_id) as deed_inprocess,
                                                            (select count(*) from ngdrstab_trn_generalinformation gen join ngdrstab_mst_user_citizen citi on citi.user_id=gen.user_id   where  gen.last_status_id=4  and citi.deed_write_accept_flag='Y' and  gen.office_id = gen1.office_id) as deed_registerd ,
                                                            (select count(*) from ngdrstab_trn_generalinformation gen join ngdrstab_mst_user_citizen citi on citi.user_id=gen.user_id  where  gen.last_status_id=3  and citi.deed_write_accept_flag='N' and deed_writer='N' and  gen.office_id = gen1.office_id) as citizen_inprocess,
                                                            (select count(*) from ngdrstab_trn_generalinformation gen join ngdrstab_mst_user_citizen citi on citi.user_id=gen.user_id  where  gen.last_status_id=4  and citi.deed_write_accept_flag='N' and deed_writer='N' and  gen.office_id = gen1.office_id) as citizen_registerd
                                                             from ngdrstab_trn_generalinformation gen1 
                                                             join ngdrstab_mst_office office on office.office_id=gen1.office_id 
                                                             group by office.office_name_en,gen1.office_id ");



                    if ($deed_writer) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center>  Registerd Document Summary </h2>"
                                . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['to'])) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>Sr.NO</th>"
                                . "<th style='text-align:center;'>Office Name</th>"
                                . "<th style='text-align:center;'>Total Registred</th>"
                                . "<th style='text-align:center;'>Total Inprogress</th>"
                                . "<th style='text-align:center;'>Citizen Registred</th>"
                                . "<th style='text-align:center;'>Citizen inprogress</th>"
                                . "</tr>";
                        $SrNo = 1;
                        $totalFees = 0;
                        foreach ($deed_writer as $cr) {
                            $cr = $cr[0];
                            $html_design .= "<tr>"
                                    . "<td align=center>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $cr['office_name_en'] . "</td>"
                                    . "<td style='text-align:center;'>" . $cr['deed_registerd'] . "</td>"
                                    . "<td style='text-align:center;'>" . $cr['deed_inprocess'] . "</td>"
                                    . "<td style='text-align:center;'>" . $cr['citizen_registerd'] . "</td>"
                                    . "<td style='text-align:center;'>" . $cr['citizen_inprocess'] . "</td>"
                                    . "</tr>";
                        }
                        $html_design .= "</table>";
                        //pr($html_design);exit;
                        $this->create_pdf($html_design, 'Deed Writer Register Document', 'A4-L', 'D');
                    } else {
                        echo 'No Data Found';
                    }
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function deed_writer_status() {
        array_map([$this, 'loadModel'], ['office']);
        $this->set('htmldesign', null);
        $this->set('actiontype', NULL);
        $this->set('hfname', NULL);

        $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
        $office_id = $this->Auth->User('office_id');

        $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
        $officename = $officename[0][0]['office_name_' . $lang];
        $this->set('officename', $officename);

        $deedwriter = ClassRegistry::init('CitizenUser')->find('list', array('fields' => array('user_id', 'full_name'), 'conditions' => array('deed_write_accept_flag' => 'Y', 'office_id' => $office_id), 'order' => array('full_name' => 'ASC')));
        $this->set('deedwriter', $deedwriter);
        $fieldlist = array();
        $fieldlist['from']['text'] = 'is_required';
        $fieldlist['to']['text'] = 'is_required';
        $fieldlist['full_name']['select'] = 'is_select_req';
        $this->set('fieldlist', $fieldlist);
        $this->set('result_codes', $this->getvalidationruleset($fieldlist));


        if ($this->request->is('post')) {
            $from = $this->request->data['deed_writer_status']['from'];
            $to = $this->request->data['deed_writer_status']['to'];
            $deed_user_id = $this->request->data['deed_writer_status']['full_name'];
            $deedwritername = $_POST['hfname'];
            $this->set('hfname', $deedwritername);

            $processdata = $this->office->query("select a.full_name,b.token_no,b.last_status_date 
from ngdrstab_trn_generalinformation b ,ngdrstab_mst_user_citizen a 
where b.last_status_id=3 and a.user_id=b.user_id and a.deed_write_accept_flag='Y'
and Date(b.last_status_date) between '$from' and '$to' and A.office_id = '$office_id'
and a.user_id='$deed_user_id'
 group by a.full_name,b.token_no,b.last_status_date");

            $registerdata = $this->office->query("select a.full_name,b.token_no,c.doc_reg_no,b.last_status_date
 from ngdrstab_trn_generalinformation b ,ngdrstab_mst_user_citizen a ,ngdrstab_trn_application_submitted c 
where b.last_status_id=4 and a.user_id=b.user_id and a.deed_write_accept_flag='Y' and c.token_no=b.token_no
and Date(b.last_status_date) between '$from' and '$to' and A.office_id = '$office_id'
and a.user_id='$deed_user_id'
group by a.full_name,b.token_no,c.doc_reg_no,b.last_status_date");

//            
            $html_design = "";
            $html_design1 = "";
            $html_design2 = "";


            if ($processdata) {
                $html_design1 = "<h4 align=center style='color:#641E16;'> Document in Process </h4>"
                        . "<table border=1 style='border-collapse:collapse;' width=100%>"
                        . "<tr>"
                        . "<th style='text-align:center;' >Sr.No</th>"
                        . "<th style='text-align:center;'>Token No</th>"
                        . "<th style='text-align:center;'>Date</th>"
                        . "</tr>";
                $SrNo = 1;
                foreach ($processdata as $rs) {
                    $SrNo = 1;
                    $html_design1 .= "<tr>"
                            . "<td style='text-align:center;'>" . $SrNo++ . "</td>"
                            . "<td style='text-align:center;'>" . $rs[0]['token_no'] . "</td>"
                            . "<td style='text-align:center;'>" . $rs[0]['last_status_date'] . "</td>"
                            . "</tr>";
                }
                $html_design1 .= "</table>";
            }
            if ($registerdata) {

                $html_design2 = "<h4 align=center style='color:#641E16;'> Registered Documents </h4>"
                        . "<table border=1 style='border-collapse:collapse;' width=100%>"
                        . "<tr>"
                        . "<th style='text-align:center;' >Sr.No</th>"
                        . "<th style='text-align:center;'>Registration No</th>"
                        . "<th style='text-align:center;'>Date</th>"
                        . "</tr>";
                $SrNo = 1;
                foreach ($registerdata as $rs1) {
                    $SrNo = 1;
                    $html_design2 .= "<tr>"
                            . "<td style='text-align:center;'>" . $SrNo++ . "</td>"
                            . "<td style='text-align:center;'>" . $rs1[0]['doc_reg_no'] . "</td>"
                            . "<td style='text-align:center;'>" . $rs1[0]['last_status_date'] . "</td>"
                            . "</tr>";
                }
                $html_design2 .= "</table>";
            }
            if ($html_design1 || $html_design2) {
                $html_design = "<style>td{padding:10px;} </style>"
                        . "<h2 align=center style='color:#641E16;'> Deed Writer Statistic at " . $officename . " </h2>"
                        . "<hr style color:red;>"
                        . "<h3 align=center style='color:#641E16;'> Deed Writer Name : " . $deedwritername . " </h3>"
                        . "<table  align=center border=0 width=100%><tr> <td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                        . "<table border=0 width=100%>"
                        . "<tr>"
                        //. "<td>Deed Writer Statistic at" . $officename . " </td><td>Deed Writer Name : " . $deedwritername . " </td>"
                        . "<td style='vertical-align:top'>" . $html_design1 . "</td><td>" . $html_design2 . "</td>"
                        . "</tr>"
                        . "</table>";

                $this->set('htmldesign', $html_design);
            } else {
                echo 'No Data Found';
            }
            if ($_POST['actiontype'] == 1) {
                $this->set('actiontype', NULL);
                $this->create_pdf($html_design, 'Document Status', 'A4-L', '');
            }
        }
    }

    public function rpt_register_doc_sro() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
//            $office_list = ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => 'office_name_' . $lang));
//            $this->set('office_list', $office_list);

            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
                $this->Session->write('rpt_register_doc_sro', $this->request->data['rpt_register_doc_sro']);
                $this->request->data['rpt_register_doc_sro'] = $this->request->data['rpt_register_doc_sro'];
                $state_id = $this->Auth->user('state_id');

                $this->registerd_doc_sro($this->request->data['rpt_register_doc_sro']);
            }
        } catch (Exception $ex) {
            
        }
    }

    public function registerd_doc_sro($frmData = NULL) {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_register_doc_sro']) ? $this->request->data['rpt_register_doc_sro'] : $frmData;
            $stateid = $this->Auth->User("state_id");
            // $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 24)));
            $user_id = $this->Auth->user('user_id');
            $officeid = $this->Auth->User("office_id");
            $user_type_flag = $this->Session->read("session_usertype");

            if (isset($frmData['from']) && isset($frmData['to'])) {
                $from = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));
//                $nextday = strftime("%Y-%m-%d", strtotime("$to +1 day"));
                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {

                    $doc_reg_sro = $this->payment->Query("select aps.final_stamp_date,app_dt.appointment_date,app_dt.sheduled_time,aps.doc_reg_date, aps.doc_reg_no,aps.token_no,office.office_name_en,SUM(pay.pamount) as total from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_payment_details pay on pay.token_no=aps.token_no
                                                           join ngdrstab_mst_office office on office.office_id=aps.office_id
                                                            join ngdrstab_trn_appointment_details app_dt on app_dt.token_no=aps.token_no
                                                           where aps.final_stamp_flag='Y' and DATE(aps.final_stamp_date) >='$from' and DATE(aps.final_stamp_date) <= '$to' and aps.office_id=$officeid group by aps.final_stamp_date,app_dt.appointment_date,app_dt.sheduled_time,aps.doc_reg_no,aps.token_no,office.office_name_en,aps.doc_reg_date order by office.office_name_en,aps.doc_reg_date,aps.doc_reg_no");
//                    pr($doc_reg_sro);exit;
                    if ($doc_reg_sro) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> Total Registerd Documents </h2>"
                                . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['to'])) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>Sr.NO</th>"
                                . "<th style='text-align:center;'>Office Name</th>"
                                . "<th style='text-align:center;'>Document Registration No</th>"
                                . "<th style='text-align:center;'>Document Registration Date</th>"
                                . "<th style='text-align:center;'>Document Registration Time</th>"
                                . "<th style='text-align:center;'>Appointment Date</th>"
                                . "<th style='text-align:center;'>Appointment Time</th>"
                                . "</tr>";
                        $SrNo = 1;
                        $totalFees = 0;
                        foreach ($doc_reg_sro as $cr) {
                            $cr = $cr[0];
                            $html_design .= "<tr>"
                                    . "<td align=center>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $cr['office_name_en'] . "</td>"
                                    . "<td style='text-align:center;'>" . $cr['doc_reg_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . date('d/m/Y', strtotime($cr['doc_reg_date'])) . "</td>"
                                    . "<td style='text-align:center;'>" . date('H:i:s a', strtotime($cr['final_stamp_date'])) . "</td>"
                                    . "<td style='text-align:center;'>" . date('d/m/Y ', strtotime($cr['appointment_date'])) . "</td>"
                                    . "<td style='text-align:center;'>" . $cr['sheduled_time'] . "</td>"
                                    . "</tr>";
                        }
                        $html_design .= "</table>";
//                        pr($html_design);exit;
                        $this->create_pdf($html_design, 'Total Register Document', 'A4-L', '');
                    } else {
                        echo 'No Data Found';
                    }
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function online_payment_summary() {
        try {
            array_map([$this, 'loadModel'], ['office']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office_id = $this->Auth->User('office_id');
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));



            if ($this->request->is('post')) {
                $from = $this->request->data['online_payment_summary']['from'];
                $to = $this->request->data['online_payment_summary']['to'];

                $result = $this->office->query("select b.payment_mode_desc_$lang,sum(a.pamount)as amount, a.certificate_no,a.estamp_issue_date, a.created,
                    a.online_verified_flag, a.defacement_flag, a.defacement_time
                        from ngdrstab_trn_payment_details a
                        inner join ngdrstab_mst_payment_mode b on b.payment_mode_id = a.payment_mode_id 
                        where  b.verification_flag = 'Y' and Date(A.created) between '$from' and '$to' and A.office_id = '$office_id' 
                        group by b.payment_mode_desc_en,a.certificate_no,a.estamp_issue_date, a.created, a.defacement_flag, a.defacement_time,a.online_verified_flag
                        order by b.payment_mode_desc_$lang");

                if ($result) {

                    $html_design = "<style>td{padding:5px;} </style>"
                            . "<h2 align=center> Online Payment Summary </h2>"
                            . "<h3 align=center style='color:#641E16;'> Status for " . $officename . " </h3>"
                            . "<hr style color:red;>"
                            . "<div class='table-responsive'>"
                            . "<table  align=center border=0 width=100%><tr> <td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                            . "<br/>"
                            . "<table border=1 style='border-collapse:collapse;' width=100%>"
                            . "<tr>"
                            . "<th style='text-align:center;' >Sr No</th>"
                            . "<th style='text-align:center;' >Payment Mode</th>"
                            . "<th style='text-align:center;' >Certificate No</th>"
                            . "<th style='text-align:center;'>Certificate Date </th>"
                            . "<th style='text-align:center;'>Amount</th>"
                            . "<th style='text-align:center;'>Verified</th>"
                            . "<th style='text-align:center;'>Verified Date</th>"
                            . "<th style='text-align:center;'>Locked</th>"
                            . "<th style='text-align:center;'>Locked Date</th>"
                            . "</tr>";

                    $SrNo = 1;
                    $totalFees = 0;
                    foreach ($result as $result1) {
                        $result1 = $result1[0];
                        $totalFees += $result1['amount'];
                        if ($result1['online_verified_flag'] == 'Y') {
                            $result1['online_verified_flag'] = "YES";
                        } else {
                            $result1['online_verified_flag'] = "NO";
                        }
                        if ($result1['defacement_flag'] == 'Y') {
                            $result1['defacement_flag'] = "YES";
                        } else {
                            $result1['defacement_flag'] = "NO";
                        }
                        $html_design .= "<tr>"
                                . "<td align=center>" . $SrNo++ . "</td>"
                                . "<td style='text-align:center;'>" . $result1['payment_mode_desc_' . $lang] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['certificate_no'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['estamp_issue_date'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['amount'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['online_verified_flag'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['created'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['defacement_flag'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['defacement_time'] . "</td>"
                                . "</tr>";
                    }
                    $html_design .= "<tr><td align=center colspan=4> <b>Total </b></td><td><b>" . $totalFees . "</b></td></tr>";
                    $html_design .= "</table></div>";
                    $this->set('htmldesign', $html_design);
                    if ($_POST['actiontype'] == 1) {
                        $this->set('actiontype', NULL);
                        $this->create_pdf($html_design, 'Online Payment Summary', 'A4-L', '');
                    }
                } else {
                    echo 'No Data Found';
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function rpt_token_submitted_doc() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
//            $office_list = ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => 'office_name_' . $lang));
//            $this->set('office_list', $office_list);
            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));



            if ($this->request->is('post')) {
                $this->Session->write('rpt_token_submitted_doc', $this->request->data['rpt_token_submitted_doc']);
                $this->request->data['rpt_token_submitted_doc'] = $this->request->data['rpt_token_submitted_doc'];
                $state_id = $this->Auth->user('state_id');

                $this->total_register_token($this->request->data['rpt_token_submitted_doc']);
            }
        } catch (Exception $ex) {
            
        }
    }

    public function total_register_token($frmData = NULL) {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_token_submitted_doc']) ? $this->request->data['rpt_token_submitted_doc'] : $frmData;
            $stateid = $this->Auth->User("state_id");
            // $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 24)));
            $user_id = $this->Auth->user('user_id');
            $officeid = $this->Auth->User("office_id");
//            $user_type_flag = $this->Session->read("session_usertype");

            if (isset($frmData['from']) && isset($frmData['to'])) {
                $from = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));
//                $nextday = strftime("%Y-%m-%d", strtotime("$to +1 day"));
                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {

                    $doc_reg_token = $this->payment->Query("select aps.final_stamp_date,app_dt.appointment_date,app_dt.sheduled_time,aps.doc_reg_date, aps.doc_reg_no,aps.token_no,office.office_name_en,SUM(pay.pamount) as total from ngdrstab_trn_application_submitted aps
                   join ngdrstab_trn_payment_details pay on pay.token_no=aps.token_no
                   join ngdrstab_mst_office office on office.office_id=aps.office_id
                   join ngdrstab_trn_appointment_details app_dt on app_dt.token_no=aps.token_no
                   where aps.final_stamp_flag='Y' and DATE(aps.token_submit_date) >='$from' and DATE(aps.token_submit_date) <= '$to' and aps.office_id=$officeid 
                   group by aps.final_stamp_date,app_dt.appointment_date,app_dt.sheduled_time,aps.doc_reg_no,aps.token_no,office.office_name_en,aps.doc_reg_date order by office.office_name_en,aps.doc_reg_date,aps.doc_reg_no");

                    if ($doc_reg_token) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> Total Token Registered</h2>"
                                . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['to'])) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>Sr.No</th>"
                                . "<th style='text-align:center;'>Office Name</th>"
                                . "<th style='text-align:center;'>Token No</th>"
                                . "<th style='text-align:center;'>Document Registration Date</th>"
//                                . "<th style='text-align:center;'>Document Registration Time</th>"
                                . "</tr>";
                        $SrNo = 1;
                        $totalFees = 0;
                        foreach ($doc_reg_token as $dr) {
                            $dr = $dr[0];
                            $html_design .= "<tr>"
                                    . "<td align=center>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $dr['office_name_en'] . "</td>"
                                    . "<td style='text-align:center;'>" . $dr['token_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . date('d/m/Y', strtotime($dr['doc_reg_date'])) . "</td>"
//                                  . "<td style='text-align:center;'>" . date('H:i:s ', strtotime($cr['final_stamp_date'])) . "</td>"
                                    . "</tr>";
                        }
                        $html_design .= "</table>";
//                        pr($html_design);exit;
                        $this->create_pdf($html_design, 'Total Register Document', 'A4-L', '');
                    } else {
                        echo 'No Data Found';
                    }
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function rpt_index_reg1() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
//            $office_list = ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => 'office_name_' . $lang));
//            $this->set('office_list', $office_list);


            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));




            if ($this->request->is('post')) {
                $errarr = $this->validatedata($this->request->data['rpt_index_reg1'], $fieldlist);
                if ($this->ValidationError($errarr)) {
                    $this->Session->write('rpt_index_reg1', $this->request->data['rpt_index_reg1']);
                    $this->request->data['rpt_index_reg1'] = $this->request->data['rpt_index_reg1'];
                    $state_id = $this->Auth->user('state_id');

                    $this->index_register1($this->request->data['rpt_index_reg1']);
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function index_register1($frmData = NULL) {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_index_reg1']) ? $this->request->data['rpt_index_reg1'] : $frmData;
            $stateid = $this->Auth->User("state_id");
            $office_id = $this->Auth->User("office_id");
            $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 30)));
//            $user_id = $this->Auth->user('user_id');
//            $user_type_flag = $this->Session->read("session_usertype");

            if (isset($frmData['from']) && isset($frmData['to'])) {
                $from = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));

                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {

                    $index_reg1 = $this->party_entry->Query("select aps.doc_reg_no,aps.token_no,article.book_number,article.article_desc_en,(select  party_new.party_full_name_en from ngdrstab_trn_party_entry_new as party_new 
                                                        join ngdrstab_mst_party_type party_type on party_type.party_type_id=party_new.party_type_id
                                                        where   party_new.is_presenter='Y' and party_type.party_type_flag='1'  
                                                        and party_new.token_no=aps.token_no 
                                                         ) as party_name,(select  party_fat.father_full_name_en from ngdrstab_trn_party_entry_new as party_fat 
                                                        join ngdrstab_mst_party_type party_type on party_type.party_type_id=party_fat.party_type_id
                                                        where   party_fat.is_presenter='Y' and party_type.party_type_flag='1'
                                                        and party_fat.token_no=aps.token_no 
                                                        ) as party_father,
                                                         (select fee_calu.cons_amt from ngdrstab_trn_fee_calculation as fee_calu where fee_calu.token_no=aps.token_no  and fee_calu.cons_amt is NOT NULL limit 1
                                                         ) as conde_amt ,
                                                        (select vill.village_name_en from ngdrstab_conf_admblock7_village_mapping as vill where vill.village_id = prop.village_id  and vill.village_name_en is NOT NULL limit 1 
                                                        ) as village_name     
                                                        from ngdrstab_trn_party_entry_new  as party 
                                                        join ngdrstab_trn_application_submitted aps on aps.token_no=party.token_no
                                                        join ngdrstab_trn_property_details_entry prop on prop.token_no=aps.token_no
                                                        join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                        join ngdrstab_mst_article  article on article.article_id=gen.article_id	 
                                                        join ngdrstab_trn_fee_calculation fee_cal on fee_cal.token_no=aps.token_no
                                                        where  aps.final_stamp_flag='Y' and article.index_reg_flag1='Y' and DATE(aps.final_stamp_date) >='$from' and DATE(aps.final_stamp_date) <= '$to' and  aps.office_id=$office_id
                                                        group by  aps.doc_reg_no,aps.token_no, prop.village_id,article.book_number,article.article_desc_en order by party_name");


                    if ($index_reg1) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> " . $labels[399] . " </h2>"
                                . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['to'])) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>" . $labels[384] . "</th>"
                                . "<th style='text-align:center;'>Doc Reg.No</th>"
                                . "<th style='text-align:center;'>" . $labels[385] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[386] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[387] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[388] . "</th>"
//                                . "<th style='text-align:center;'>" . $labels[389] . "</th>"
//                                . "<th style='text-align:center;'>" . $labels[390] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[391] . "</th>"
                                . "</tr>";
                        $SrNo = 1;

                        foreach ($index_reg1 as $ir1) {
                            $ir1 = $ir1[0];
                            $html_design .= "<tr>"
                                    . "<td align=center>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $ir1['doc_reg_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $ir1['party_name'] . "</td>"
                                    . "<td style='text-align:center;'>" . $ir1['party_father'] . "</td>"
                                    . "<td style='text-align:center;'>" . $ir1['village_name'] . "</td>"
                                    . "<td style='text-align:center;'>" . $ir1['article_desc_en'] . "</td>"
//                                    . "<td style='text-align:center;'>" . $ir1['conde_amt'] . "</td>"
//                                    . "<td style='text-align:center;'>" . $ir1['book_number'] . "</td>"
                                    . "<td style='text-align:center;'>  </td>"
                                    . "</tr>";
                        }
                        $html_design .= "</table>";
//                        pr($html_design);exit;
                        $this->create_pdf($html_design, 'Index Register 1', 'A4-L', '');
                    } else {
                        $this->Session->setFlash(__('Record not found'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_index_reg1'));
                    }
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function rpt_scanning_pending_old() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
//            $office_list = ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => 'office_name_' . $lang));
//            $this->set('office_list', $office_list);

            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {


                $errarr = $this->validatedata($this->request->data['rpt_scanning_pending'], $fieldlist);
                if ($this->ValidationError($errarr)) {
                    $this->Session->write('rpt_scanning_pending', $this->request->data['rpt_scanning_pending']);
                    $this->request->data['rpt_scanning_pending'] = $this->request->data['rpt_scanning_pending'];
                    $state_id = $this->Auth->user('state_id');

                    $this->scanning_pending($this->request->data['rpt_scanning_pending']);
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function scanning_pending_old($frmData = NULL) {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_index_reg1']) ? $this->request->data['rpt_index_reg1'] : $frmData;
            $stateid = $this->Auth->User("state_id");
            $office_id = $this->Auth->User("office_id");
            $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 30)));
//            $user_id = $this->Auth->user('user_id');
//            $user_type_flag = $this->Session->read("session_usertype");

            if (isset($frmData['from']) && isset($frmData['to'])) {
                $from = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));

                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {

                    $scan_pen = $this->ApplicationSubmitted->Query("SELECT app.*,article.*,appoint.appointment_id, party.party_full_name_$lang,
                            appoint.appointment_date,appoint.sheduled_time
                            FROM ngdrstab_trn_application_submitted app
                            join ngdrstab_trn_generalinformation info on app.token_no=info.token_no
                            left outer join ngdrstab_mst_article article on info.article_id=article.article_id
                            left outer join ngdrstab_trn_appointment_details appoint on app.token_no=appoint.token_no
                            left outer join ngdrstab_trn_party_entry_new party on app.token_no=party.token_no and party.is_presenter='Y'
                            where DATE(app.final_stamp_date) >='$from' and DATE(app.final_stamp_date) <= '$to' and  "
                            . "app.office_id=? and document_scan_flag=? and final_stamp_flag=?  "
                            . "  order by app.final_stamp_date ASC", array($office_id, 'N', 'Y'));

//                  pr($scan_pen);
                    $c1 = count($scan_pen);
                    if ($scan_pen) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> Pending Document Scanning </h2>"
                                . "<table  align=center border=0 width=100%><tr><td><b>Total Count:</b> $c1</td><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['to'])) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>Sr.No</th>"
                                . "<th style='text-align:center;'>Token No</th>"
                                . "<th style='text-align:center;'>Document Reg No</th>"
                                . "<th style='text-align:center;'>Article Name</th>"
                                . "<th style='text-align:center;'>Party Full Name</th>"
                                . "<th style='text-align:center;'>Document Complete Date</th>"
                                . "</tr>";
                        $SrNo = 1;

                        foreach ($scan_pen as $sp1) {
                            $sp1 = $sp1[0];
                            $html_design .= "<tr>"
                                    . "<td align=center>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $sp1['token_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $sp1['doc_reg_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $sp1['article_desc_' . $lang] . "</td>"
                                    . "<td style='text-align:center;'>" . $sp1['party_full_name_' . $lang] . "</td>"
//                                     . "<td style='text-align:center;'>" . (date('d/m/Y',$sp1['final_stamp_date']) . "</td>"
                                    . "<td style='text-align:center;'>" . date('d/m/Y ', strtotime($sp1['final_stamp_date'])) . "</td>"
                                    . "</tr>";
                        }
                        $html_design .= "</table>";
                        //pr($html_design);exit;
                        $this->create_pdf($html_design, 'Pending Document', 'A4-L', '');
                    } else {
                        echo 'No Data Found';
                    }
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function rpt_scanning_pending() { // PUN state
        try {

            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office_list = ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => 4), 'order' => 'office_name_' . $lang));
            $this->set('office_list', $office_list);

            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
                //pr($this->request->data);exit;
                $from = date('Y-m-d', strtotime($this->request->data['rpt_scanning_pending']['from']));
                $to = date('Y-m-d', strtotime($this->request->data['rpt_scanning_pending']['to']));
                $office = $this->request->data['rpt_scanning_pending']['office_id'];

                $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 30)));

                $errarr = $this->validatedata($this->request->data['rpt_scanning_pending'], $fieldlist);
                if ($this->ValidationError($errarr)) {

                    $scan_pen = $this->ApplicationSubmitted->Query("SELECT ofs.office_name_en,app.*,article.*,appoint.appointment_id, party.party_full_name_$lang,
                            appoint.appointment_date,appoint.sheduled_time
                            FROM ngdrstab_trn_application_submitted app
                            join ngdrstab_mst_office ofs on ofs.office_id=app.office_id
                            join ngdrstab_trn_generalinformation info on app.token_no=info.token_no
                            left outer join ngdrstab_mst_article article on info.article_id=article.article_id
                            left outer join ngdrstab_trn_appointment_details appoint on app.token_no=appoint.token_no
                            left outer join ngdrstab_trn_party_entry_new party on app.token_no=party.token_no and party.is_presenter='Y'
                            where DATE(app.final_stamp_date) >='$from' and DATE(app.final_stamp_date) <= '$to' and  "
                            . "app.office_id=? and document_scan_flag=? and final_stamp_flag=?  "
                            . "  order by app.final_stamp_date ASC", array($office, 'N', 'Y'));

//                  pr($scan_pen);
                    $c1 = count($scan_pen);
                    $off = $scan_pen[0][0]['office_name_en'];
                    if ($scan_pen) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> Pending Document Scanning for " . $off . " </h2>"
                                . "<table  align=center border=0 width=100%><tr><td><b>Total Count:</b> $c1</td><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>Sr.No</th>"
                                . "<th style='text-align:center;'>Token No</th>"
                                . "<th style='text-align:center;'>Document Reg No</th>"
                                . "<th style='text-align:center;'>Article Name</th>"
                                . "<th style='text-align:center;'>Party Full Name</th>"
                                . "<th style='text-align:center;'>Document Complete Date</th>"
                                . "</tr>";
                        $SrNo = 1;

                        foreach ($scan_pen as $sp1) {
                            $sp1 = $sp1[0];
                            $html_design .= "<tr>"
                                    . "<td align=center>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $sp1['token_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $sp1['doc_reg_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $sp1['article_desc_' . $lang] . "</td>"
                                    . "<td style='text-align:center;'>" . $sp1['party_full_name_' . $lang] . "</td>"
//                                     . "<td style='text-align:center;'>" . (date('d/m/Y',$sp1['final_stamp_date']) . "</td>"
                                    . "<td style='text-align:center;'>" . date('d/m/Y ', strtotime($sp1['final_stamp_date'])) . "</td>"
                                    . "</tr>";
                        }
                        $html_design .= "</table>";
//                        pr($html_design);exit;
                        $this->create_pdf($html_design, 'Pending_Document', 'A4-L', '');
                    } else {
                        $this->Session->setFlash(__('Record Not Found!!!'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_scanning_pending'));
                    }
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function rpt_index_reg2() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';


            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));





            if ($this->request->is('post')) {

                $errarr = $this->validatedata($this->request->data['rpt_index_reg2'], $fieldlist);
                if ($this->ValidationError($errarr)) {
                    $this->Session->write('rpt_index_reg2', $this->request->data['rpt_index_reg2']);
                    $this->request->data['rpt_index_reg2'] = $this->request->data['rpt_index_reg2'];
                    $state_id = $this->Auth->user('state_id');

                    $this->index_register2($this->request->data['rpt_index_reg2']);
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function index_register2($frmData = NULL) {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_index_reg2']) ? $this->request->data['rpt_index_reg2'] : $frmData;
            $stateid = $this->Auth->User("state_id");
            $office_id = $this->Auth->User("office_id");
//            pr($office_id);exit;
            $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 31)));
            if (isset($frmData['from']) && isset($frmData['to'])) {
                $from = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));
                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {

                    $index_reg2 = $this->party_entry->Query("select aps.doc_reg_no,fee_cal.cons_amt,aps.token_no,article.article_desc_en ,vill.village_name_en from ngdrstab_trn_application_submitted aps 
                                        join ngdrstab_trn_party_entry_new party_new on party_new.token_no=aps.token_no 
                                        join ngdrstab_trn_property_details_entry prop on prop.token_no=aps.token_no
                                        join ngdrstab_conf_admblock7_village_mapping vill on  vill.village_id = prop.village_id
                                        join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                        join ngdrstab_mst_article  article on article.article_id=gen.article_id	 
                                        join ngdrstab_trn_fee_calculation fee_cal on fee_cal.token_no=aps.token_no
                                        where  fee_cal.cons_amt is NOT NULL and aps.office_id=$office_id and article.index_reg_flag2='Y' and  aps.final_stamp_flag='Y' and DATE(aps.final_stamp_date) >='$from' and DATE(aps.final_stamp_date) <= '$to' 
                                        group by aps.doc_reg_no,aps.token_no,article.article_desc_en ,vill.village_name_en,fee_cal.cons_amt");


                    if ($index_reg2) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center>  " . $labels[400] . "  </h2>"
                                . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['to'])) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>" . $labels[392] . "</th>"
                                . "<th style='text-align:center;'>Doc.Reg.No</th>"
                                . "<th style='text-align:center;'>" . $labels[393] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[394] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[395] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[396] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[397] . "</th>"
                                . "<th style='text-align:center;'>" . $labels[398] . "</th>"
                                . "</tr>";
                        $SrNo = 1;
                        foreach ($index_reg2 as $ir2) {

                            $token_no = $ir2[0]['token_no'];
                            $seller_name = $this->party_entry->Query("select party_id,party.party_type_id,party.party_full_name_en as seller_name
					from  ngdrstab_trn_party_entry_new party
					join ngdrstab_mst_party_type party_type on party_type.party_type_id=party.party_type_id									
					where party.token_no='$token_no' and  party_type.party_type_flag='1' and  party.party_type_id=1 ");

                            $buyer_name = $this->party_entry->Query("select  party_id,party_new.party_type_id, party_new.party_full_name_en as buyer_name from ngdrstab_trn_party_entry_new as party_new 
					    join ngdrstab_mst_party_type party_type on party_type.party_type_id=party_new.party_type_id
					    where  party_type.party_type_flag='0' and party_new.token_no='$token_no' and party_new.party_type_id=2");
                            if ($seller_name != NULL) {
                                $seller = null;

                                if (count($seller_name) > 1) {
                                    for ($i = 0; $i < count($seller_name); $i++) {
                                        $seller = $seller . ',' . $seller_name[$i][0]['seller_name'];
                                    }
                                    $seller = substr($seller, 1);
                                } else {
//                                pr($seller_name);

                                    $seller = $seller_name[0][0]['seller_name'];
                                }
                            }



                            if ($buyer_name != NULL) {
                                $buyer = null;
                                if (count($buyer_name) > 1) {
                                    for ($i = 0; $i < count($buyer_name); $i++) {
                                        $buyer = $buyer . ',' . $buyer_name[$i][0]['buyer_name'];
                                    }
                                    $buyer = substr($buyer, 1);
                                } else {
                                    $buyer = $buyer_name[0][0]['buyer_name'];
                                }
                            }
                            if ($seller_name != NULL && $buyer_name != NULL) {
                                $html_design .= "<tr>"
                                        . "<td align=center>" . $SrNo++ . "</td>"
                                        . "<td style='text-align:center;'>" . $ir2[0]['doc_reg_no'] . "</td>"
                                        . "<td style='text-align:center;'>" . $ir2[0]['village_name_en'] . "</td>"
                                        . "<td style='text-align:center;'>" . $seller . "</td>"
                                        . "<td style='text-align:center;'>" . $buyer . "</td>"
                                        . "<td style='text-align:center;'>" . $ir2[0]['article_desc_en'] . "</td>"
                                        . "<td style='text-align:center;'>" . $ir2[0]['cons_amt'] . "</td>"
                                        . "<td style='text-align:center;'>  </td>"
                                        . "</tr>";
                            }
                        }
                        $html_design .= "</table>";
//                        pr($html_design);
//                        exit;

                        $this->create_pdf($html_design, 'Index Register 2', 'A4-L', '');
                    } else {
                        $this->Session->setFlash(__('Record not found'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_index_reg2'));
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
        }
    }

    public function document_disposal() {
        try {
            array_map([$this, 'loadModel'], ['office']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office_id = $this->Auth->User('office_id');
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);

            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));


            if ($this->request->is('post')) {
                $errarr = $this->validatedata($this->request->data['document_disposal'], $fieldlist);
                if ($this->ValidationError($errarr)) {

                    $from = $this->request->data['document_disposal']['from'];
                    $to = $this->request->data['document_disposal']['to'];

                    $result = $this->office->query("select a.doc_reg_no,d.party_full_name_$lang,c.disposal_desc_$lang,
                            b.disposal_remark,b.disposal_date,e.full_name
                            from ngdrstab_trn_application_submitted a 
                            inner join ngdrstab_trn_document_disposal b on a.token_no = b.token_no
                            inner join ngdrstab_mst_document_disposal c on c.disposal_id = b.disposal_id
                            inner join ngdrstab_trn_party_entry_new d on a.token_no = d.token_no and d.is_presenter='Y'
                            inner join ngdrstab_mst_user e on e.user_id = b.forward_user_id
                            where disposal_flag='Y' and 
                            Date(a.final_stamp_date) between '$from' and '$to' and a.office_id = '$office_id' 
                            order by a.doc_reg_no");



                    if ($result) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> Document Disposal Report </h2>"
                                . "<h3 align=center style='color:#641E16;'> Status for " . $officename . " </h3>"
                                . "<hr style color:red;>"
                                . "<div class='table-responsive'>"
                                . "<table  align=center border=0 width=100%><tr> <td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                                . "<br/>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;' >Sr No</th>"
                                . "<th style='text-align:center;' >Registration No</th>"
                                . "<th style='text-align:center;' >Presenter Name</th>"
                                . "<th style='text-align:center;'>Disposal Type</th>"
                                . "<th style='text-align:center;'>Disposal Remark</th>"
                                . "<th style='text-align:center;'>Disposal Date</th>"
                                . "<th style='text-align:center;'>Forworded To</th>"
                                . "</tr>";

                        $SrNo = 1;
                        foreach ($result as $result1) {
                            $result1 = $result1[0];
                            $html_design .= "<tr>"
                                    . "<td align=center>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $result1['doc_reg_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $result1['party_full_name_' . $lang] . "</td>"
                                    . "<td style='text-align:center;'>" . $result1['disposal_desc_' . $lang] . "</td>"
                                    . "<td style='text-align:center;'>" . $result1['disposal_remark'] . "</td>"
                                    . "<td style='text-align:center;'>" . $result1['disposal_date'] . "</td>"
                                    . "<td style='text-align:center;'>" . $result1['full_name'] . "</td>"
                                    . "</tr>";
                        }


                        $html_design .= "</table></div>";
                        $this->set('htmldesign', $html_design);

                        if ($_POST['actiontype'] == 1) {
                            $this->set('actiontype', NULL);
                            $this->create_pdf($html_design, 'Online Payment Summary', 'A4-L', '');
                        }
                    } else {
                        $html_design1 = "<h2 align=center style='color:red;'> Record Not Found in this Period...!!!! </h2>";
                        $this->set('htmldesign1', $html_design1);
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function rpt_index_reg3() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
//            $office_list = ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => 'office_name_' . $lang));
//            $this->set('office_list', $office_list);


            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));
            if ($this->request->is('post')) {

                $errarr = $this->validatedata($this->request->data['rpt_index_reg3'], $fieldlist);
                if ($this->ValidationError($errarr)) {



                    $this->Session->write('rpt_index_reg3', $this->request->data['rpt_index_reg3']);
                    $this->request->data['rpt_index_reg3'] = $this->request->data['rpt_index_reg3'];
                    $state_id = $this->Auth->user('state_id');

                    $this->index_register3($this->request->data['rpt_index_reg3']);
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function index_register3($frmData = NULL) {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_index_reg3']) ? $this->request->data['rpt_index_reg3'] : $frmData;
            $stateid = $this->Auth->User("state_id");
            $office_id = $this->Auth->User("office_id");
//            pr($office_id);exit;
            $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 32)));

            if (isset($frmData['from']) && isset($frmData['to'])) {
                $from = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));
                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {

                    $index_reg3 = $this->party_entry->Query("select aps.doc_reg_date,aps.doc_reg_no,aps.token_no,article.article_desc_en  from ngdrstab_trn_application_submitted aps 
                                        join ngdrstab_trn_party_entry_new party_new on party_new.token_no=aps.token_no 
                                        join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                        join ngdrstab_mst_article  article on article.article_id=gen.article_id	 
                                        where  article.index_reg_flag3='Y'  and  aps.office_id=$office_id and  aps.final_stamp_flag='Y' and DATE(aps.final_stamp_date) >='$from' and DATE(aps.final_stamp_date) <= '$to' 
                                        group by aps.token_no,article.article_desc_en ,aps.doc_reg_date,aps.doc_reg_no order by aps.doc_reg_no");
//              echo count($index_reg3);exit;
//                    pr($index_reg3);exit;
                    if ($index_reg3) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> " . $labels[411] . " </h2>"
                                . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['to'])) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>" . $labels[403] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[412] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[404] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[405] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[406] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[407] . " </th>"
//                                . "<th style='text-align:center;'>" . $labels[408] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[410] . " </th>"
                                . "</tr>";
                        $SrNo = 1;
                        foreach ($index_reg3 as $ir3) {

                            $token_no = $ir3[0]['token_no'];
                            //  pr($token_no);
                            $executer_name = $this->party_entry->Query("select villa.village_name_en,party.father_full_name_en, party_id,party.party_type_id,party.party_full_name_en as buyer_name
					from  ngdrstab_trn_party_entry_new party
					join ngdrstab_mst_party_type party_type on party_type.party_type_id=party.party_type_id	
                                        join ngdrstab_conf_admblock7_village_mapping villa on villa.village_id =party.village_id
					where party.is_executer='Y' and party.token_no='$token_no' order by buyer_name");
//                            pr($executer_name);exit;
                            foreach ($executer_name as $exname) {
                                if ($executer_name != NULL) {
                                    $html_design .= "<tr>"
                                            . "<td align=center>" . $SrNo++ . "</td>"
                                            . "<td style='text-align:center;'>" . $ir3[0]['doc_reg_no'] . "</td>"
                                            . "<td style='text-align:center;'>" . $exname[0]['buyer_name'] . "</td>"
                                            . "<td style='text-align:center;'>" . $exname[0]['father_full_name_en'] . "</td>"
                                            . "<td style='text-align:center;'>" . $executer_name[0][0]['village_name_en'] . "</td>"
                                            . "<td style='text-align:center;'>" . $ir3[0]['article_desc_en'] . "</td>"
//                                            . "<td style='text-align:center;'>" . $ir3[0]['cons_amt'] . "</td>"
                                            . "<td style='text-align:center;'>  </td>"
                                            . "</tr>";
                                }
                            }
                        }
                        $html_design .= "</table>";
                        $this->create_pdf($html_design, 'Index Register 3', 'A4-L', '');
                    } else {
                        $this->Session->setFlash(__('Record not found'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_index_reg3'));
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
        }
    }

    public function rpt_index_reg4() {
        try {
            $this->set('pdf_flag', NULL);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
//            $office_list = ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => 'office_name_' . $lang));
//            $this->set('office_list', $office_list);

            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));
            if ($this->request->is('post')) {
                $errarr = $this->validatedata($this->request->data['rpt_index_reg4'], $fieldlist);
                if ($this->ValidationError($errarr)) {
                    $this->Session->write('rpt_index_reg4', $this->request->data['rpt_index_reg4']);
                    $this->request->data['rpt_index_reg4'] = $this->request->data['rpt_index_reg4'];
                    $state_id = $this->Auth->user('state_id');

                    $this->index_register4($this->request->data['rpt_index_reg4']);
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function index_register4($frmData = NULL) {
        try {
            $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'genernal_info', 'state_logo', 'payment', 'finyear', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $frmData = isset($this->request->data['rpt_index_reg4']) ? $this->request->data['rpt_index_reg4'] : $frmData;
            $stateid = $this->Auth->User("state_id");
            $office_id = $this->Auth->User("office_id");
            $labels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 33)));
            if (isset($frmData['from']) && isset($frmData['to'])) {
                $from = date('Y-m-d', strtotime($frmData['from']));
                $to = date('Y-m-d', strtotime($frmData['to']));
                if ($this->is_Date($frmData['from']) && $this->is_Date($frmData['to'])) {

                    $index_reg4 = $this->party_entry->Query("select aps.doc_reg_date,aps.doc_reg_no,aps.token_no,article.article_desc_en  from ngdrstab_trn_application_submitted aps 
                                        join ngdrstab_trn_party_entry_new party_new on party_new.token_no=aps.token_no 
                                        join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                        join ngdrstab_mst_article  article on article.article_id=gen.article_id	 
                                      
                                        where   article.index_reg_flag4='Y' and aps.office_id=$office_id and  aps.final_stamp_flag='Y' and DATE(aps.final_stamp_date) >='$from' and DATE(aps.final_stamp_date) <= '$to' 
                                        group by aps.token_no,article.article_desc_en ,aps.doc_reg_date,aps.doc_reg_no order by aps.doc_reg_no");
                    if ($index_reg4) {
                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> " . $labels[421] . " </h2>"
                                . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['to'])) . "  </td></tr></table>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>" . $labels[413] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[423] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[414] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[415] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[416] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[417] . " </th>"
//                                . "<th style='text-align:center;'>" . $labels[418] . " </th>"
                                . "<th style='text-align:center;'>" . $labels[420] . " </th>"
                                . "</tr>";
                        $SrNo = 1;
                        foreach ($index_reg4 as $ir4) {
                            $token_no = $ir4[0]['token_no'];
                            $buyer_name = $this->party_entry->Query("select villa.village_name_en,party.father_full_name_en, party_id,party.party_type_id,party.party_full_name_en as buyer_name
					from  ngdrstab_trn_party_entry_new party
					join ngdrstab_mst_party_type party_type on party_type.party_type_id=party.party_type_id	
                                        join ngdrstab_conf_admblock7_village_mapping villa on villa.village_id =party.village_id
					where party_type.party_type_flag='1' and party.token_no='$token_no' order by buyer_name");

                            foreach ($buyer_name as $buyname) {

                                if ($buyer_name != NULL) {

                                    $html_design .= "<tr>"
                                            . "<td align=center>" . $SrNo++ . "</td>"
                                            . "<td style='text-align:center;'>" . $ir4[0]['doc_reg_no'] . "</td>"
                                            . "<td style='text-align:center;'>" . $buyname[0]['buyer_name'] . "</td>"
                                            . "<td style='text-align:center;'>" . $buyname[0]['father_full_name_en'] . "</td>"
                                            . "<td style='text-align:center;'>" . $buyname[0]['village_name_en'] . "</td>"
                                            . "<td style='text-align:center;'>" . $ir4[0]['article_desc_en'] . "</td>"
//                                            . "<td style='text-align:center;'>" . $ir4[0]['cons_amt'] . "</td>"
                                            . "<td style='text-align:center;'>  </td>"
                                            . "</tr>";
                                }
                            }
                        }
                        $html_design .= "</table>";
                        $this->create_pdf($html_design, 'Index Register 4', 'A4-L', '');
                    } else {
                        $this->Session->setFlash(__('Record not found'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_index_reg4'));
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
        }
    }

    public function rpt_state_registered() {
        try {
            array_map([$this, 'loadModel'], ['office']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            if ($this->request->is('post')) {

                $from_date = $this->request->data['rpt_state_registered']['from'];
                $to_date = $this->request->data['rpt_state_registered']['to'];


                $from = date('Y-m-d', strtotime($from_date));
                $to = date('Y-m-d', strtotime($to_date));

                $result = $this->office->query("select dist.district_name_en,offf.office_name_en,count(aps.token_no)as registered, (select count(app.token_no) from ngdrstab_mst_office as office 
                                                      join ngdrstab_trn_application_submitted app on app.office_id=office.office_id
                                                        where   app.final_stamp_flag='N' and office.office_id=offf.office_id and DATE(app.token_submit_date) >='$from' and DATE(app.token_submit_date) <= '$to'
                                                         ) as inprocess
                                                    from ngdrstab_mst_office offf
                                                   join ngdrstab_trn_application_submitted aps on aps.office_id=offf.office_id
                                                   join ngdrstab_conf_admblock3_district dist on dist.district_id=offf.district_id
                                                   where DATE(aps.final_stamp_date) >='$from' and DATE(aps.final_stamp_date) <= '$to'  group by offf.office_name_en,offf.office_id,dist.district_name_en order by dist.district_name_en,offf.office_name_en");



                if ($result) {

                    $html_design = "<style>td{padding:5px;} </style>"
                            . "<h2 align=center>Department Of Revenue,Govt.Of Punjab </h2>"
                            . "<h3 align=center> Document Statistics </h3>"
                            . "<hr style color:red;>"
                            . "<div class='table-responsive'>"
                            . "<table  align=center border=0 width=100%><tr> <td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                            . "<br/>"
                            . "<table border=1 style='border-collapse:collapse;' width=100%>"
                            . "<tr>"
                            . "<th style='text-align:center;' >Sr No</th>"
                            . "<th style='text-align:center;' >District Name</th>"
                            . "<th style='text-align:center;' >Office Name</th>"
                            . "<th style='text-align:center;' >Document Registered</th>"
                            . "<th style='text-align:center;'>Document Submitted</th>"
                            . "</tr>";

                    $sum = 0;
                    $sum1 = 0;
                    $SrNo = 1;
                    foreach ($result as $result1) {
                        $html_design .= "<tr>"
                                . "<td align=center>" . $SrNo++ . "</td>"
                                . "<td style='text-align:center;'>" . $result1[0]['district_name_en'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1[0]['office_name_en'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1[0]['registered'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1[0]['inprocess'] . "</td>"
                                . "</tr>";

                        $sum = $sum + $result1[0]['registered'];
                        $sum1 = $sum1 + $result1[0]['inprocess'];
                    }
                    $html_design .= "<tr>"
                            . "<td align=center></td>"
                            . "<td align=center></td>" . "<td align=center> <b>Total </b></td>" . "<td align=center><b>" . $sum . "</b> </td>" . "<td align=center><b>" . $sum1 . "</b></td>" . "</tr>";
                    $html_design .= "</table></div>";
                    $this->create_pdf($html_design, 'State Maneger', 'A4', 'NGDRS');
                } else {
                    $this->Session->setFlash(__('Record not found'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_state_registered'));
                }
            }
        } catch (Exception $ex) {
            
        }
    }

    public function endors_cert_of_admissibility_bihar($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F') {
        try {

            $this->autoRender = FALSE;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            array_map([$this, 'loadModel'], ['article', 'genernalinfoentry', 'TrnBehavioralPatterns', 'identification', 'party', 'party_entry', 'genernalinfoentry', 'fees_calculation', 'valuation', 'property_details_entry', 'payment', 'ReportLabel', 'finyear', 'article_fee_items', 'payment', 'PaymentFields']);
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 5)));
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            $off = isset($officename[0]['off']['office_name_en']) ? $officename[0]['off']['office_name_en'] : $off;
//               $fees='';
//               $payment='';
            $article = $this->article->query("select article.article_desc_$lang,gen.no_of_pages,article.book_number from ngdrstab_trn_application_submitted aps
                                            join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                            join ngdrstab_mst_article  article on article.article_id=gen.article_id	
                                            where aps.token_no=$doc_token_no");

            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
//             pr($rptData);
            $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData[0]['article']['article_id']);
//             pr($stamp_duty_details);exit;

            $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;


            $fees = $this->payment->query("select aps.doc_reg_no,stamp.final_amt as stamp_duty,fsub.fee_subrule_desc,frule.reference_no,feecal.cons_amt from ngdrstab_trn_application_submitted aps
                                        join ngdrstab_trn_fee_calculation feecal on feecal.token_no=aps.token_no
                                        join ngdrstab_trn_stamp_duty stamp on stamp.token_no=aps.token_no
                                        join ngdrstab_mst_article_fee_rule frule on frule.fee_rule_id=feecal.fee_rule_id
                                        join ngdrstab_mst_article_fee_subrule fsub on  fsub.fee_rule_id=feecal.fee_rule_id
                                        where aps.token_no=? and aps.final_stamp_flag='Y'
                                        group by aps.doc_reg_no,fsub.fee_subrule_desc,frule.reference_no,feecal.cons_amt,stamp.final_amt", array($doc_token_no));

            $executant_name = $this->party_entry->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                'conditions' => array('token_no' => $doc_token_no, 'is_executer' => 'Y')));

            $identification_detail = $this->identification->get_identification($lang, $doc_token_no, $report_type);

            $payment = $this->payment->query("select  stamp.final_amt as stamp_duty,pmode.payment_mode_id,SUM(pay.pamount) as pamount,aps.token_no,pmode.payment_mode_desc_en from ngdrstab_trn_application_submitted aps
                                            join ngdrstab_trn_payment_details pay on pay.token_no=aps.token_no
                                            join ngdrstab_mst_payment_mode pmode on pmode.payment_mode_id=pay.payment_mode_id 
                                            join ngdrstab_trn_stamp_duty stamp on stamp.token_no=aps.token_no
                                            where aps.token_no=? group by stamp.final_amt,pmode.payment_mode_id,aps.token_no,pmode.payment_mode_desc_en", array($doc_token_no));
//            pr($payment);
            $stamp_paper = '';
            $bank_challan = '';
            foreach ($payment as $pay) {
//                pr($pay[0]['payment_mode_id']);exit;

                if ($pay[0]['payment_mode_id'] == 9) {

                    $bank_challan = $pay[0]['pamount'];
                } else if ($pay[0]['payment_mode_id'] == 2) {

                    $stamp_paper = $pay[0]['pamount'];
                }




                $html_design = "<table frame='box' width='100%'>"
                        . "<tr><td colspan=2><h3><strong><u><em>Endorsement Of Certificate Of Admissibility</em></u></strong></h3></td></tr>"
                        . "<tr><td colspan=2 style='padding-left:5px; padding-right:5px;' align='justify'>Admissible under Rule 5: duly Stamped (or exempted from or does not require stamp duty) under th Indian Stamp Act ,1989,Schedule 1 or I-A ,No. '23'. Also admissible under section 26(a) of the B. T.Act</td></tr>"
                        . "<tr height='100px'><td>"
                        . "<table width='100%'>"
                        . "<tr><td style='padding-left:5px; padding-right:5px;' align='justify'>Stamp Duty paid under Indian Stamp Act:- <b> " . $pay[0]['stamp_duty'] . "</b></td></tr>"
                        . "<tr><td style='padding-left:5px; padding-right:5px;' align='justify'>Addl.Stamp Duty paid under Muncipal Act</td></tr>"
                        . "</table>"
                        . "</td>"
                        . "<td><table width='100%' frame='box'>"
                        . "<tr><td style='padding-left:5px; padding-right:5px;' align='justify'>Amt.Paid By N.J Stamp Paper  :- <b>" . $stamp_paper . "  </td></tr>"
                        . "<tr><td style='padding-left:5px; padding-right:5px;' align='justify'>Amt.paid through Bank Challan :- <b>" . $bank_challan . "</b> </td></tr>"
                        . "</table></td>"
                        . "</tr>"
                        . "<tr><td colspan=2 align=left><table  width='100%'><tr><td style='padding-left:25px; padding-right:25px;' align='justify'>";
            }
            $lineNo = 1;
            if ($stamp_duty) {
                foreach ($stamp_duty as $sd) {

                    $html_design .= '<b>' . $sd[0]['fee_item_desc_' . $lang] . '</b> :- Rs. ' . $sd[0]['totalsd'] . ', ';
                    if ($lineNo % 3 == 0) {
                        $html_design .= "</td></tr><tr><td style='padding-left:25px; padding-right:25px;' align='justify'>";
                    }
                    $lineNo++;
                }
            }
            $html_design .= "</td></tr></table></td></tr>"
                    . "<tr height='80px'>"
                    . "<td align=left valign='bottom' style='padding-left:7px; padding-right:7px;' align='justify'><b> Date: </b> " . date('d/m/Y') . " </td>"
                    . "<td align=right valign='bottom' style='padding-left:7px; padding-right:7px;' align='justify' ><b> " . $off . " </b></td>"
                    . "</tr>"
                    . "</table><br>";



            $html_design .= "<table width='100%' frame='box'>"
                    . "<tr>"
                    . "<td colspan=3 ><h3> Endorsement under section 52 </h3>"
                    . "</td>"
                    . "</tr>"
                    . "<tr>"
                    . "<td colspan=3 style='padding-left:5px; padding-right:5px;' align='justify'>Presented for registration at Registration Office, <b>" . $off . "</b>  on : <b> " . date('d-M-Y') . "</b>"
                    . " by " . "<b>" . (($executant_name) ? ($executant_name[0]['party_entry']['party_full_name_en']) : ('_________')) . " </b> S/O- " . "<b>" .
                    (($executant_name) ? ($executant_name[0]['party_entry']['father_full_name_en']) : ('_________')) . "</b> by profession Others.Status - Executant "
                    . "</td>"
                    . "</tr>"
                    . "<tr height='80px'>"
                    . "<td valign='bottom'><b> Signature/L.T.I of Presentant</td>"
                    . "<td valign='bottom'><b> Date: </b> " . date('d/m/Y') . " </td>"
                    . "<td valign='bottom'><b>Registering Officer,Patna</b></td>"
                    . "</tr>"
                    . "</table><br>";
            foreach ($identification_detail as $id_rc) {
//                    pr($id_rc);
                $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $id_rc['identification']['identification_id'], $doc_token_no, '5');
//                   pr($tmp_party_address);

                $party_address = array();
                foreach ($tmp_party_address as $tmp_party_address) {
                    array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                }

                $html_design .= "<table width='100%' frame='box'><tr><td colspan=2><h3>Endorsement under section 58</h3></td></tr><tr>"
                        . "<td colspan=2 style='padding-left:5px; padding-right:5px;' align='justify' >Execution is admitted by those Executents and identified by the person (identified by"
                        . " <b>" . $id_rc['identification']['identification_full_name_' . $lang] . "</b> age :- <b>" . $id_rc['identification']['age'] . "</b> Sex :- <b>" . $id_rc['identification']['sex'] . " </b>,S/O :- <b>" . $id_rc['identification']['father_full_name_' . $lang] . " </b>,resident of " . implode(', ', $party_address) . " <b>" . $id_rc['village']['village_name_' . $lang] . ' </b>, <b>' . $id_rc['taluka']['taluka_name_' . $lang] . '</b>, <b>' . $id_rc['district']['district_name_' . $lang] . '</b>, <b>' . $id_rc['state']['state_name_' . $lang] . " </b>),whose Names,Photographs,Fingerprints and Signatures are affixed as such on back page / page of the instrument.</b> </td>"
                        . "</tr>"
                        . "<tr height='80px'>"
                        . "<td valign='bottom'><b> Date: </b> " . date('d/m/Y') . " </td>"
                        . "<td valign='bottom'><b> " . $off . " </b></td>"
                        . "</tr></table><br>";
            }
            foreach ($article as $art) {
                $html_design .= "<table width='100%' frame='box'><tr><td colspan=2><h3>Endorsement of Certificate of under section 60 </h3></td></tr><tr>"
                        . "<td colspan=2 style='padding-left:5px; padding-right:5px;' align='justify'>Registered at Registration Office <b> " . $off . " </b> in Book  <b>" . $art[0]['book_number'] . " </b> Volume No.1 on pages on <b>" . $art[0]['no_of_pages'] . " </b>,for"
                        . " the year <b>" . date('Y') . " </b> and stored  in CD volume No. CD-1 year <b>" . date('Y') . " </b>.The document no. is printed on the front page of the document.</b> </td>"
                        . "</tr>"
                        . "<tr height='80px'>"
                        . "<td align=left valign='bottom' style='padding-left:7px; padding-right:7px;' align='justify'><b> Date: </b> " . date('d/m/Y') . " </td>"
                        . "<td align=right valign='bottom' style='padding-left:7px; padding-right:7px;' align='justify' ><b> " . $off . " </b></td>"
                        . "</tr></table><br>";
            }

            $html_design .= "<pagebreak/>";

            $html_design .= "<table width='100%' frame='box'><tr>"
                    . "<td colspan=2 align=left style='padding-left:7px; padding-right:7px;' align='justify'> Serial No:- </td> <td style='padding-left:7px; padding-right:7px;' align='justify' align=right> Deed No :- <b>" . $fees[0][0]['doc_reg_no'] . "</b></td></tr>"
                    . "<tr><td colspan=3> <h4><b>Govt. of Bihar</h4></b> </td></tr>"
                    . "<tr><td colspan=3> <h4><b> " . $off . " </b></h4></td></tr>"
                    . "<tr><td colspan=3><u><em> <font color='blue'>Summary of Endorsement </font></em></u></td></tr>"
                    . "<tr><td colspan=3 style='padding-left:5px; padding-right:5px;' align='justify'> This document was presented for registration on " . date('d/m/Y') . " by party_name <br> A Stamp Duty of Rs. amount  and other Fees of Rs. price  has been paid in it. 
                         <br> The document was found admissible. The Names, Photographs, Fingerprints and Signatures of the Executants and their Identifier, who have admitted execution before me, are affixed on the reverse page.
                         The document has been registered as Deed No. 11 in Book No.<b>" . $art[0]['book_number'] . " </b>, Volume No. 1 on pages from 149  to 168 and has been preserved in total <b>" . $art[0]['no_of_pages'] . " </b> pages in C.D. No. 1 / Year  <b>" . date('Y') . " </b> </td></tr>"
                    . "<tr><td colspan=3 align=right> Signature with Date</td></tr>"
                    . "<tr height='80px'>"
                    . "<td align=left valign='bottom' style='padding-left:7px; padding-right:7px;' align='justify' ><b> Date: </b> " . date('d/m/Y') . "</td>"
                    . "<td align=center valign='bottom' style='padding-left:7px; padding-right:7px;' align='justify'>Token No :-  " . $doc_token_no . "</td>"
                    . "<td align=right valign='bottom' style='padding-left:7px; padding-right:7px;' align='justify'><b> " . $off . " </b></b></td>"
                    . "</tr>"
                    . "</table>";



            if ($view_flag == 'pdf' || $view_flag == 'D') {
                $this->create_pdf($html_design, 'end', 'A4-L', '');
            } else {
                return $html_design;
            }
//            pr($html_design);
        } catch (Exception $ex) {
            
        }
    }

    public function rpt_sro_payment_status() {
        try {
            array_map([$this, 'loadModel'], ['office']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
//            pr($this->request->data);exit;
//            $office_id = ['rpt_sro_payment_status']['office_id'];
//            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
//            $officename = $officename[0][0]['office_name_' . $lang];
//            $this->set('officename', $officename);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $this->set('officedata', ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'order' => array('office_name_' . $lang => 'ASC'))));

            $fieldlist = array();
            $fieldlist['office_id']['text'] = 'is_select_req';
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
                $from = $this->request->data['rpt_sro_payment_status']['from'];
                $to = $this->request->data['rpt_sro_payment_status']['to'];
                $office_id = $this->request->data['rpt_sro_payment_status']['office_id'];
//                pr($office_id);exit;

                $result = $this->office->query("select b.payment_mode_desc_$lang,sum(a.pamount)as amount, a.certificate_no,a.estamp_issue_date, a.created,
                    a.online_verified_flag, a.defacement_flag, a.defacement_time
                        from ngdrstab_trn_payment_details a
                        inner join ngdrstab_mst_payment_mode b on b.payment_mode_id = a.payment_mode_id 
                        where  b.verification_flag = 'Y' and Date(A.created) between '$from' and '$to' and A.office_id = '$office_id' 
                        group by b.payment_mode_desc_en,a.certificate_no,a.estamp_issue_date, a.created, a.defacement_flag, a.defacement_time,a.online_verified_flag
                        order by b.payment_mode_desc_$lang");
//                pr($result);exit;

                if ($result) {

                    $html_design = "<style>td{padding:5px;} </style>"
                            . "<h2 align=center> SRO Office Online Payment Summary </h2>"
//                            . "<h3 align=center style='color:#641E16;'> Status for " . $officename . " </h3>"
                            . "<hr style color:red;>"
                            . "<div class='table-responsive'>"
                            . "<table  align=center border=0 width=100%><tr> <td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                            . "<br/>"
                            . "<table border=1 style='border-collapse:collapse;' width=100%>"
                            . "<tr>"
                            . "<th style='text-align:center;' >Sr No</th>"
                            . "<th style='text-align:center;' >Payment Mode</th>"
                            . "<th style='text-align:center;' >Certificate No</th>"
                            . "<th style='text-align:center;'>Certificate Date </th>"
                            . "<th style='text-align:center;'>Amount</th>"
                            . "<th style='text-align:center;'>Verified</th>"
                            . "<th style='text-align:center;'>Verified Date</th>"
                            . "<th style='text-align:center;'>Locked</th>"
                            . "<th style='text-align:center;'>Locked Date</th>"
                            . "</tr>";

                    $SrNo = 1;
                    $totalFees = 0;
                    foreach ($result as $result1) {
                        $result1 = $result1[0];
                        $totalFees += $result1['amount'];
                        if ($result1['online_verified_flag'] == 'Y') {
                            $result1['online_verified_flag'] = "YES";
                        } else {
                            $result1['online_verified_flag'] = "NO";
                        }
                        if ($result1['defacement_flag'] == 'Y') {
                            $result1['defacement_flag'] = "YES";
                        } else {
                            $result1['defacement_flag'] = "NO";
                        }
                        $html_design .= "<tr>"
                                . "<td align=center>" . $SrNo++ . "</td>"
                                . "<td style='text-align:center;'>" . $result1['payment_mode_desc_' . $lang] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['certificate_no'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['estamp_issue_date'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['amount'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['online_verified_flag'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['created'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['defacement_flag'] . "</td>"
                                . "<td style='text-align:center;'>" . $result1['defacement_time'] . "</td>"
                                . "</tr>";
                    }
                    $html_design .= "<tr><td align=center colspan=4> <b>Total </b></td><td><b>" . $totalFees . "</b></td></tr>";
                    $html_design .= "</table></div>";
//                    pr($html_design);exit;
                    $this->set('htmldesign', $html_design);
                    if ($_POST['actiontype'] == 1) {
                        $this->set('actiontype', NULL);
                        $this->create_pdf($html_design, 'Online Payment Summary', 'A4-L', '');
                    }
                } else {
                    $this->Session->setFlash(__('Record not found'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_sro_payment_status'));
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function deed_cancellation() {
        try {
            array_map([$this, 'loadModel'], ['office']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';

            //  $this->set('officedata', ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'order' => array('office_name_' . $lang => 'ASC'))));
            if ($this->request->is('post')) {
                $from = $this->request->data['deed_cancellation']['from'];
                $to = $this->request->data['deed_cancellation']['to'];
                $from = date('Y-m-d', strtotime($from));
                $to = date('Y-m-d', strtotime($to));
                $office_id = $this->Auth->User('office_id');

                $order = $this->request->data['deed_cancellation']['filterby'];
//               pr($order);exit;
                $office = $this->office->find('first', array('conditions' => array('office_id' => $office_id)));
                if (!empty($office)) {
                    $off = $office['office']['office_name_' . $lang];
//                    pr($off);
                } else {
                    $off = NULL;
                }

                if ($order == 'DR') {
// echo'hii';exit;
                    $result = $this->office->query("select citizen.deed_write_accept_flag, citizen.is_advocate_accept_flag,t.slot_time_minute,aptdt.* ,citizen.full_name,offc.office_name_en from audit_trail.ngdrstab_trn_audit_appointment_details aptdt ,ngdrstab_mst_user_citizen citizen ,ngdrstab_mst_office offc,ngdrstab_mst_timeslot t
                 
                where   aptdt.office_id=offc.office_id and aptdt.appointment_date between '$from' and '$to' and aptdt.office_id=$office_id and aptdt.user_id=citizen.user_id and offc.slot_id=t.slot_id and   (citizen .deed_write_accept_flag='Y' OR citizen .is_advocate_accept_flag='Y') order by citizen.full_name");
                } else {
//               echo'hii';exit;
                    $result = $this->office->query("select citizen.deed_write_accept_flag, citizen.is_advocate_accept_flag,t.slot_time_minute,aptdt.* ,citizen.full_name,offc.office_name_en from audit_trail.ngdrstab_trn_audit_appointment_details aptdt ,ngdrstab_mst_user_citizen citizen ,ngdrstab_mst_office offc,ngdrstab_mst_timeslot t
                   
                where  aptdt.office_id=offc.office_id and aptdt.appointment_date between '$from' and '$to' and aptdt.office_id=$office_id and aptdt.user_id=citizen.user_id and offc.slot_id=t.slot_id and   (citizen .deed_write_accept_flag='Y' OR citizen .is_advocate_accept_flag='Y') order by aptdt.appointment_date");
                }
//pr($result);exit;
                if ($result) {

                    $html_design = "<style>td{padding:5px;} </style>"
                            . "<h2 align=center> Appointment Cancellation Report </h2>"
                            . "<h4 align=center> " . $off . " </h4>"
                            . "<hr style color:red;>"
                            . "<div class='table-responsive'>"
                            . "<table  align=center border=0 width='100%'><tr> <td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                            . "<br/>"
                            . "<table border=1 style='border-collapse:collapse;' width=100%>"
                            . "<tr>"
                            . "<th style='text-align:center;'>Sr No</th>"
                            . "<th style='text-align:center;'>Token No Cancel By</th>"
                            . "<th style='text-align:center;'>Party Name Cancel By</th>"
                            . "<th style='text-align:center;'>Appointment Cancel By </th>"
                            . "<th style='text-align:center;'>User1 Office Name</th>"
                            . "<th style='text-align:center;'>Appointment Date </th>"
                            . "<th style='text-align:center;'>Schedule Time</th>"
                            . "<th style='text-align:center;'>Appointment Cancel Date and Time</th>"
                            . "<th style='text-align:center;'>User Type</th>"
                            . "<th style='text-align:center;'>Party Name Taken By </th>"
                            . "<th style='text-align:center;'>Token No Taken By</th>"
                            . "<th style='text-align:center;'>Apponitment Taken By</th>"
                            . "<th style='text-align:center;'>User Type</th>"
                            . "</tr>";

                    $SrNo = 1;
                    foreach ($result as $result1) {

                        if ($result1[0]['deed_write_accept_flag'] == 'Y') {
                            $flag1 = "Deed Writer";
                        } else if ($result1[0]['is_advocate_accept_flag'] == 'Y') {
                            $flag1 = "Adovcate";
                        }
//                    pr($result1[0]['deed_write_accept_flag']);
                        $total_min = ($result1[0]['interval_id'] - 1) * $result1[0]['slot_time_minute'];
                        $app_date = date('d-M-Y', strtotime($result1[0]['appointment_date']));
                        if ($total_min >= 60) {
                            $time = explode('-', $result1[0]['sheduled_time']);
                            if (!empty($time)) {
                                $subtime = explode(':', $time[1]);
                                $app_time = $time[1];
                            }
                        } else {
                            $time = explode('-', $result1[0]['sheduled_time']);
                            if (!empty($time)) {
                                $subtime = explode(':', $time[0]);
                                $app_time = $subtime[0] . ':' . $total_min;
                            }
                        }
                        $data = $this->office->query("select DISTINCT(aptdt.token_no), citizen.deed_write_accept_flag, citizen.is_advocate_accept_flag,aptdt.* ,citizen.full_name from ngdrstab_trn_appointment_details aptdt ,ngdrstab_mst_user_citizen citizen 
                                                  
                                                   
                                                    where   aptdt.user_id=citizen.user_id and aptdt.office_id=? and aptdt.interval_id=? and aptdt.slot_no=? 
                                                   and aptdt.appointment_date=?", array($result1[0]['office_id'], $result1[0]['interval_id'], $result1[0]['slot_no'], $result1[0]['appointment_date']));

                        if (!empty($data)) {

                            $party_array = $this->office->query("select party_full_name_en from ngdrstab_trn_party_entry_new where token_no=?", array($data[0][0]['token_no']));
                            $party_cancel = $this->office->query("select party_full_name_en from ngdrstab_trn_party_entry_new where token_no=?", array($result1[0]['token_no']));

                            $party = $party_array[0][0]['party_full_name_en'];
                            $token = $data[0][0]['token_no'];
                            if ($data[0][0]['deed_write_accept_flag'] == 'Y') {
                                $flag = "Deed Writer";
                            } else if ($data[0][0]['is_advocate_accept_flag'] == 'Y') {
                                $flag = "Adovcate";
                            } else {
                                $flag = '';
                            }
                        } else {
                            $flag = '';
                        }
                        if (isset($data[0][0]['full_name'])) {
                            $takenby = $data[0][0]['full_name'];
                        } else {
                            $takenby = '';
                        }

                        if (!empty($party_cancel)) {
                            $html_design .= "<tr>"
                                    . "<td align=center>" . $SrNo++ . "</td>"
                                    . "<td style='text-align:center;'>" . $result1[0]['token_no'] . "</td>"
                                    . "<td style='text-align:center;'>" . $party_cancel[0][0]['party_full_name_en'] . "</td>"
                                    . "<td style='text-align:center;'>" . $result1[0]['full_name'] . "</td>"
                                    . "<td style='text-align:center;'>" . $result1[0]['office_name_en'] . "</td>"
                                    . "<td style='text-align:center;'>" . $result1[0]['appointment_date'] . "</td>"
                                    . "<td style='text-align:center;'>" . $app_time . "</td>"
                                    . "<td style='text-align:center;'>" . date('d/m/Y h:i:s a', strtotime($result1[0]['created_new'])) . "</td>"
                                    . "<td style='text-align:center;'>" . $flag1 . "</td>"
                                    . "<td style='text-align:center;'>" . $party . "</td>"
                                    . "<td style='text-align:center;'>" . $token . "</td>"
                                    . "<td style='text-align:center;'>" . $takenby . "</td>"
                                    . "<td style='text-align:center;'>" . $flag . "</td>"
                                    . "</tr>";
                        }
                    }
                    $html_design .= "</table></div>";
//                    pr($html_design);exit;
                    $this->create_pdf($html_design, "Appointment Cancellation Report", 'A4-L', 'Cancellation');
                } else {
                    $this->Session->setFlash(__('Record not found'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'deed_cancellation'));
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function get_home_visit($doc_token_no = NULL, $view_flag = NULL) {
        //
        try {
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $doc_token_no = isset($this->request->data['doc_token_no']) ? base64_decode($this->request->data['doc_token_no']) : base64_decode($doc_token_no);
            $this->loadModel('file_config');
            $this->loadModel('party_entry');
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $doc_lang = $this->Session->read('doc_lang');
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
            $party_html = NULL;
            if ($doc_token_no && $lang) {
                $party_html = "<style>hr{border-top: 1px solid #8c8b8b}</style>"
                        . "<table width=100%>"
                        . "<tr> "
                        . "<td><h3>Home Visit</h3> </td>"
                        . "</tr></table>";
                $party_html .= "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                  <thead>
                        <tr>
                            <th style='text-align: center;'>$rptlabels[21]</th> 
                            <th style='text-align: center;'>Home Visit Party Name</th>
                            <th style='text-align: center;'>$rptlabels[23]</th>
                            <th style='text-align: center;'>$rptlabels[24]</th>
                            <th style='text-align: center;'>$rptlabels[25]</th> 
                            <th style='text-align: center;'>$rptlabels[31]</th> 
                        </tr>
                    </thead>
                    <tbody>";


                $party = $this->party_entry->query("SELECT p.*,p.id,p.party_id,pt.party_type_desc_$lang,p.photo_img,p.biometric_img,p.party_fname_$lang,p.party_full_name_$lang,p.age,village_name_$lang,taluka.taluka_name_$lang,district.district_name_$lang,state.state_name_$lang,p.pan_no FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left join ngdrstab_conf_admblock7_village_mapping village on village.village_id=p.village_id "
                        . " left join ngdrstab_conf_admblock5_taluka taluka on taluka.taluka_id=p.taluka_id "
                        . " left join ngdrstab_conf_admblock3_district district on district.district_id=p.district_id "
                        . " left join ngdrstab_conf_admblock1_state state on state.state_id=p.state_id "
                        . " where p.home_visit_flag='Y' and p.token_no=?", array($doc_token_no));
//              pr($party);exit;
                $counter = 1;

                foreach ($party as $party) {


                    $tmp_party_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $party[0]['party_id'], $doc_token_no, '2', $doc_lang);
                    $party_address = array();
                    foreach ($tmp_party_address as $tmp_party_address) {
                        array_push($party_address, $tmp_party_address['TrnBehavioralPatterns']['field_value_' . $doc_lang]);
                    }

                    $party_html .= "<tr>"
                            . "<td scope='row' style='text-align: center; font-weight:bold;'>" . $counter++ . "</td>"
                            . "<td style='text-align: center;'> <b>" . $party[0]['party_full_name_' . $lang] . " </b> <br>" . implode(', ', $party_address) . "<br>" . $party[0]['village_name_' . $lang] . ', ' . $party[0]['taluka_name_' . $lang] . ', ' . $party[0]['district_name_' . $lang] . ', ' . $party[0]['state_name_' . $lang] . "<br><b> PAN No.:</b> " . $party[0]['pan_no'] . "</td>"
                            . "<td>" . $party[0]['party_type_desc_' . $lang] . "<br><b>Age:</b>" . $party[0]['age'] . " <br><b> </b> </td>"
                            . "<td style='text-align: center;'>";

                    $imagedata = $path['file_config']['filepath'] . $party[0]['photo_img'];

                    if ($party[0]['photo_img'] != null && file_exists($imagedata)) {
                        $image = file_get_contents($imagedata);
                        $image_codes = base64_encode($image);
                    } else {
                        $image_codes = null;
                        $btnaccept = 0;
                    }

                    $party_html .= "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='50' width='50' /> </td>     
                                <td style='text-align: center;'>";
                    $imagedata1 = $path['file_config']['filepath'] . $party[0]['biometric_img'];
                    if ($party[0]['biometric_img'] != null && file_exists($imagedata1)) {
                        $image1 = file_get_contents($imagedata1);
                        $image_codes1 = base64_encode($image1);
                    } else {
                        $image_codes1 = null;
                    }

                    $party_html .= "<img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='50' width='50' /></td>"
                            . "<td></td>"
                            . "</tr>";
                }
                $party_html .= "</tbody> </table>";
                //if doc reg no compl
            }
            if ($view_flag == 'pdf' || $view_flag == 'D') {
                $this->create_pdf($party_html, 'home_visit_' . $doc_token_no, 'A4', '');
            } else {
                return $party_html;
            }
//            return $party_html;
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function appointment_cancellation() {
        try {
            array_map([$this, 'loadModel'], ['office']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';

            $this->set('officedata', ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'order' => array('office_name_' . $lang => 'ASC'))));
            $fieldlist = array();

            $fieldlist['office_id']['select'] = 'is_select_req';
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $fieldlist['filterby']['radio'] = 'is_yes_no_imp';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
//                  pr($this->request->data['appointment_cancellation']);exit;
                $errarr = $this->validatedata($this->request->data['appointment_cancellation'], $fieldlist);
                //pr($errarr);exit;
                if ($this->validationError($errarr)) {
                    $from = $this->request->data['appointment_cancellation']['from'];
                    $to = $this->request->data['appointment_cancellation']['to'];

                    $office_id = $this->request->data['appointment_cancellation']['office_id'];

                    $order = $this->request->data['appointment_cancellation']['filterby'];
//               pr($order);exit;
                    $office = $this->office->find('first', array('conditions' => array('office_id' => $office_id)));
                    if (!empty($office)) {
                        $off = $office['office']['office_name_' . $lang];
//                    pr($off);
                    } else {
                        $off = NULL;
                    }

                    if ($order == 'Y') {
// echo'hii';exit;
                        $result = $this->office->query("select citizen.deed_write_accept_flag, citizen.is_advocate_accept_flag,t.slot_time_minute,aptdt.* ,citizen.full_name,offc.office_name_en from audit_trail.ngdrstab_trn_audit_appointment_details aptdt ,ngdrstab_mst_user_citizen citizen ,ngdrstab_mst_office offc,ngdrstab_mst_timeslot t
                 
                where   aptdt.office_id=offc.office_id and aptdt.appointment_date between '$from' and '$to' and aptdt.office_id=$office_id and aptdt.user_id=citizen.user_id and offc.slot_id=t.slot_id and   (citizen .deed_write_accept_flag='Y' OR citizen .is_advocate_accept_flag='Y') order by citizen.full_name");
                    } else {
//               echo'hii';exit;
                        $result = $this->office->query("select citizen.deed_write_accept_flag, citizen.is_advocate_accept_flag,t.slot_time_minute,aptdt.* ,citizen.full_name,offc.office_name_en from audit_trail.ngdrstab_trn_audit_appointment_details aptdt ,ngdrstab_mst_user_citizen citizen ,ngdrstab_mst_office offc,ngdrstab_mst_timeslot t
                   
                where  aptdt.office_id=offc.office_id and aptdt.appointment_date between '$from' and '$to' and aptdt.office_id=$office_id and aptdt.user_id=citizen.user_id and offc.slot_id=t.slot_id and   (citizen .deed_write_accept_flag='Y' OR citizen .is_advocate_accept_flag='Y') order by aptdt.appointment_date");
                    }
//pr($result);exit;
                    if ($result) {

                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center> Appointment Cancellation Report </h2>"
                                . "<h4 align=center> Office Name :- " . $off . " </h4>"
                                . "<hr style color:red;>"
                                . "<div class='table-responsive'>"
                                . "<table  align=center border=0 width='100%'><tr> <td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                                . "<br/>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;'>Sr No</th>"
                                . "<th style='text-align:center;'>Token No Cancel By</th>"
                                . "<th style='text-align:center;'>Party Name Cancel By</th>"
                                . "<th style='text-align:center;'>Appointment Cancel By </th>"
                                . "<th style='text-align:center;'>User1 Office Name</th>"
                                . "<th style='text-align:center;'>Appointment Date </th>"
                                . "<th style='text-align:center;'>Schedule Time</th>"
                                . "<th style='text-align:center;'>Appointment Cancel Date and Time</th>"
                                . "<th style='text-align:center;'>User Type</th>"
                                . "<th style='text-align:center;'>Party Name Teken By </th>"
                                . "<th style='text-align:center;'>Token No Teken By</th>"
                                . "<th style='text-align:center;'>Apponitment Teken By</th>"
                                . "<th style='text-align:center;'>User Type</th>"
                                . "</tr>";

                        $SrNo = 1;
                        foreach ($result as $result1) {

                            if ($result1[0]['deed_write_accept_flag'] == 'Y') {
                                $flag1 = "Deed Writer";
                            } else if ($result1[0]['is_advocate_accept_flag'] == 'Y') {
                                $flag1 = "Adovcate";
                            }
//                    pr($result1[0]['deed_write_accept_flag']);
                            $total_min = ($result1[0]['interval_id'] - 1) * $result1[0]['slot_time_minute'];
                            $app_date = date('d-M-Y', strtotime($result1[0]['appointment_date']));
                            if ($total_min >= 60) {
                                $time = explode('-', $result1[0]['sheduled_time']);
                                if (!empty($time)) {
                                    $subtime = explode(':', $time[1]);
                                    $app_time = $time[1];
                                }
                            } else {
                                $time = explode('-', $result1[0]['sheduled_time']);
                                if (!empty($time)) {
                                    $subtime = explode(':', $time[0]);
                                    $app_time = $subtime[0] . ':' . $total_min;
                                }
                            }
//                            pr($result1);

                            $data = $this->office->query("select DISTINCT(aptdt.token_no), citizen.deed_write_accept_flag, citizen.is_advocate_accept_flag,aptdt.* ,citizen.full_name from ngdrstab_trn_appointment_details aptdt ,ngdrstab_mst_user_citizen citizen 
                                                  
                                                   
                                                    where   aptdt.user_id=citizen.user_id and aptdt.office_id=? and aptdt.interval_id=? and aptdt.slot_no=? 
                                                   and aptdt.appointment_date=?", array($result1[0]['office_id'], $result1[0]['interval_id'], $result1[0]['slot_no'], $result1[0]['appointment_date']));

                            if (!empty($data)) {

                                $party_array = $this->office->query("select party_full_name_en from ngdrstab_trn_party_entry_new where token_no=?", array($data[0][0]['token_no']));

                                $party_cancel = $this->office->query("select party_full_name_en from ngdrstab_trn_party_entry_new where token_no=?", array($result1[0]['token_no']));

                                if (!empty($party_array)) {
                                    $party = $party_array[0][0]['party_full_name_en'];
                                }
                                $token = $data[0][0]['token_no'];
                                if ($data[0][0]['deed_write_accept_flag'] == 'Y') {
                                    $flag = "Deed Writer";
                                } else if ($data[0][0]['is_advocate_accept_flag'] == 'Y') {
                                    $flag = "Adovcate";
                                } else {
                                    $flag = '';
                                }
                            } else {
                                $flag = '';
                            }
                            if (isset($data[0][0]['full_name'])) {
                                $takenby = $data[0][0]['full_name'];
                            } else {
                                $takenby = '';
                            }

                            if (!empty($party_cancel)) {
                                $html_design .= "<tr>"
                                        . "<td align=center>" . $SrNo++ . "</td>"
                                        . "<td style='text-align:center;'>" . $result1[0]['token_no'] . "</td>"
                                        . "<td style='text-align:center;'>" . $party_cancel[0][0]['party_full_name_en'] . "</td>"
                                        . "<td style='text-align:center;'>" . $result1[0]['full_name'] . "</td>"
                                        . "<td style='text-align:center;'>" . $result1[0]['office_name_en'] . "</td>"
                                        . "<td style='text-align:center;'>" . $result1[0]['appointment_date'] . "</td>"
                                        . "<td style='text-align:center;'>" . $app_time . "</td>"
                                        . "<td style='text-align:center;'>" . date('d/m/Y h:i:s a', strtotime($result1[0]['created_new'])) . "</td>"
                                        . "<td style='text-align:center;'>" . $flag1 . "</td>"
                                        . "<td style='text-align:center;'>" . $party . "</td>"
                                        . "<td style='text-align:center;'>" . $token . "</td>"
                                        . "<td style='text-align:center;'>" . $takenby . "</td>"
                                        . "<td style='text-align:center;'>" . $flag . "</td>"
                                        . "</tr>";
                            }
                        }
                        $html_design .= "</table></div>";
//                    pr($html_design);exit;
                        $this->create_pdf($html_design, "Appointment Cancellation Report", 'A4-L', 'Cancellation');
                    } else {
                        $this->Session->setFlash(__('Record not found'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'appointment_cancellation'));
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    //generic report start

    function generic_report1() {
        try {

            array_map([$this, 'loadModel'], ['office', 'District', 'party_entry', 'property_details_entry', 'article', 'article_fee_items']);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);

            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $state = $this->Auth->User("state_id");
            $office_id = $this->Auth->User('office_id');
            $article = $this->article->get_article($lang, $this->Session->read('ereg_flag'));
            $districtdata = $this->District->find('list', array('fields' => array('District.id', 'District.district_name_' . $lang), 'conditions' => array('state_id' => $state), 'order' => 'district_name_' . $lang));
            $office = $this->office->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $state), 'order' => 'office_name_' . $lang));
            $outitemlist = $this->article_fee_items->find('list', array('fields' => array('fee_item_id', 'fee_item_desc_' . $lang), 'conditions' => array('fee_param_type_id' => array(2, 6)), 'order' => array('fee_item_desc_' . $lang => 'ASC')));
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);
            $this->set('article', $article);
            $this->set('districtdata', $districtdata);
            $this->set('office', $office);
            $this->set('outitemlist', $outitemlist);

            if ($this->request->is('post')) {
                $this->property_details_entry->query('delete from ngdrstab_temp_graphdata1');
                $to = "'" . $this->request->data['income_tax']['to'] . "'";
                $from = "'" . $this->request->data['income_tax']['from'] . "'";
                $feetype = $this->request->data['income_tax']['fee_item_id'];
                $district = $this->request->data['income_tax']['district_id'];
                $office = $this->request->data['income_tax']['office_id'];

                if (!is_numeric($district) && !is_numeric($office)) {

                    $this->property_details_entry->query("select * from dashdistrictfee_new($from,$to)");
                } else if (is_numeric($district) && !is_numeric($office)) {
                    $this->property_details_entry->query("select * from dashdistrictfee($from,$to,$district)");
                } else if (is_numeric($district) && is_numeric($office)) {
                    $this->property_details_entry->query("select * from dashdistrictfee_officewise($from,$to,$district,$office)");
                }
                if (is_numeric($feetype)) {
                    $data = $this->property_details_entry->query("select  b.district_name_en,d.office_name_en,
                                    sum(a.total) as total ,f.fee_item_desc_en
                                    from ngdrstab_temp_graphdata1 a
                                    inner join ngdrstab_conf_admblock3_district b on a.district_id = b.district_id 
                                     inner join ngdrstab_mst_article_fee_items f on a.account_head_code = f.account_head_code   
                                    inner join ngdrstab_mst_office d on a.office_id = d.office_id where f.fee_item_id=? group by b.district_name_en,d.office_name_en ,f.fee_item_desc_en ", array($feetype));
                    $this->get_report1($data, $this->request->data['income_tax']['to'], $this->request->data['income_tax']['from'], 'F');
                } else {
                    $data = $this->property_details_entry->query("select  b.district_name_en,d.office_name_en,
                                    sum(a.total) as total
                                    from ngdrstab_temp_graphdata1 a
                                    inner join ngdrstab_conf_admblock3_district b on a.district_id = b.district_id                                   
                                    inner join ngdrstab_mst_office d on a.office_id = d.office_id group by b.district_name_en,d.office_name_en");
                    $this->get_report1($data, $this->request->data['income_tax']['to'], $this->request->data['income_tax']['from']);
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    function get_report1($data, $to, $from, $type = NULL) {
        $html_design = "<style>td{padding:5px;} </style>"
                . "<h2 align=center> Generic Report 1</h2>"
                . "<h2 align=center> Government Of Punjab</h2>"
                . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>";

        $html_design .= "</table></div>";

        $html_design .= "<style>td{padding:5px;} </style>";
        $i = 1;
        $html_design .= " <div style='border:2px; border-style: solid; padding-left:5px; padding-right:5px; padding-bottom:5px;'>"
                . "<table width='100%'> <tr><td><h2 align=center> Total Collection </h2></td> </tr></table>"
                . "<table border=1 style='border-collapse:collapse;' width=100%>";

        if ($type != NULL) {
            $html_design .= "<tr>"
                    . "<th style='text-align:center;' >Sr. No.</th>"
                    . "<th style='text-align:center;'>District Name</th>"
                    . "<th style='text-align:center;'>Office Name</th>"
                    . "<th style='text-align:center;'>Fee Type</th>"
                    . "<th style='text-align:center;'>Total Collection</th>"
                    . "</tr>";
            $total = 0;
            foreach ($data as $sum1) {
                $total = $total + $sum1[0]['total'];
                $html_design .= "<tr>"
                        . "<td style='text-align:center;' >" . $i . "</td>"
                        . "<td style='text-align:center;'>" . $sum1[0]['district_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $sum1[0]['office_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $sum1[0]['fee_item_desc_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $sum1[0]['total'] . "</td>"
                        . "</tr>";
                $i++;
            }
            $html_design .= "<tr><td></td><td></td><td></td><td>Total :-</td><td>$total</td></tr>";

            $html_design .= "</table></div>";
        } else {
            $html_design .= "<tr>"
                    . "<th style='text-align:center;' >Sr. No.</th>"
                    . "<th style='text-align:center;'>District Name</th>"
                    . "<th style='text-align:center;'>Office Name</th>"
                    . "<th style='text-align:center;'>Total Collection</th>"
                    . "</tr>";
            $total = 0;
            foreach ($data as $sum1) {
                $total = $total + $sum1[0]['total'];
                $html_design .= "<tr>"
                        . "<td style='text-align:center;' >" . $i . "</td>"
                        . "<td style='text-align:center;'>" . $sum1[0]['district_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $sum1[0]['office_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $sum1[0]['total'] . "</td>"
                        . "</tr>";
                $i++;
            }
            $html_design .= "<tr><td></td><td></td><td></td><td>Total :-</td><td>$total</td></tr>";

            $html_design .= "</table></div>";
        }


        $this->create_pdf($html_design, 'Generic report1', 'A4-L', '');
    }

    public function district_change_event() {
        try {

            $this->loadModel('damblkdpnd');
            $stateid = $this->Auth->User("state_id");

            if (isset($this->request->data['dist'])) {


                $dist = $this->request->data['dist'];

                $talukalist = ClassRegistry::init('taluka')->find('list', array('fields' => array('taluka.taluka_id', 'taluka.taluka_name_en'), 'conditions' => array('district_id' => $dist)));

                $result_array = array('subdiv' => NULL, 'taluka' => $talukalist, 'circle' => NULL, 'corp' => NULL, 'village' => NULL);

                $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json');
                $json = $file->read(true, 'r');
                $json2array = json_decode($json, TRUE);
                $json2array['taluka'] = $talukalist;
                $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json', true);
                $file->write(json_encode($json2array));

                echo json_encode($result_array);
                exit;
            } else {
                return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
                exit;
            }
        } catch (Exception $ex) {
            $this->Session->setFlash(
                    __('Record Cannot be displayed. Error :' . $ex->getMessage())
            );
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    function get_office_list() {
        try {

            $this->loadModel('office');
            $doc_lang = $this->Session->read('doc_lang');
            $stateid = $this->Auth->User("state_id");
            $lang = $this->Session->read("sess_langauge");

            if (isset($this->request->data['dist']) and is_numeric($this->request->data['dist'])) {

                $dist = $this->request->data['dist'];
                if (isset($this->request->data['tal']) && $this->request->data['tal'] != '') {
                    $tal = $this->request->data['tal'];


                    $options1['conditions'] = array('ov.taluka_id' => trim($tal));
                    $options1['joins'] = array(array('table' => 'ngdrstab_trn_office_village_linking', 'alias' => 'ov', 'type' => 'INNER', 'conditions' => array('ov.office_id=office.office_id')),
                    );
                    $options1['fields'] = array('office.office_id', 'office.office_name_' . $lang);
                    $office = $this->office->find('list', $options1);
                    if (empty($office)) {
                        $options1['conditions'] = array('ov.district_id' => trim($dist));
                        $options1['joins'] = array(array('table' => 'ngdrstab_trn_office_village_linking', 'alias' => 'ov', 'type' => 'INNER', 'conditions' => array('ov.office_id=office.office_id')),
                        );
                        $options1['fields'] = array('office.office_id', 'office.office_name_' . $lang);
                        $office = $this->office->find('list', $options1);
                    }
                } elseif (isset($dist) && $dist != '') {


                    $options1['conditions'] = array('ov.district_id' => trim($dist));
                    $options1['joins'] = array(array('table' => 'ngdrstab_trn_office_village_linking', 'alias' => 'ov', 'type' => 'INNER', 'conditions' => array('ov.office_id=office.office_id')),
                    );
                    $options1['fields'] = array('office.office_id', 'office.office_name_' . $lang);
                    $office = $this->office->find('list', $options1);
                }


                $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json');
                $json = $file->read(true, 'r');
                $json2array = json_decode($json, TRUE);


                $result_array = array('office' => $office);
                $json2array['office'] = $office;

                $file = new File(WWW_ROOT . 'files/jsonfile_' . $this->Auth->user('user_id') . '.json', true);
                $file->write(json_encode($json2array));

                echo json_encode($result_array);
                exit;
            } else {

                header('Location:../cterror.html');
                exit;
            }
        } catch (Exception $ex) {
            $this->Session->setFlash(
                    __('Record Cannot be displayed. Error :' . $ex->getMessage())
            );
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    //income tax report



    public function rpt_deed_pending($doc_token_no = NULL, $view_flag = NULL, $report_type = 'F', $lang = 'en', $doc_lang = 'en') {
        try {
//$this->autoRender = FALSE;
            $doc_token_no = base64_decode($doc_token_no);
            array_map(array($this, 'loadModel'), array('payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article', 'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation', 'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';
            $userid = $this->Session->read("citizen_user_id");
            $path = $this->file_config->find('first', array('fields' => array('filepath')));
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $html_design = '';
            $alias_name = '';
            $idenalias = '';
            $witalias = '';

            if (!empty($rptData)) {
                $rptData = $rptData[0];


//===============================         Property Details ==============================================
                $rptPropDtl = $this->property_details_entry->get_property_detail_list($lang, $doc_token_no, $this->Session->read('citizen_user_id'));
// pr($rptPropDtl);exit;
                $prpt_valuation = 0;
                if ($rptPropDtl) {
                    foreach ($rptPropDtl as $prpt) {
                        $tmp_property_address = $this->TrnBehavioralPatterns->get_pattern_detail($lang, $prpt['property_details_entry']['property_id'], $doc_token_no, '1', $doc_lang);
//                       pr($tmp_property_address);exit;
                        $property_address = array();
                        if ($tmp_property_address) {
                            foreach ($tmp_property_address as $tmp_property_address) {
                                array_push($property_address, $tmp_property_address['pattern']['pattern_desc_' . $lang] . ' - ' . $tmp_property_address['TrnBehavioralPatterns']['field_value_' . $lang]);
                            }
                        }
                        $prop_boundaries = '<b>Property Boundaries</b> <br>East: ' . $prpt['property_details_entry']['boundries_east_' . $lang] . ', West: ' . $prpt['property_details_entry']['boundries_west_' . $lang] . ', South: ' . $prpt['property_details_entry']['boundries_south_' . $lang] . ', North: ' . $prpt['property_details_entry']['boundries_north_' . $lang];
//                    pr($prop_boundaries);exit;
                        $tmp_prpt_val = $this->valuation_details->find('first', array('fields' => array('SUM(final_value)'), 'conditions' => array('val_id' => $prpt['property_details_entry']['val_id'])));
//                    pr($tmp_prpt_val);exit;
                        $prpt_valuation = ($tmp_prpt_val) ? $tmp_prpt_val[0]['sum'] : '-';
//                        pr($prpt_valuation);exit;
//                     $cons_amt='';
                        if (!empty($rptPropDtl)) {
                            $cons_amt = ($prpt['sdc']['cons_amt']) ? $prpt['sdc']['cons_amt'] : '-';
                        }
//                        pr($cons_amt);exit;

                        $prop_area = $this->valuation_details->get_valuation_details_cake($lang, $prpt['property_details_entry']['val_id']);
                        $tmp_prop_area = array();
                        foreach ($prop_area as $parea) {
                            if ($parea['item']['is_list_field_flag'] == 'Y')
                                $parea['valuation_details']['item_value'] = $parea['list']['item_desc_' . $lang];
                            array_push($tmp_prop_area, $parea['item']['usage_param_desc_' . $lang] . ' : ' . $parea['valuation_details']['item_value'] . ' ' . $parea['unit']['unit_desc_' . $lang]);
                        }
                    }
                } else {
                    
                }

                $pending_doc = $this->ApplicationSubmitted->find('all', array('fields' => array('document_entry_remark', 'final_stamp_pending'), 'conditions' => array('token_no' => $doc_token_no, 'final_stamp_pending' => 'Y')));

//             pr($pending_doc);exit;

                $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
                $lblalias = $rptlabels[402];
//            $stamp_duty_details = $this->stamp_duty->get_stamp_duty($doc_token_no, $userid, $lang, 1); //1 fee Type Id for Online Payment Only
                $stamp_duty_details = $this->payment->stampduty_fee_details($doc_token_no, $lang, $rptData['article']['article_id']);
//             pr($stamp_duty_details);
                $stamp_duty = ($stamp_duty_details) ? $stamp_duty_details : NULL;
//            pr($stamp_duty);

                $rpt_title = "Deed Endorsement Sample Template";
                $html_design = "<h4 align=center>" . $rptlabels[363] . "</h4> <h5 align=right> Token No :- <b>" . $doc_token_no . "</b></h5>";
                if (!empty($pending_doc)) {
                    if ($pending_doc[0]['ApplicationSubmitted']['final_stamp_pending'] == 'Y') {
                        $html_design .= "<table><tr><td style='color:red'; align='center'><h4><b>This remark will be " . $pending_doc[0]['ApplicationSubmitted']['document_entry_remark'] . " </b></h4></td></tr></table>";
                    }
                }
                $html_design .= "<div width=100% align=center>"
                        . "<div style='border:2px solid black; width:98%; padding:5px;'>"
                        . "<style> td{padding:3px;} table{border-collapse: collapse;}</style>"
                        . "<table width=100% align=center>"
                        . "<tr>"
                        . "<tr><td>" . $rptlabels[177] . " :- " . $rptData['article']['article_desc_' . $lang] . " ,<b>" . $rptlabels[166] . " </b>:- Rs." . round($prpt_valuation) . "/-,  <b>" . $rptlabels[401] . " </b>:- Rs." . round(@$cons_amt) . "/- </td> </tr>"
                        . "<tr><td colspan=2> ";
                $lineNo = 1;
                if ($stamp_duty) {
                    foreach ($stamp_duty as $sd) {
//                    pr($sd);exit;
                        $html_design .= '<b>' . $sd[0]['fee_item_desc_' . $lang] . '</b> :- Rs. ' . $sd[0]['totalsd'] . ', ';
                        if ($lineNo % 3 == 0) {
                            $html_design .= '';
                        }
                        $lineNo++;
                    }
                }

//                $valuation = $this->valuation->Query("select val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land from ngdrstab_trn_valuation val 
//                                                join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
//                                                join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
//                                                join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id where val.token_no=$doc_token_no");
                $valuation = $this->valuation->Query("select val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang as segment_name,usage.usage_main_catg_desc_$lang as type_of_land 

                                                    from ngdrstab_trn_property_details_entry p
                                                    join ngdrstab_trn_valuation val  ON val.val_id=p.val_id
                                                join ngdrstab_conf_admblock7_village_mapping village on village.village_id=val.village_id
                                                join ngdrstab_mst_loc_level_1_prop_list levellist on levellist.prop_level1_list_id=val.level1_list_id
                                                join ngdrstab_mst_usage_main_category usage on usage.usage_main_catg_id= val.usage_main_catg_id where val.token_no=$doc_token_no
                                                        group by p.property_id,val.village_id,val.val_id,val.rate, village.village_name_$lang,levellist.list_1_desc_$lang,usage.usage_main_catg_desc_$lang");
                $sagment_name = '';
                $type_of_land = '';
                $seg_desc = '';
                $val_id = '';
                $rate = '';
                if (!empty($valuation)) {
                    $sagment_name = $valuation[0][0]['village_name_' . $lang];
                    $type_of_land = $valuation[0][0]['type_of_land'];
                    $seg_desc = $valuation[0][0]['segment_name'];
                    $val_id = $valuation[0][0]['val_id'];
                    $rate = round($valuation[0][0]['rate']);
                }
                $valuation_details = $this->valuation_details->find('all', array('fields' => array('DISTINCT rule_id'), 'conditions' => array('val_id' => $val_id, 'item_type_id' => 1)));
                $area = '';
                foreach ($valuation_details as $vdetails) {
                    $areawwww = $this->valuation_details->getValuationDetail($val_id, 1, $vdetails['valuation_details']['rule_id'], $lang);
//                       pr($areawwww);
                    foreach ($areawwww as $area1)
                        if ($area1[0]['area_field_flag'] == 'Y') {
                            $area .= " " . $area1[0]['item_value'] . " " . $area1[0]['unit_desc_' . $lang];
//                               pr($area);exit;
                        };
                }






//              pr($sagment_name);exit;
//            $html_design.=($stamp_duty) ? implode(', ', $stamp_duty['item']['fee_item_desc_en'].' = '.$stamp_duty[0]['fees']) : NULL;
                $html_design .= "</td></tr>";
//Property Details
                if ($rptPropDtl) {

                    $html_design .= "<tr><td > <b>" . $rptlabels[172] . " </b>:- $type_of_land"//type of land
                            . " , <b>" . $rptlabels[173] . "</b> :-  $area </td></tr>"// Area of land
                            . " <tr><td>  <b>" . $rptlabels[174] . "</b> :- $sagment_name"//segement name
                            . " ,<b>" . $rptlabels[175] . " </b>:-Rs. $rate </td></tr>"//sagement rate
                            . "<tr><td> <b> " . $rptlabels[176] . "</b> :- $seg_desc</td></tr> "; //sagement desc
                }
//Article Name
                $html_design .= " </tr>"//article
                        . "</table>"

//                    . "<br><br>"
                        . "</div>"
                        . "</div>";

                $html_design .= "<table width=100%> <tr> <td width=70%>"; //divide into two screen
                $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                    'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                $alias = $this->party->find('all', array('fields' => array('alias_name_en'), 'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));

                if (!empty($alias[0]['party']['alias_name_en'])) {

                    $alias_name = '(' . $lblalias . ':- <b>' . $alias[0]['party']['alias_name_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                } else {
                    $alias_name = '';
                }
                $newamt = $this->SroDependentFields->find('all', array('fields' => array('field_value'), 'conditions' => array('token_no' => $doc_token_no, 'field_id' => 1)));
//            pr($presenter_name);exit;
                //  pr($doc_token_no);exit;
                $party = $this->party_entry->query("SELECT  cate.category_name_$lang,iden.identificationtype_desc_$lang,p.identificationtype_desc_en as iddesc ,p.is_presenter,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . " left outer join ngdrstab_mst_party_category cate on cate.category_id=p.party_catg_id"
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_executer='Y'");

//                    pr($party);exit;
                $sellerflag = 0;
                $buyerflag = 0;
                $buyername = '________';
                $buyerfathername = '_________';
                $image_codes = null;
                $image_codes1 = null;
//            $image_codes=='';
                foreach ($party as $party1) {
                    //  
                    if ($party1[0]['party_type_flag'] == 1 && $sellerflag == 0 && $party1[0]['is_presenter'] == 'Y') {
                        $sellerflag = 1;
                        $imagedata = $path['file_config']['filepath'] . $party1[0]['photo_img'];
//                     $sellername= $party1[0]['party_full_name_'.$lang];
//                            $sellerfathername= $party1[0]['father_full_name_'.$lang];
//                            pr($imagedata);exit;
                        if ($party1[0]['photo_img'] != null && file_exists($imagedata)) {
                            $image = file_get_contents($imagedata);
                            $image_codes = base64_encode($image);
                        } else {
                            $image_codes = null;
                            $btnaccept = 0;
                        }
//                            pr($imagedata);exit;
                    } else {
                        continue;
                    }
                }
                foreach ($party as $party1) {
                    if ($party1[0]['party_type_flag'] == 0 && $buyerflag == 0) {

                        $sellerflag = 1;
                        $imagedata1 = $path['file_config']['filepath'] . $party1[0]['photo_img'];

                        if ($party1[0]['photo_img'] != null && file_exists($imagedata1)) {
                            $buyername = $party1[0]['party_full_name_en'];
                            $buyerfathername = $party1[0]['father_full_name_' . $lang];
                            $image = file_get_contents($imagedata1);
                            $image_codes1 = base64_encode($image);
                        } else {
                            $image_codes1 = null;
                            $btnaccept = 0;
                        }
                    } else {
                        continue;
                    }
                }


                $article = $this->article->query("select article.article_desc_$lang from ngdrstab_trn_application_submitted aps
                                            join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                            join ngdrstab_mst_article  article on article.article_id=gen.article_id	
                                            where aps.token_no=$doc_token_no");

                $art = $article[0][0]['article_desc_' . $lang];
//           pr($art);exit;


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' >" . $rptlabels[178] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b>" . $alias_name . "</b>                         
                  " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('__________')) . "</b> "
                        . $rptlabels[180] . "</td></tr></table>";


                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align='left' width=100%>" . $rptlabels[199] . " :- <b>" . date('d-M-Y') . "</b>  " . $rptlabels[200] . " :-  <b>" . date('l') . "</b> "
                        . $rptlabels[201] . " :- <b>" . date('H:i:s A') . "</b></td></tr></table><br><br>";

                $html_design .= "<table width=100%><tr><td width=50% align=left>" . $rptlabels[181] . "</td> <td width=50% align=left>" . $rptlabels[182] . "</td> </tr> </table><br>";

                $html_design .= "<td></td><td></td><td width = 30%> <img src='data:image/jpg;charset=utf-8;base64," . $image_codes . "' height='150px' width='200px' /> " . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "(" . $party[0][0]['category_name_' . $lang] . ")" . " </td> </table>";

//             $html_design .= "<table width=100% border=0>"
//                    . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_' . $lang]) : ('_________')) . "</b>                        
//                  " . $rptlabels[366] . "  <b> Rs." . round($prpt_valuation) . "</b> "
//                    . $rptlabels[367] ;

                IF ($lang == 'en') {
                    $html_design .= "<table width=100% border=0>"
                            . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b> " . $alias_name . "</b>                       
                  " . $rptlabels[179] . "<b> " . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('_________')) . "</b> 
                  " . $rptlabels[366] . " Rs. <b>" . (($newamt) ? ($newamt[0]['SroDependentFields']['field_value']) : ('-')) . "</b> "
                            . $rptlabels[354] . "  <b>" . $art . "</b> "
                            . $rptlabels[367];
                } ELSE {
                    $html_design .= "<table width=100% border=0>"
                            . "<tr><td align='left' >" . $rptlabels[365] . "<b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_en']) : ('_________')) . "</b> " . $alias_name . "</b>                       
                  " . $rptlabels[179] . "<b> " . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('_________')) . "</b> 
                  " . $rptlabels[366] . "  <b>" . $art . "</b> "
                            . $rptlabels[354] . "  <b>" . (($newamt) ? ($newamt[0]['SroDependentFields']['field_value']) : ('-')) . "</b> "
                            . $rptlabels[367];
                }


// display photo 
//            $html_design .= "<table width=100% border=0> <tr><td align=left> " . $rptlabels[184] . " " . $rptlabels[178] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['party_full_name_' . $lang]) : ('_________')) . "</b> 
//                          " . $rptlabels[179] . "  <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_' . $lang]) : ('__________')) . "</b> 
//
//                         " . $rptlabels[185] . $rptlabels[291] . " <b>Rs." . round($prpt_valuation) . "/- </b> 
//                         " . $rptlabels[354] . " <b>" . $art . "/- </b> 
//                          " . $rptlabels[355] . "      
//                         </td>"
//                    . " </tr> "
//                    . "</table>";
//            }

                $party_pres = $this->party_entry->query("SELECT iden.identificationtype_desc_en,p.identificationtype_desc_en as iddesc ,p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                        . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                        . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                        . " where p.token_no=$doc_token_no and p.is_presenter='Y'");

                $data = $this->ApplicationSubmitted->Query("select aps.token_no ,art.book_number,aps.doc_reg_no from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                           join ngdrstab_mst_article art on art.article_id=gen.article_id where aps.token_no=$doc_token_no");
                $book_no = '';
                $doc_no = '';
                if (!empty($data)) {
                    $doc_no = $data[0][0]['doc_reg_no'];
                    $book_no = $data[0][0]['book_number'];
                }

//            pr($party_pres);exit;

                $identifier = $this->identification->find('all', array('fields' => array('identification_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));
//            pr($identifier);exit;
                if (!empty($identifier[0]['identification']['aliasname_en'])) {

                    $idenalias = '(' . $lblalias . ':- <b>' . $identifier[0]['identification']['aliasname_en'] . '</b>' . ')';
//                   pr($idenalias);exit;
                } else {
                    $idenalias = '';
                }
                if (!empty($identifier)) {

                    $witness = $this->witness->find('all', array('fields' => array('witness_full_name_en'), 'conditions' => array('token_no' => $doc_token_no)));

                    if (!empty($witness[0]['witness']['aliasname_en'])) {

                        $witalias = '(' . $lblalias . ':- <b>' . $witness[0]['witness']['aliasname_en'] . '</b>' . ')';
//                   pr($alias_name);exit;
                    } else {
                        $witalias = '';
                    }
                    if (!empty($witness)) {
//                      pr(count($identifier));exit;
                        if (count($identifier) > 0) {
//                    pr($identifier);exit;
                            $html_design .= "<b>" . (isset($identifier[0]) ? ($identifier[0]['identification']['identification_full_name_en']) : ('_________')) . "</b> " . $idenalias . " " . $rptlabels[368] . "</b>

                       <b>" . (isset($witness[0]) ? ($witness[0]['witness']['witness_full_name_en']) : ('________')) . "</b> "
                                    . $witalias . " .  $rptlabels[369] ."
                                    . " </td>"
                                    . "</tr> </table>";
                        }


                        if (!empty($party_pres)) {
                            $html_design .= "<table width=100% border=1>"
                                    . "<tr>
                         <th style='text-align:center;'>" . $rptlabels[359] . "</th>
                        <th style='text-align:center;'>" . $rptlabels[360] . "   </th>
                        <th style='text-align:center;'> " . $rptlabels[361] . " </th>
                         <th style='text-align:center;'> " . $rptlabels[362] . " </th>
                     </tr>
                     <tr>
                     <td>   " . $party_pres[0][0]["party_full_name_en"] . "</td>
                     <td>" . $party_pres[0][0]["identificationtype_desc_en"] . "  </td>
                     <td> " . $party_pres[0][0]["iddesc"] . "</td>
                     <td> " . $party_pres[0][0]["pan_no"] . "</td>
                     </tr>
                     </table>";
                        }
                        $html_design .= "<table width=100%>"
                                . "<tr><td align=left> " . $rptlabels[358] . "</td></tr>"
                                . "</table><br><br>";


                        $html_design .= "<table width=100%>"
                                . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td><td align=left>" . $rptlabels[182] . " </td></tr>"
                                . "</table>";
                        //phpto to right

                        $html_design .= "<table><tr><td> " . $rptlabels[202] . " </td></tr></table>";

                        if (count($identifier) == 2) {
                            $html_design .= "<table><tr><td align=left>
                        1.  <b>" . (isset($identifier[1]) ? ($identifier[1]['identification']['identification_full_name_' . $lang]) : ('--')) . "</b>
                      " . $rptlabels[189] . "

                        2. <b>" . (isset($witness[1]) ? ($witness[1]['witness']['witness_full_name_' . $lang]) : ($witness[0]['witness']['witness_full_name_' . $lang])) . "</b>

                        
                      </td>"
                                    . "</tr> </table>";
                        }
                    }  //witness close
                }// identifier close
//              $html_design .= "<table><tr><td width = 20% align=right> <img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /></td></tr> </table>";

                $html_design .= "<table width=100%>"
                        . "<tr><td align=left > 1.-------------------</td><td align=left> 2.----------------------- </td>  <td rowspan=3 align=center> <img src='data:image/jpg;charset=utf-8;base64," . $image_codes1 . "' height='150px' width='200px' /><br>" . $buyername . " (" . $party[0][0]['category_name_' . $lang] . ")" . "</td> </tr>"
                        . "<tr><td align=left>(" . $rptlabels[289] . ")</td> <td align=left> (" . $rptlabels[290] . ")</td></tr>"
                        . "<tr><td align=left> ---------------------</td><td align=left> ------------------------- </td>   </td></tr>"
                        . "</table>";



                $html_design .= "<table width=100% border=0> <tr> <td width=50%>";

                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align=left> " . $rptlabels[192] . "  </td></tr></table> </table><br><br>";


//            $html_design .=" <td  width=20% height=140px style='border:1px solid gray'>" . $rptlabels[198] . "</td> </table>";  // photograph



                $html_design .= "<table width=100% border=0>"
                        . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td><td align=left>" . $rptlabels[364] . " </td></tr>"
                        . "</table>";


                $html_design .= "<table width=60% border=0><tr><td align=left>" . $rptlabels[193] . " :- $doc_no </td> <td> " . $rptlabels[194] . " :- $book_no   </td> </tr>"
                        . "<tr><td align=left> " . $rptlabels[195] . " :- </td> <td> " . $rptlabels[196] . " :- </td> </tr></table>";


                $html_design .= "<table width=100%><tr><td align=left>" . $rptlabels[197] . " </td> <tr> <td>&nbsp;</td></tr>   </tr>"
                        . "<tr><td align=right>" . $rptlabels[364] . " </td></tr> </table>";
//            pr($html_design);exit;
//            $html_design.="<td align=center width=30% style='border:1px solid gray'> " . $rptlabels[198] . "</td> </tr> </table>";
            }

            if (strtolower($view_flag) == 'pdf' || strtoupper($view_flag) == 'D') {
                $this->create_pdf($html_design, $rpt_title . "_" . $doc_token_no, '0', '');
            } else {
                return $html_design;
            }
        } catch (Exception $ex) {
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function income_tax() {
        try {
            // $this->autoRender = FALSE; 
            array_map([$this, 'loadModel'], ['office', 'party_entry']);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);

            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office_id = $this->Auth->User('office_id');
            $state = $this->Auth->User('state_id');
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
            $office = $this->office->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $state), 'order' => 'office_name_' . $lang));
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);
            $this->set('office', $office);

            if ($this->request->is('post')) {

                if ($this->request->data['income_tax']['report_flag'] == 'H') {
//                    $this->party_entry->query('delete from ngdrstab_temp_party_details_it');
//                    $this->party_entry->query('delete from ngdrstab_temp_property_details');

                    $to = "'" . date('Y-m-d', strtotime($this->request->data['income_tax']['to'])) . "'";
                    $from = "'" . date('Y-m-d', strtotime($this->request->data['income_tax']['from'])) . "'";
                    $val_amt = $this->request->data['income_tax']['val_amount'];
                    $office_id = $this->request->data['income_tax']['office_id'];
//                    $this->party_entry->query("select * from insert_party_final($from,$to,$val_amt,$office_id)");
//                    $this->party_entry->query("select * from insert_property_final($from,$to,$val_amt,$office_id)");
                    $this->income_tax_report($this->request->data);
                } else if ($this->request->data['income_tax']['report_flag'] == 'E') {

                    // $this->party_entry->query('delete from ngdrstab_temp_income_tax');
                    $this->party_entry->query(' ALTER SEQUENCE ngdrstab_trn_income_tax_xls_id_seq RESTART WITH 1');


                    $to = "'" . $this->request->data['income_tax']['to'] . "'";
                    $from = "'" . $this->request->data['income_tax']['from'] . "'";
                    $val_amt = $this->request->data['income_tax']['val_amount'];
                    $office_id = $this->request->data['income_tax']['office_id'];
                    //$this->party_entry->query("select * from insert_income_tax_details($from,$to,$val_amt,$office_id)");
                    $q = $this->party_entry->query("select * from ngdrstab_trn_income_tax_xls where office_id=" . $office_id . " and final_stamp_date>=" . $from . " and final_stamp_date<=" . $to);


                    $path1 = WWW_ROOT . 'files\income_tax.csv';
                    $fp1 = fopen($path1, 'w');




                    $header = array('Serial.no', 'Token Number', 'Article Name', 'Registration Date', 'Property District', 'Property Taluka', 'Property Village', 'Gov. Body',
                        'Usage Category', 'Usage Sub Category', 'Valuation Amount', 'Property Address', 'Pincode', 'Total Fee', 'Paid Amount', 'Office Name', 'SRO Name',
                        'SRO Mobile', 'SRO Email', 'Office Address', 'Party Id', 'Party Birth Date', 'Party Mobile', 'Party Email', 'Party PAN', 'Location', 'Gender', 'Occupation',
                        'Party Type', 'Party Category', 'Party District', 'Party Taluka', 'Party Village', 'Party Full Name', 'Party Father Name', 'Party Mother Name',
                        'Party Id Proof', 'Party Pin Code', 'State Name', 'Party Address', 'Party Share(%)');
                    fputcsv($fp1, $header);

                    if (count($q) > 0) {

                        for ($i = 0; $i < count($q); $i++) {
                            fputcsv($fp1, $q[$i][0]);
                        }
                    }
                    $file = 'income_tax.csv';
                    $this->response->file($path1, array('download' => true, 'name' => $file));
                    return $this->response->download($file);
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    function income_tax_report($frmData) {
        try {
            $this->autoRender = FALSE;

            array_map([$this, 'loadModel'], ['party_entry']);
            $to = "'" . date('Y-m-d', strtotime($frmData['income_tax']['to'])) . "'";
            $from = "'" . date('Y-m-d', strtotime($frmData['income_tax']['from'])) . "'";

            // $party_detail = $this->party_entry->query('select * from ngdrstab_temp_party_details_it');
            $property = $this->party_entry->query("select * from ngdrstab_trn_property_details_incometax where office_id=" . $frmData['income_tax']['office_id'] . " and final_stamp_date>=" . $from . " and final_stamp_date<=" . $to);

            $html_design = "<style>td{padding:5px;} </style>"
                    . "<h2 align=center> INCOME TAX REPORT</h2>"
                    . "<h2 align=center> Government Of Punjab</h2>"
                    . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['income_tax']['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['income_tax']['to'])) . "  </td><td align=center><b>Valuation Amount Greater Than:</b> " . $frmData['income_tax']['val_amount'] . " Rs.  </td></tr></table>";

            $html_design .= "</table></div>";

            $html_design .= "<style>td{padding:5px;} </style>";
            $i = 1;
            foreach ($property as $prop) {

                $party_detail = $this->party_entry->query('select * from ngdrstab_trn_party_details_incometax where token_no=?', array($prop[0]['token_no']));
                $html_design .= "<div style='border:2px; border-style: solid; padding-left:5px; padding-right:5px; padding-bottom:5px;'>"
                        . "<table width='100%'> <tr><td>Serial No.:" . $i . "</td><td><h2 align=center> Property Details </h2></td></tr></table>"
                        . "<table border=1 style='border-collapse:collapse;' width=100%>"
                        . "<tr>"
                        . "<th style='text-align:center;' >Sr. No.</th>"
                        . "<th style='text-align:center;' >Office Name</th>"
                        . "<th style='text-align:center;' >Office Address</th>"
                        . "<th style='text-align:center;' >SRO Name</th>"
                        . "<th style='text-align:center;' >SRO Mobile</th>"
                        . "<th style='text-align:center;' >SRO Email</th>"
                        . "<th style='text-align:center;' >Registration No.</th>"
                        . "<th style='text-align:center;' >Registration Date</th>"
                        . "<th style='text-align:center;' >Article Name</th>"
                        . "<th style='text-align:center;'>Property Type</th>"
                        . "<th style='text-align:center;'>District Name</th>"
                        . "<th style='text-align:center;'>Taluka Name</th>"
                        . "<th style='text-align:center;'>Village Name</th>"
                        . "<th style='text-align:center;'>Municiple Corporation</th>"
                        . "<th style='text-align:center;'>Property Address</th>"
                        . "<th style='text-align:center;'>Valuation/Consideration Amount(Rs.)</th>"
                        . "<th style='text-align:center;'>Total Calculated Fee</th>"
                        . "<th style='text-align:center;'>Total Paid Fee</th>"
                        . "</tr>"
                        . "<tr>"
                        . "<td style='text-align:center;' >" . $i . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['office_name_en'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['off_address'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['sro_name'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['sro_mobile'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['sro_email'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['doc_reg_no'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['final_stamp_date'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['article_desc_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['usage_sub_catg_desc_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['district_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['taluka_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['village_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['governingbody_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['property_address'] . "</td>"
                        . "<td style='text-align:center;'>" . round($prop[0]['val_amount']) . "  -/</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['total_fee'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['paid_amount'] . "</td>"
                        . "</tr>";


                $html_design .= "</table><h2 align=center> Party Details </h2>";
                $j = 1;
                $html_design .= "<table border=1 style='border-collapse:collapse;' width=100%>"
                        . "<tr>"
                        . "<th style='text-align:center;' >Sr. No.</th>"
                        . "<th style='text-align:center;'>Party Type</th>"
                        . "<th style='text-align:center;'>Category Name</th>"
                        . "<th style='text-align:center;' >Party Name</th>"
                        . "<th style='text-align:center;' >Date Of Birth</th>"
                        . "<th style='text-align:center;' >Mobile Number</th>"
                        . "<th style='text-align:center;'>Email</th>"
                        . "<th style='text-align:center;'>UID</th>"
                        . "<th style='text-align:center;'>PAN</th>"
                        . "<th style='text-align:center;'>District Name</th>"
                        . "<th style='text-align:center;'>Taluka Name</th>"
                        . "<th style='text-align:center;'>Village Name</th>"
                        . "<th style='text-align:center;'>Gender</th>"
                        . "<th style='text-align:center;'>Occupation</th>"
                        . "<th style='text-align:center;'>Address</th>"
                        . "<th style='text-align:center;'>Share in Percentage(%)</th>"
                        . "</tr>";

                foreach ($party_detail as $party) {
                    $html_design .= "<tr>"
                            . "<td style='text-align:center;' >" . $j++ . "</td>"
                            . "<td style='text-align:center;' >" . $party[0]['party_type_desc_en'] . "</td>"
                            . "<td style='text-align:center;' >" . $party[0]['category_name_en'] . "</td>"
                            . "<td style='text-align:center;' >" . $party[0]['party_full_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['dob'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['mobile_no'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['email_id'] . "</td>"
                            . "<td style='text-align:center;'>&nbsp;</td>"
                            . "<td style='text-align:center;'>" . $party[0]['pan_no'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['district_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['taluka_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['village_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['gender_desc_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['occupation_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['address'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['share_percentage'] . "</td>"
                            . "</tr>";
                }
                $html_design .= "</table></div><div>&nbsp;</div>";
                $i++;
            }

            echo $html_design;
            exit;
            $this->create_pdf($html_design, 'Income Tax', 'A4-L', '');
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

//sro

    public function incometax_old() {
        try {
            // $this->autoRender = FALSE; 
            array_map([$this, 'loadModel'], ['office', 'party_entry']);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);

            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office_id = $this->Auth->User('office_id');

            $state = $this->Auth->User('state_id');
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
            $office = $this->office->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $state), 'order' => 'office_name_' . $lang));
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);
            $this->set('office', $office);

            if ($this->request->is('post')) {

                if ($this->request->data['incometax']['report_flag'] == 'H') {
//                    $this->party_entry->query('delete from ngdrstab_temp_party_details_it');
//                    $this->party_entry->query('delete from ngdrstab_temp_property_details');
//                    $office_id = $this->Auth->User('office_id');
                    $to = "'" . date('Y-m-d', strtotime($this->request->data['incometax']['to'])) . "'";
                    $from = "'" . date('Y-m-d', strtotime($this->request->data['incometax']['from'])) . "'";
                    $val_amt = $this->request->data['incometax']['val_amount'];
//                    $office_id = $this->request->data['income_tax']['office_id'];
//                    $this->party_entry->query("select * from insert_party_final($from,$to,$val_amt,$office_id)");
//                    $this->party_entry->query("select * from insert_property_final($from,$to,$val_amt,$office_id)");
                    $this->income_tax_report_SRO_Wise($this->request->data);
                } else if ($this->request->data['incometax']['report_flag'] == 'E') {

                    // $this->party_entry->query('delete from ngdrstab_temp_income_tax');
                    $this->party_entry->query(' ALTER SEQUENCE ngdrstab_trn_income_tax_xls_id_seq RESTART WITH 1');


                    $to = "'" . $this->request->data['incometax']['to'] . "'";
                    $from = "'" . $this->request->data['incometax']['from'] . "'";
                    $val_amt = $this->request->data['incometax']['val_amount'];
//                    $office_id = $this->request->data['income_tax']['office_id'];
                    //$this->party_entry->query("select * from insert_income_tax_details($from,$to,$val_amt,$office_id)");
                    $q = $this->party_entry->query("select * from ngdrstab_trn_income_tax_xls where office_id=" . $office_id . " and final_stamp_date>=" . $from . " and final_stamp_date<=" . $to);


                    $path1 = WWW_ROOT . 'files\income_tax.csv';
                    $fp1 = fopen($path1, 'w');




                    $header = array('Serial.no', 'Token Number', 'Article Name', 'Registration Date', 'Property District', 'Property Taluka', 'Property Village', 'Gov. Body',
                        'Usage Category', 'Usage Sub Category', 'Valuation Amount', 'Property Address', 'Pincode', 'Total Fee', 'Paid Amount', 'Office Name', 'SRO Name',
                        'SRO Mobile', 'SRO Email', 'Office Address', 'Party Id', 'Party Birth Date', 'Party Mobile', 'Party Email', 'Party PAN', 'Location', 'Gender', 'Occupation',
                        'Party Type', 'Party Category', 'Party District', 'Party Taluka', 'Party Village', 'Party Full Name', 'Party Father Name', 'Party Mother Name',
                        'Party Id Proof', 'Party Pin Code', 'State Name', 'Party Address', 'Party Share(%)');
                    fputcsv($fp1, $header);

                    if (count($q) > 0) {

                        for ($i = 0; $i < count($q); $i++) {
                            fputcsv($fp1, $q[$i][0]);
                        }
                    }
                    $file = 'income_tax.csv';
                    $this->response->file($path1, array('download' => true, 'name' => $file));
                    return $this->response->download($file);
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    function income_tax_report_SRO_Wise($frmData) {
        try {
            $this->autoRender = FALSE;
            $office_id = $this->Auth->User('office_id');
            array_map([$this, 'loadModel'], ['party_entry']);
            $to = "'" . date('Y-m-d', strtotime($frmData['incometax']['to'])) . "'";
            $from = "'" . date('Y-m-d', strtotime($frmData['incometax']['from'])) . "'";

            // $party_detail = $this->party_entry->query('select * from ngdrstab_temp_party_details_it');
            $property = $this->party_entry->query("select * from ngdrstab_trn_property_details_incometax where office_id=" . $office_id . " and final_stamp_date>=" . $from . " and final_stamp_date<=" . $to);

            $html_design = "<style>td{padding:5px;} </style>"
                    . "<h2 align=center> INCOME TAX REPORT</h2>"
                    . "<h2 align=center> Government Of Punjab</h2>"
                    . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($frmData['incometax']['from'])) . "  </td> <td align=center><b>To Date:</b> " . date('d-M-Y', strtotime($frmData['incometax']['to'])) . "  </td><td align=center><b>Valuation Amount Greater Than:</b> " . $frmData['incometax']['val_amount'] . " Rs.  </td></tr></table>";

            $html_design .= "</table></div>";

            $html_design .= "<style>td{padding:5px;} </style>";
            $i = 1;
            foreach ($property as $prop) {

                $party_detail = $this->party_entry->query('select * from ngdrstab_trn_party_details_incometax where token_no=?', array($prop[0]['token_no']));
                $html_design .= "<div style='border:2px; border-style: solid; padding-left:5px; padding-right:5px; padding-bottom:5px;'>"
                        . "<table width='100%'> <tr><td>Serial No.:" . $i . "</td><td><h2 align=center> Property Details </h2></td></tr></table>"
                        . "<table border=1 style='border-collapse:collapse;' width=100%>"
                        . "<tr>"
                        . "<th style='text-align:center;' >Sr. No.</th>"
                        . "<th style='text-align:center;' >Office Name</th>"
                        . "<th style='text-align:center;' >Office Address</th>"
                        . "<th style='text-align:center;' >SRO Name</th>"
                        . "<th style='text-align:center;' >SRO Mobile</th>"
                        . "<th style='text-align:center;' >SRO Email</th>"
                        . "<th style='text-align:center;' >Registration No.</th>"
                        . "<th style='text-align:center;' >Registration Date</th>"
                        . "<th style='text-align:center;' >Article Name</th>"
                        . "<th style='text-align:center;'>Property Type</th>"
                        . "<th style='text-align:center;'>District Name</th>"
                        . "<th style='text-align:center;'>Taluka Name</th>"
                        . "<th style='text-align:center;'>Village Name</th>"
                        . "<th style='text-align:center;'>Municiple Corporation</th>"
                        . "<th style='text-align:center;'>Property Address</th>"
                        . "<th style='text-align:center;'>Valuation/Consideration Amount(Rs.)</th>"
                        . "<th style='text-align:center;'>Total Calculated Fee</th>"
                        . "<th style='text-align:center;'>Total Paid Fee</th>"
                        . "</tr>"
                        . "<tr>"
                        . "<td style='text-align:center;' >" . $i . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['office_name_en'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['off_address'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['sro_name'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['sro_mobile'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['sro_email'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['doc_reg_no'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['final_stamp_date'] . "</td>"
                        . "<td style='text-align:center;' >" . $prop[0]['article_desc_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['usage_sub_catg_desc_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['district_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['taluka_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['village_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['governingbody_name_en'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['property_address'] . "</td>"
                        . "<td style='text-align:center;'>" . round($prop[0]['val_amount']) . "  -/</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['total_fee'] . "</td>"
                        . "<td style='text-align:center;'>" . $prop[0]['paid_amount'] . "</td>"
                        . "</tr>";


                $html_design .= "</table><h2 align=center> Party Details </h2>";
                $j = 1;
                $html_design .= "<table border=1 style='border-collapse:collapse;' width=100%>"
                        . "<tr>"
                        . "<th style='text-align:center;' >Sr. No.</th>"
                        . "<th style='text-align:center;'>Party Type</th>"
                        . "<th style='text-align:center;'>Category Name</th>"
                        . "<th style='text-align:center;' >Party Name</th>"
                        . "<th style='text-align:center;' >Date Of Birth</th>"
                        . "<th style='text-align:center;' >Mobile Number</th>"
                        . "<th style='text-align:center;'>Email</th>"
                        . "<th style='text-align:center;'>UID</th>"
                        . "<th style='text-align:center;'>PAN</th>"
                        . "<th style='text-align:center;'>District Name</th>"
                        . "<th style='text-align:center;'>Taluka Name</th>"
                        . "<th style='text-align:center;'>Village Name</th>"
                        . "<th style='text-align:center;'>Gender</th>"
                        . "<th style='text-align:center;'>Occupation</th>"
                        . "<th style='text-align:center;'>Address</th>"
                        . "<th style='text-align:center;'>Share in Percentage(%)</th>"
                        . "</tr>";

                foreach ($party_detail as $party) {
                    $html_design .= "<tr>"
                            . "<td style='text-align:center;' >" . $j++ . "</td>"
                            . "<td style='text-align:center;' >" . $party[0]['party_type_desc_en'] . "</td>"
                            . "<td style='text-align:center;' >" . $party[0]['category_name_en'] . "</td>"
                            . "<td style='text-align:center;' >" . $party[0]['party_full_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['dob'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['mobile_no'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['email_id'] . "</td>"
                            . "<td style='text-align:center;'>&nbsp;</td>"
                            . "<td style='text-align:center;'>" . $party[0]['pan_no'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['district_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['taluka_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['village_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['gender_desc_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['occupation_name_en'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['address'] . "</td>"
                            . "<td style='text-align:center;'>" . $party[0]['share_percentage'] . "</td>"
                            . "</tr>";
                }
                $html_design .= "</table></div><div>&nbsp;</div>";
                $i++;
            }

            echo $html_design;
            exit;
            $this->create_pdf($html_design, 'Income Tax', 'A4-L', '');
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function rpt_rejected_doc() {
        try {
            array_map(array($this, 'loadModel'), array('genernal_info'));

            $office_id = $this->Auth->User('office_id');
            $laug = $this->Session->read("sess_langauge");
            $data = $this->genernal_info->Query("SELECT app.token_no,article.article_desc_$laug, party.party_full_name_$laug
            FROM ngdrstab_trn_application_submitted app
            join ngdrstab_trn_generalinformation info on app.token_no=info.token_no
            left outer join ngdrstab_mst_article article on info.article_id=article.article_id
            left outer join ngdrstab_trn_party_entry_new party on app.token_no=party.token_no and party.is_presenter='Y'
            left outer join ngdrstab_trn_document_status trnstatus ON trnstatus.token_no=app.token_no  and trnstatus.id=(SELECT MAX(ID) FROM ngdrstab_trn_document_status WHERE token_no=app.token_no)
            where app.office_id=$office_id and trnstatus.status_id=7");
            $this->set(compact('laug', 'data'));
//        pr($data);exit;
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function disp_fees() {
        $user_id = $this->Auth->User("user_id");
        $stateid = $this->Auth->User("state_id");
        $ip = $_SERVER['REMOTE_ADDR'];
        $created_date = date('Y-m-d H:i:s');
        $lang = $this->Session->read("sess_langauge");
        $this->set('lang', $lang);

        $this->loadModel('article');
        $this->loadModel('office');
        $this->loadModel('ApplicationSubmitted');
        $this->loadModel('genernal_info');

        $articlelist = $this->article->find('list', array('fields' => array('article_id', 'article_desc_' . $lang), 'conditions' => array('display_flag' => 'Y'), 'order' => 'article_desc_' . $lang));
        $this->set('articlelist', $articlelist);

        if ($this->request->is('post')) {
            //pr($this->request->data);
            $frmdate = $this->request->data['disp_fees']['from'];
            $todate = $this->request->data['disp_fees']['to'];
            $article_id = $this->request->data['disp_fees']['article_id'];
            $fromdt = date('Y-m-d', strtotime($frmdate));
            $todt = date('Y-m-d', strtotime($todate));

            //$datafromappln=$this->ApplicationSubmitted->query("select office_name_en,final_doc_reg_no,date(final_stamp_date),trnappn.token_no,trngen.article_id from ngdrstab_trn_generalinformation trngen inner join ngdrstab_trn_application_submitted trnappn on trngen.token_no=trnappn.token_no inner join ngdrstab_mst_office mstoff on trnappn.office_id=mstoff.office_id where final_stamp_flag='Y' and article_id='$article_id' and date(final_stamp_date)>='$fromdt' and date(final_stamp_date)<='$todt' order by trnappn.office_id,final_stamp_date ");
            //pr($datafromappln);
            //echo count($datafromappln);
        }
        //pr($articlelist);
    }

    public function dispfeerpt() {
        $user_id = $this->Auth->User("user_id");
        $stateid = $this->Auth->User("state_id");
        $ip = $_SERVER['REMOTE_ADDR'];
        $created_date = date('Y-m-d H:i:s');
        $lang = $this->Session->read("sess_langauge");
        $this->set('lang', $lang);

        $article_id = $_POST['article_id'];
        $frmdate = $_POST['fromdt'];
        $todate = $_POST['todt'];

        $fromdt_form = date('Y-m-d', strtotime($frmdate));
        $todt_form = date('Y-m-d', strtotime($todate));

        $this->loadModel('article');
        $this->loadModel('office');
        $this->loadModel('ApplicationSubmitted');
        $this->loadModel('genernal_info');
        $this->loadModel('payment');

        $articlenm = $this->article->query("select * from ngdrstab_mst_article where article_id='$article_id'");
        //pr($articlenm);
        $arnm = $articlenm[0][0]['article_desc_en'];

        $off_sect = $this->ApplicationSubmitted->query("select distinct(trnappn.office_id),office_name_en from ngdrstab_trn_generalinformation trngen inner join ngdrstab_trn_application_submitted trnappn on trngen.token_no=trnappn.token_no inner join ngdrstab_mst_office mstoff on trnappn.office_id=mstoff.office_id where final_stamp_flag='Y' and article_id='$article_id' and date(final_stamp_date)>='$fromdt_form' and date(final_stamp_date)<='$todt_form' order by trnappn.office_id");
        //pr($off_sect);
        //echo sizeof($off_sect);
        //pr($datafromappln);
        $dispcolf = '<table border="0"  width="90%" align="center" style="background-color:#F0F0F0;"><tbody><tr style="background-color: #c6dfed; color: black;"><td><b> Article Name : ' . $arnm . '</b></td><td><b> Date From : ' . $frmdate . ' To : ' . $todate . '</b></td></tr></tbody></table><br>';

        for ($i = 0; $i < sizeof($off_sect); $i++) {
            $offid = $off_sect[$i][0]['office_id'];
            $office_name_en = $off_sect[$i][0]['office_name_en'];
            $dispcolf = $dispcolf . '<table border="1"  width="90%" align="center" style="background-color:#F0F0F0;"><tbody><tr style="background-color: #72AFD2; color: white;"><td colspan="3"><b> Office Name : ' . $office_name_en . '</b></td></tr></tbody>
			<tr><td align="center"><b>Registration Number</b></td><td align="center"><b>Date</b></td><td align="center"><b>Amount</b></td></tr>';
            $datafromappln = $this->ApplicationSubmitted->query("select office_name_en,final_doc_reg_no,date(final_stamp_date),trnappn.token_no,trngen.article_id from ngdrstab_trn_generalinformation trngen inner join ngdrstab_trn_application_submitted trnappn on trngen.token_no=trnappn.token_no inner join ngdrstab_mst_office mstoff on trnappn.office_id=mstoff.office_id where final_stamp_flag='Y' and article_id='$article_id' and date(final_stamp_date)>='$fromdt_form' and date(final_stamp_date)<='$todt_form' and trnappn.office_id='$offid' order by trnappn.office_id,final_stamp_date ");
            //pr($datafromappln);
            $sumtot_disp = 0;
            for ($j = 0; $j < sizeof($datafromappln); $j++) {
                $regno = $datafromappln[$j][0]['final_doc_reg_no'];
                $ddtt = $datafromappln[$j][0]['date'];
                $tokenno = $datafromappln[$j][0]['token_no'];
                $datetodisplay = date('d-m-Y', strtotime($ddtt));
                $pdetails = $this->payment->query("select sum(pamount) as pamtsum from ngdrstab_trn_payment_details where token_no='$tokenno'");
                //pr($pdetails);
                $pamt_sum = $pdetails[0][0]['pamtsum'];
                $sumtot_disp = $sumtot_disp + $pamt_sum;
                $dispcolf = $dispcolf . '<tr><td>' . $regno . '</td><td>' . $datetodisplay . '</td><td align="right">' . $pamt_sum . '</td></tr>';
            }
            $dispcolf = $dispcolf . '<tr style="background-color: #c6dfed;"><td colspan="2" align="right"><b>Total Amount  &nbsp;</b></td><td align="right"><b>' . $sumtot_disp . '</b></td></tr>';
        }
        $dispcolf = $dispcolf . '</table>';
        echo $dispcolf;
        exit;
    }

    function rptcertificate($doc_token_no = null, $view_flag = 'pdf') {
        $state_id = $this->Auth->user('state_id');
        switch ($state_id) {
            case 20:
                return $this->rptcertificate_20($doc_token_no);
                break;
            case 31:
                return $this->rptcertificate_31($doc_token_no);
                break;
            default :
                return 'Not configured for state id ' . $state_id;
        }
    }

    function rptcertificate_31($doc_token_no = null) {
        try {
            $this->autoRender = FALSE;
//         $doc_token_no = base64_decode($doc_token_no);
//          $doc_token_no =20180000024292;
            array_map(array($this, 'loadModel'), array('payment', 'SroDependentFields', 'ApplicationSubmitted', 'file_config', 'article',
                'stamp_duty', 'identification', 'witness', 'party', 'ReportLabel', 'genernalinfoentry', 'identification', 'valuation',
                'article', 'party_entry', 'witness', 'property_details_entry', 'TrnBehavioralPatterns', 'valuation_details'));
            $rpt_title = 'Deed Enorsment Sample Template';

            $userid = $this->Session->read("citizen_user_id");

            $path = $this->file_config->find('first', array('fields' => array('filepath')));
//             pr($path);exit;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $doc_lang = ($this->Session->read("doc_lang")) ? $this->Session->read("doc_lang") : $doc_lang;
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }


            $rpt_data = $this->party_entry->Query("select app.final_doc_reg_no,article.book_number,app.stamp1_date,app.stamp2_date,app.stamp3_date,app.stamp4_date,app.stamp5_date,article.book_number, app.doc_reg_no, article.article_desc_$lang, party_fname_$lang ||' '|| party_mname_$lang ||' '|| party_lname_$lang as presenter_name from ngdrstab_trn_generalinformation geninfo
                    left join ngdrstab_trn_party_entry_new party on party.token_no=geninfo.token_no and is_presenter='Y'
                    left join ngdrstab_mst_article article on article.article_id=geninfo.article_id       
                    left join ngdrstab_trn_application_submitted app on app.token_no=?       
                    where  geninfo.token_no=?", array($doc_token_no, $doc_token_no));

//            pr($rpt_data);exit;
//            
            $html_design = '';
//            $off='';
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 6)));
//            pr($rpt_data[0][0]['doc_reg_no']);exit;
            list($num, $char, $num1) = split('[-]', $rpt_data[0][0]['doc_reg_no']);
            $html_design .= "<h4 align='left'> Document Serial No:-<b>" . $rpt_data[0][0]['doc_reg_no'] . "</b> </h4> "
//                    . "<h4 align='left'> Document Serial No:-<b>" . $num1 . " /" . $num . "</b> </h4> "
                    . "<table style='border: 2px solid black;' width='100%'>"
//                    . "<tr><td style='text-align: center;'> <b>Certificate of Registration </b></td></tr>"
                    . "<tr><td style='text-align: center;'>Book :- " . $rpt_data[0][0]['book_number'] . " Document</td></tr>"
                    . "<tr><td style='text-align: center;'>Registration Number :- <b>" . $rpt_data[0][0]['final_doc_reg_no'] . " </b>  </td></tr>"

//                       . "<tr><td style='text-align: center;'>CD Number :-  on </td></tr>"
                    . "<tr><td style='text-align: center;'>Date : " . date('d-M-Y') . " </td></tr>"
                    . "</table>";
            $html_design .= "<br><br><br><br><table width=100%><tr><td style='text-align: center;'><b>Sub Registrar(" . $off . ")</b> </td></tr> </table>";
//            echo $html_design;
//            exit;
            $this->create_pdf($html_design, 'Final Certificate', 'A4-L', '');
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    function rptcertificate_20($doc_token_no = null) {
        try {
            $this->autoRender = FALSE;
//                 print_r("hii");exit;      
            array_map([$this, 'loadModel'], ['party', 'ApplicationSubmitted', 'ReportLabel', 'genernalinfoentry']);
            $lang = 'en';
            //$doc_token_no = base64_decode($doc_token_no);
//            $doc_token_no = 20180000024291;
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : $lang;
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 19)));
//            print_r($rptlabels);exit;
            $party_pres = $this->party->query("SELECT p.village_id,p.address_$lang, p.address2_$lang,aps.doc_reg_no,aps.final_doc_reg_no,aps.doc_reg_date,aps.final_stamp_date,iden.identificationtype_desc_en,p.identificationtype_desc_en as iddesc "
                    . ",p.pan_no,p.father_full_name_$lang,p.party_full_name_en,pt.party_type_flag, p.id,p.party_id,p.photo_img,p.biometric_img FROM ngdrstab_trn_party_entry_new p"
                    . " left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id "
                    . " left join ngdrstab_trn_application_submitted aps on aps.token_no=p.token_no"
                    . "  left join ngdrstab_mst_identificationtype  iden on iden.identificationtype_id=p.identificationtype_id"
                    . " where p.token_no=$doc_token_no and p.is_presenter='Y'");
//            print_r($party_pres);exit
//            
//            $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
            $presenter_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en', 'representive_full_name_en'),
                'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));
            $presenter = NULL;
            if (!empty($presenter_name)) {
                if ($presenter_name[0]['party']['party_full_name_en'] != NULL) {
                    $presenter = $presenter_name[0]['party']['party_full_name_en'];
                    pr('ho');
                } else {
                    $presenter = $presenter_name[0]['party']['representive_full_name_en'];
                    pr('hfsaao');
                }
            } else {
                $presenter = '___';
            }
//                'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));
            $executer_name = $this->party->find('all', array('fields' => array('party_full_name_en', 'father_full_name_en'),
                'conditions' => array('token_no' => $doc_token_no, 'is_executer' => 'Y')));
            $alias = $this->party->find('all', array('fields' => array('alias_name_en'), 'conditions' => array('token_no' => $doc_token_no, 'is_presenter' => 'Y')));
            $officename = ClassRegistry::init('ApplicationSubmitted')->find('all', array('fields' => array('off.office_name_en'),
                'joins' => array(array('table' => 'ngdrstab_mst_office', 'alias' => 'off', 'conditions' => array('off.office_id=ApplicationSubmitted.office_id'))), 'conditions' => array('ApplicationSubmitted.token_no=' . $doc_token_no)));
            if (!empty($officename)) {
                $off = $officename[0]['off']['office_name_en'];
            } else {
                $off = NULL;
            }
            $rptData = $this->genernalinfoentry->get_general_info($lang, $doc_token_no);
            $rptData = $rptData[0];
            $data = $this->ApplicationSubmitted->Query("select aps.token_no ,art.book_number,aps.doc_reg_no,volno.volume_number,volno.page_number_start,volno.page_number_end from ngdrstab_trn_application_submitted aps
                                                           join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                                           join ngdrstab_mst_article art on art.article_id=gen.article_id 
                                                           LEFT JOIN ngdrstab_trn_volume_number_page_number_entry volno ON volno.token_no=aps.token_no
                                                           where aps.token_no=$doc_token_no");

            $book_no = '____';
            $doc_no = '____';
            $vol_no = '___';
            $page_no_start = '____';
            $page_no_end = '____';
            $serial_no = '____';
            if (!empty($data)) {
                $doc_no = $data[0][0]['doc_reg_no'];
                $book_no = $data[0][0]['book_number'];
                $vol_no = $data[0][0]['volume_number'];
                $page_no_start = $data[0][0]['page_number_start'];
                $page_no_end = $data[0][0]['page_number_end'];
                $serial_no = $data[0][0]['doc_reg_no'];
            }

            $doc_reg_date = '____';
            if (!empty($party_pres[0][0]['doc_reg_date'])) {
                $doc_reg_date = date('d-M-Y', strtotime($party_pres[0][0]['doc_reg_date']));
            }
            $doc_reg_date_final = '____';
            if (!empty($party_pres[0][0]['final_stamp_date'])) {
                $doc_reg_date_final = date('d-M-Y', strtotime($party_pres[0][0]['final_stamp_date']));
            }
            $final_doc_reg_no = '___';
            if (!empty($party_pres[0][0]['final_doc_reg_no'])) {
                $final_doc_reg_no = $party_pres[0][0]['final_doc_reg_no'];
            }

            $paddress = $this->party->query("select distinct(mp.field_id), mp.pattern_desc_en ,tp.field_value_en
                from  ngdrstab_conf_behavioral_patterns mp
                JOIN  ngdrstab_trn_behavioral_patterns tp ON tp.field_id=mp.field_id
                where tp.mapping_ref_id=2 and tp.mapping_ref_val=? and tp.token_no=?", array($party_pres[0][0]['party_id'], $doc_token_no));

// print_r($paddress);exit;
            $address_str = "____";
            if (!empty($paddress)) {
                $address_str = "";

                foreach ($paddress as $field) {
                    $address_str .= "," . $field[0]['pattern_desc_en'] . " " . $field[0]['field_value_en'];
                }
                if (!empty($address_str)) {
                    $address_str = substr($address_str, 1);
                }
            }
            if ($party_pres[0][0]['village_id'] == null) {
                $address_str = $party_pres[0][0]['address_' . $lang] . ' ,' . $party_pres[0][0]['address2_' . $lang];
//                   pr($party_address);exit;
            }
            $html_design = "<div style='border:2px; border-style: solid; padding-left:5px; padding-right:5px; padding-bottom:5px;'><style>td{padding:25px;} </style>"
                    . "<h1 align=center> CERTIFICATE</h1>"
                    . "<h2 align=center> Office of the " . $off . "</h2>";

            $html_design .= "<table width=80% align=center>"
                    . "<tr><td align=left style='line-height: 1.6;'> This <b>" . (($rptData) ? ($rptData['article']['article_desc_' . $lang]) : ('___')) . "</b> was presented before the "
                    . "registering officer on date <b>" . $doc_reg_date . "</b> by <b>" . $presenter . "</b>,"
                    . " S/O, D/O, W/O <b>" . (($presenter_name) ? ($presenter_name[0]['party']['father_full_name_en']) : ('___')) . "</b>"
                    . " resident of " . $address_str . ". <br>This deed was registered as Serial No:- <b> " . $serial_no . "</b> , Document No:- <b> " . $final_doc_reg_no . "</b> in " . $rptlabels[194] . " :- <b>" . $book_no . "</b>,"
                    . "" . $rptlabels[195] . " :-  " . $vol_no . "   from " . $rptlabels[196] . " :- " . $page_no_start . " to " . $page_no_end . " at, office of  <b>" . $off . "</b></td></tr>"
                    . "</table>";

            $html_design .= "<br><br><br><table width=80% align=center>"
                    . "<tr><td align=left>" . $rptlabels[191] . ":-  <b>" . date('d-M-Y') . "</b> </td><td align=right> <b> Registering Officer </b></td></tr> </table><br><div>";
//$fp = fopen('/tmp/testreport.txt', 'w');
//fwrite($fp, $html_design);
//fclose($fp);
//           $html_design=  mb_convert_encoding($html_design, 'UTF-8','UTF-8');

            $this->create_pdf($html_design, 'Certificate', 'A4-L', '');
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function rpt_total_registration_stamp_old() {
        try {
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            array_map([$this, 'loadModel'], ['ReportLabel']);
            $this->set('hfname', NULL);
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang)));
            $stateid = $this->Auth->User('state_id');
            $this->set('District', ClassRegistry::init('District')->find('list', array('fields' => array('district_id', 'district_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => array('district_name_' . $lang => 'ASC'))));

            $fieldlist = array();
            $fieldlist['district_id']['select'] = 'is_select_req'; // must require
            $fieldlist['startDate']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
                $errarr = $this->validatedata($this->request->data['rpt_total_registration_stamp'], $fieldlist);

                if ($this->ValidationError($errarr)) {
                    $distname = $_POST['hfname'];
                    $dist_id = $this->request->data['rpt_total_registration_stamp']['district_id'];
                    $startDate = $this->request->data['rpt_total_registration_stamp']['startDate'];
                    $month = date("m", strtotime($startDate));
                    $year = date("Y", strtotime($startDate));
                    $newDate = date("F, Y", strtotime($startDate));
                    $startdate = $year . '-' . $month . '-01';
                    $time = strtotime($startdate);
                    $enddate = date("Y-m-d", strtotime("+1 month", $time));

                    $result = $this->ReportLabel->Query("select info.district_id,article.article_id,article.article_desc_en,item.fee_item_desc_en,item.account_head_code,sum(pamount) as pamount from ngdrstab_trn_payment_details pay
            JOIN ngdrstab_mst_article_fee_items as item ON item.account_head_code=pay.account_head_code and item.fee_param_type_id=2
            JOIN ngdrstab_trn_generalinformation as info ON info.token_no=pay.token_no
            JOIN ngdrstab_mst_article as article ON article.article_id=info.article_id
           where pay.pdate >= Date('$startdate') and pay.pdate < Date('$enddate') and item.account_head_code IN ('0030045501','0030063301') and info.district_id=$dist_id
            group by info.district_id,article.article_id,article.article_desc_en,item.fee_item_desc_en,item.account_head_code order by item.account_head_code");
//            pr($result);exit;
                    if (!empty($result)) {
                        $data = array();
                        foreach ($result as $key => $value) {
                            for ($j = 0; $j < count($result); $j++) {
                                if ($value[0]['article_id'] == $result[$j][0]['article_id']) {
                                    $data[$value[0]['article_id']]['article_desc_en'] = $result[$j][0]['article_desc_en'];
                                    $data[$value[0]['article_id']][$result[$j][0]['fee_item_desc_en']] = $result[$j][0]['pamount'];
                                }
                            }
                        }

                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center style='color:#641E16;'> MONTHLY REPORT ON COLLECTION FOR REGISTRATION FEE AND STAMP DUTY </h2>"
                                . "<hr style color:red;>"
                                . "<table  align=center border=0 width=60%>"
                                . "<tr>"
                                . " <td align=center><h3><b> Name of District : </b> " . $distname . "  </h3></td>"
                                . "</tr>"
                                . "<tr>"
                                . " <td align=center><b><h3>Report for the month of:</b> " . $newDate . "  </h3></td></tr></table>"
                                . "<br/>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;' >Sr No.</th>"
                                . "<th style='text-align:center;'>Article Name</th>"
                                . "<th style='text-align:center;'>Registraion Fee</th>"
                                . "<th style='text-align:center;'>Stamp Duty</th>"
                                . "<th style='text-align:center;'>Total</td>"
                                . "</tr>";

                        $i = 1;
                        foreach ($data as $data1) {
//                        pr($data1);
                            if (!isset($data1['Stamp Duty'])) {
                                $data1['Stamp Duty'] = 0;
                            }
                            if (!isset($data1['Registration Fee'])) {
                                $data1['Registration Fee'] = 0;
                            }
                            $total = $data1['Registration Fee'] + $data1['Stamp Duty'];

                            $html_design .= "<tr>"
                                    . "<td style='text-align:center;' > " . $i++ . " </td>"
                                    . "<td style='text-align:center;'> " . $data1['article_desc_en'] . " </td>"
                                    . "<td style='text-align:center;'> " . $data1['Registration Fee'] . " </td>"
                                    . "<td style='text-align:center;'> " . $data1['Stamp Duty'] . " </td>"
                                    . "<td style='text-align:center;'> " . $total . " </td>"
                                    . "</tr>";
                        }
                        $html_design .= "</table>";
                        $this->create_pdf($html_design, 'Monthly Report', 'A4-L', '');
                    } else {
                        $this->Session->setFlash(__("Record Not Found...!!!!"));
                        return $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_total_registration_stamp'));
                    }
                }
                // pr($html_design);exit;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function rpt_total_registration_stamp() { // for MZ state
        try {
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            array_map([$this, 'loadModel'], ['ReportLabel', 'office', 'ApplicationSubmitted']);
            $this->set('hfname', NULL);
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang)));
            $stateid = $this->Auth->User('state_id');
            $officeid = $this->Auth->User('office_id');
            $officename = $this->office->query("select office_name_en from ngdrstab_mst_office where office_id = $officeid");
            $off = $officename[0][0]['office_name_en'];
            $this->set('off', $off);
            // $this->set('District', ClassRegistry::init('District')->find('list', array('fields' => array('district_id', 'district_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => array('district_name_' . $lang => 'ASC'))));

            $fieldlist = array();
            //$fieldlist['district_id']['select'] = 'is_select_req'; // must require
            $fieldlist['startDate']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
                $errarr = $this->validatedata($this->request->data['rpt_total_registration_stamp'], $fieldlist);

                if ($this->ValidationError($errarr)) {
                    $distname = $_POST['hfname'];
                    //$dist_id = $this->request->data['rpt_total_registration_stamp']['district_id'];
                    $startDate = $this->request->data['rpt_total_registration_stamp']['startDate'];
                    $month = date("m", strtotime($startDate));
                    $year = date("Y", strtotime($startDate));
                    $newDate = date("F, Y", strtotime($startDate));
                    $startdate = $year . '-' . $month . '-01';
                    $time = strtotime($startdate);
                    $enddate = date("Y-m-d", strtotime("+1 month", $time));

                    $result = $this->ApplicationSubmitted->Query("select info.district_id,article.article_id,article.article_desc_en,title.articledescription_en,title.articledescription_id,item.fee_item_desc_en,item.account_head_code,sum(pamount) as pamount from ngdrstab_trn_payment_details pay
            JOIN ngdrstab_mst_article_fee_items as item ON item.account_head_code=pay.account_head_code and item.fee_param_type_id=2
            JOIN ngdrstab_trn_generalinformation as info ON info.token_no=pay.token_no
            JOIN ngdrstab_mst_article as article ON article.article_id=info.article_id
            left JOIN ngdrstab_mst_articledescriptiondetail as title ON title.articledescription_id=info.title_id
           where pay.pdate >= Date('$startdate') and pay.pdate < Date('$enddate') and item.account_head_code IN ('0030045501','0030063301') and info.office_id=$officeid
            group by title.articledescription_en,title.articledescription_id, info.district_id,article.article_id,article.article_desc_en,item.fee_item_desc_en,item.account_head_code order by item.account_head_code");
//            pr($result);exit;
                    if (!empty($result)) {
                        $data = array();
                        foreach ($result as $key => $value) {
                            for ($j = 0; $j < count($result); $j++) {
                                if ($value[0]['article_id'] == $result[$j][0]['article_id']) {
                                    $data[$value[0]['article_id']]['article_desc_en'] = $result[$j][0]['article_desc_en'];
                                    $data[$value[0]['article_id']][$result[$j][0]['fee_item_desc_en']] = $result[$j][0]['pamount'];
                                    $data[$value[0]['article_id']]['articledescription_en'] = $result[$j][0]['articledescription_en'];
                                }
                            }
                        }

                        $html_design = "<style>td{padding:5px;} </style>"
                                . "<h2 align=center style='color:#641E16;'> MONTHLY REPORT ON COLLECTION FOR REGISTRATION FEE AND STAMP DUTY </h2>"
                                . "<hr style color:red;>"
                                . "<table  align=center border=0 width=60%>"
                                . "<tr>"
                                . " <td align=center><h3><b> Name of District : </b> " . $off . "  </h3></td>"
                                . "</tr>"
                                . "<tr>"
                                . " <td align=center><b><h3>Report for the month of:</b> " . $newDate . "  </h3></td></tr></table>"
                                . "<br/>"
                                . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                . "<tr>"
                                . "<th style='text-align:center;' >Sr No.</th>"
                                . "<th style='text-align:center;'>Article Name</th>"
                                . "<th style='text-align:center;'>Registraion Fee</th>"
                                . "<th style='text-align:center;'>Stamp Duty</th>"
                                . "<th style='text-align:center;'>Total</td>"
                                . "</tr>";

                        $i = 1;
                        $rs = "&#8377;";
                        $all_ttl = $tot_reg = $tot_stmp = 0;
                        foreach ($data as $data1) {
//                        pr($data1);

                            if (!isset($data1['Stamp Duty'])) {
                                $data1['Stamp Duty'] = 0;
                            }
                            if (!isset($data1['Registration Fee'])) {
                                $data1['Registration Fee'] = 0;
                            }
                            $total = $data1['Registration Fee'] + $data1['Stamp Duty'];
                            $all_ttl += $total;
                            $tot_reg += $data1['Registration Fee'];
                            $tot_stmp += $data1['Stamp Duty'];

                            $html_design .= "<tr>"
                                    . "<td style='text-align:center;' > " . $i++ . " </td>";
                            if ($data1['articledescription_en'] != NULL) {
                                $html_design .= "<td style='text-align:left;'> " . $data1['article_desc_en'] . " (" . $data1['articledescription_en'] . ")" . " </td>";
                            } else {
                                $html_design .= "<td style='text-align:left;'> " . $data1['article_desc_en'] . " </td>";
                            }
                            $html_design .= "<td style='text-align:right;'> " . $data1['Registration Fee'] . " </td>"
                                    . "<td style='text-align:right;'> " . $data1['Stamp Duty'] . " </td>"
                                    . "<td style='text-align:right;'> " . $total . " </td>"
                                    . "</tr>";
                        }

                        $html_design .= "<tr>"
                                . "<td style='text-align:center;' >  </td>"
                                . "<td style='text-align:center;'> <b>Total</b> </td>"
                                . "<td style='text-align:right;'> <b>$rs" . $tot_reg . "</b> </td>"
                                . "<td style='text-align:right;'> <b>$rs" . $tot_stmp . "</b> </td>"
                                . "<td style='text-align:right;'> <b>$rs" . $all_ttl . "</b> </td>"
                                . "</tr>";

                        $html_design .= "</table>";
                        //pr($html_design);exit;
                        $this->create_pdf($html_design, 'Monthly_Report_Stmp_Reg_Fees', 'A4-L', '');
                    } else {
                        $this->Session->setFlash(__("Record Not Found...!!!!"));
                        return $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_total_registration_stamp'));
                    }
                }
                // pr($html_design);exit;
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function rpt_total_no_docs_reg() { // for MZ state
        try {
            $this->loadModel('ApplicationSubmitted');
            $this->loadModel('ReportLabel');
            $this->loadModel('office');
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang)));
            $this->set('hfdist', NULL);
            $this->set('hffinyr', NULL);
            $stateid = $this->Auth->User('state_id');
            $officeid = $this->Auth->User('office_id');
            $officename = $this->office->query("select office_name_en from ngdrstab_mst_office where office_id = $officeid");
            $off = $officename[0][0]['office_name_en'];
            $this->set('off', $off);

            //$this->set('District', ClassRegistry::init('District')->find('list', array('fields' => array('district_id', 'district_name_' . $lang), 'conditions' => array('state_id' => $stateid), 'order' => array('district_name_' . $lang => 'ASC'))));
            $this->set('finyear', ClassRegistry::init('finyear')->find('list', array('fields' => array('finyear_desc'), 'conditions' => array('state_id' => $stateid), 'order' => array('id' => 'DESC'))));
            $fieldlist = array();
            $fieldlist['district_id']['select'] = 'is_select_req'; // must require
            $fieldlist['finyear_desc']['select'] = 'is_select_req';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));


            if ($this->request->is('post')) {

                $monthname = array("Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar");
                $distname = $_POST['hfdist'];

                //$dist_id = $this->request->data['rpt_total_no_docs_reg']['district_id'];
                $year = explode("-", $_POST['hffinyr']);
                $startdate = $year[0] . '-04-01';
                $enddate = $year[1] . '-03-31';
                // pr($startdate);pr($enddate);exit;
                $result = $this->ApplicationSubmitted->Query("select count(a.token_no) as reg_doc, article.article_desc_en,to_char(final_stamp_date,'Mon') as mon 
                                from ngdrstab_trn_application_submitted a
                                JOIN ngdrstab_trn_generalinformation as info ON info.token_no=a.token_no
                                JOIN ngdrstab_mst_article as article ON article.article_id=info.article_id
                                where DATE(a.final_stamp_date)>= '$startdate' and DATE(a.final_stamp_date)<= '$enddate'
                                and a.final_stamp_flag='Y' and a.office_id=$officeid
                                group by article.article_desc_en ,mon
                                order by mon ASC");
//pr($result);exit;
                if (!empty($result)) {

                    $html_design = "<style>td{padding:5px;} </style>"
                            . "<h2 align=center style='color:#641E16;'> No Of Document's Registered (" . $year[0] . " April - " . $year[1] . " March)  </h2>"
                            . "<hr style color:red;>"
                            . "<table  align=center border=0 width=60%>"
                            . "<tr>"
                            . "<td align=center><h3><b> Registration and Stamp, Office : </b> " . $off . "  </h3></td>"
                            . "</tr>"
                            . "</table>"
                            . "<br/>";

                    $html_design .= "<table border=1 style='border-collapse:collapse;' width=100%>"
                            . "<thead>"
                            . "<tr bgcolor=peachpuff>"
                            . "<th style='text-align:center; color:red;'>Article</th>";

                    foreach ($monthname as $monthname1 => $mon) {
                        if (($monthname1) % 2 == 0) {
                            $html_design .= "<th style='text-align:center;color:red;'>" . $mon . "</th>";
                        } else {
                            $html_design .= "<th style='text-align:center;color:green;'>" . $mon . "</th>";
                        }
                    }
                    $html_design .= "<th style='text-align:center;' bgcolor=orange>Progressive Total</th>"
                            . "</tr>"
                            . "</thead>";

                    $data = array();
                    foreach ($result as $key => $value) {
                        for ($j = 0; $j < count($monthname); $j++) {
                            if ($value[0]['mon'] == $monthname[$j]) {
                                $data[$value[0]['article_desc_en']][$value[0]['mon']] = $value[0]['reg_doc'];
                            } else {
                                $data[$value[0]['article_desc_en']][$monthname[$j]] = 0;
                            }
                        }
                    }
                    $final_total = array();
                    $maintotal = 0;
                    $color = 0;
                    foreach ($data as $key => $data1) {
//                        pr($key[0]);
                        $progessive_total = 0;
                        if ($color % 2 == 0) {
                            $html_design .= "<tr bgcolor='#FFFFFF' ><th style='text-align:center;'>" . $key . "</th>";
                        } else {
                            $html_design .= "<tr bgcolor='#40E0D0' ><th style='text-align:center;'>" . $key . "</th>";
                        }
//                            $html_design .= "<tr bgcolor='#9ab3e5' ><td style='text-align:center;'>" . $key . "</td>";
//                                                pr($html_design);
                        foreach ($data1 as $key1 => $data2) {
                            $total = 0;
                            if ($color % 2 == 0) {
                                $html_design .= "<td style='text-align:center; color:red;'>" . $data2 . "</td>";
                            } else {
                                $html_design .= "<td style='text-align:center; color:green;'>" . $data2 . "</td>";
                            }
//                            $html_design .= "<td style='text-align:center; color:red;'>" . $data2 . "</td>";

                            $progessive_total = $progessive_total + $data2;
                            foreach ($monthname as $monthname1) {
                                if ($key1 == $monthname1) {
                                    if (isset($final_total[$key1])) {
                                        $total = $final_total[$key1];
                                    }
                                    $total = $total + $data2;
                                    $final_total[$key1] = $total;
                                }
                            }
                        }

                        $maintotal = $progessive_total + $maintotal;
                        $html_design .= "<th style='text-align:center;' bgcolor=orange>" . $progessive_total . "</th></tr>";
                        // pr($html_design); exit;
                        $color++;
                    }

                    $html_design .= "</tr> <tr bgcolor=orange><th style='text-align:center;'>Total</th>";

                    foreach ($final_total as $final_total1) {
                        $html_design .= "<th style='text-align:center;'>" . $final_total1 . "</th>";
                    }
                    $html_design .= "<th style='text-align:center;'>" . $maintotal . "</th></tr>";

                    $html_design .= "</table><div  class='rowht'>&nbsp;</div>";

                    $html_design .= "<table align=center border=0 width=100%>"
                            . "<tr>"
                            . "<td align=left><b> MD = Mortgage Deed </b> </td>"
                            . "<td align=left><b> SD = Sale Deed </b> </td>"
                            . "</tr><tr>"
                            . "<td align=left><b> GD = Gift Deed</b> </td>"
                            . "<td align=left><b> COH = Certificate of Heirship </b> </td>"
                            . "</tr><tr>"
                            . "<td align=left><b> LD = Lease Deed </b> </td>"
                            . "<td align=left><b> RD = Release Deed </b> </td>"
                            . "</tr><tr>"
                            . "<td align=left><b> AGD = Agreement Deed </b> </td>"
                            . "<td align=left><b> POA = Power Of attorney </b> </td>"
                            . "</tr><tr>"
                            . "<td align=left><b> TD = Trust Deed </b> </td>"
                            . "</tr>"
                            . "</table>";

                    // pr($html_design);exit;
                    $this->create_pdf($html_design, 'Yearly_Docs_Reg_Articlewise_rpt', 'A4-L', '');
                } else {
                    $this->Session->setFlash(__("Record Not Found...!!!!"));
                    return $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_total_no_docs_reg'));
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function landrecord_old() {
        try {
            array_map([$this, 'loadModel'], ['Landrecord']);
            $this->set('actiontype', NULL);

            if ($this->request->is('post')) {
                $frmdate = $this->request->data['landrecord']['from'];
                $todate = $this->request->data['landrecord']['to'];
                $frmdate = "'" . date('Y-m-d', strtotime($frmdate)) . "'";
                $todate = "'" . date('Y-m-d', strtotime($todate)) . "'";
                $result = $this->Landrecord->query("select * from landrecord($frmdate,$todate)");
                if (!empty($result)) {
                    if ($result[0][0]['landrecord'] == 1) {
                        $this->Session->setFlash(__('Record inserted Succesfully...!!!'));
                    } else {
                        $this->Session->setFlash(__('Record insertion Failed...!!!'));
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
        }
    }

    public function download_challan_mz() {
        $this->autoRender = FALSE;
        $this->loadModel("file_config");
        $filepath = $this->file_config->find('first', array('fields' => array('filepath')));
        $file = 'Payment Challan Form.pdf';
        $path = $filepath['file_config']['filepath'] . 'Payment Challan' . '/' . $file;
        if (file_exists($path)) {
            $this->response->file($path, array('download' => true, 'name' => $file));
            return $this->response->download($file);
            return $this->redirect(array('controller' => 'Citizenentry', 'action' => 'pre_registration_docket'));
        }
        return $this->redirect(array('controller' => 'Citizenentry', 'action' => 'pre_registration_docket'));
    }

    public function female_exemption_prapatra() { //JH state
        try {
            $lang = $this->Session->read("sess_langauge");
            $this->set('lang', $lang);
            $this->loadModel('office');
            $this->loadModel('ApplicationSubmitted');
            $dwnfrmt = ['P' => 'pdf', 'E' => 'excel'];
            $this->set('dwnfrmt', $dwnfrmt);
            $officeid = $this->Auth->User("office_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            ini_set('max_execution_time', 0);
            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $fieldlist['dwnfrmt']['select'] = 'is_alpha_select';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
                $errarr = $this->validatedata($this->request->data['female_exemption_prapatra'], $fieldlist);
                if ($this->ValidationError($errarr)) {
                    $from = date('Y-m-d', strtotime($this->request->data['female_exemption_prapatra']['from']));
                    $to = date('Y-m-d', strtotime($this->request->data['female_exemption_prapatra']['to']));
                    $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $officeid");
                    $ofnm = $officename[0][0]['office_name_en'];

                    if ($this->request->data['female_exemption_prapatra']['dwnfrmt'] == 'E') {
                        $data = $this->ApplicationSubmitted->query("SELECT off.office_name_en,info.token_no, final_stamp_date, 

                                                                (SELECT String_agg(v.village_name_en, ',' ) 
                                                                FROM   ngdrstab_trn_property_details_entry AS prop 
                                                                       left JOIN ngdrstab_conf_admblock7_village_mapping AS v 
                                                                         ON v.village_id = prop.village_id 
                                                                WHERE  token_no = info.token_no 
                                                                       )  AS prop_village, 

                                                                       (SELECT String_agg(t.taluka_name_en, ',' ) 
                                                                FROM   ngdrstab_trn_property_details_entry AS prop 
                                                                       left JOIN ngdrstab_conf_admblock5_taluka AS t 
                                                                         ON t.taluka_id = prop.taluka_id 
                                                                WHERE  token_no = info.token_no limit 1
                                                                       )  AS prop_taluka,  
                                                                       
                                                               (SELECT String_agg(party_full_name_en, ',') 
                                                                FROM   ngdrstab_trn_party_entry_new AS party 
                                                                       JOIN ngdrstab_mst_party_type AS ptype 
                                                                         ON ptype. party_type_id = party.party_type_id 
                                                                            AND party_type_flag = '0' 
                                                                WHERE  token_no = info.token_no 
                                                                       )  AS partyname, 

(SELECT String_agg(father_full_name_en, ',') 
                                                                FROM   ngdrstab_trn_party_entry_new AS party 
                                                                       JOIN ngdrstab_mst_party_type AS ptype 
                                                                         ON ptype. party_type_id = party.party_type_id 
                                                                            AND party_type_flag = '0' 
                                                                WHERE  token_no = info.token_no 
                                                                       )  AS partyfathername, 

(SELECT String_agg(address_en, ',') 
                                                                FROM   ngdrstab_trn_party_entry_new AS party 
                                                                       JOIN ngdrstab_mst_party_type AS ptype 
                                                                         ON ptype. party_type_id = party.party_type_id 
                                                                            AND party_type_flag = '0' 
                                                                WHERE  token_no = info.token_no 
                                                                       )  AS partyaddress,

(SELECT String_agg(mobile_no, ',') 
                                                                FROM   ngdrstab_trn_party_entry_new AS party 
                                                                       JOIN ngdrstab_mst_party_type AS ptype 
                                                                         ON ptype. party_type_id = party.party_type_id 
                                                                            AND party_type_flag = '0' 
                                                                WHERE  token_no = info.token_no 
                                                                       )  AS partymobile,

(SELECT String_agg(uid, ',') 
                                                                FROM   ngdrstab_trn_party_entry_new AS party 
                                                                       JOIN ngdrstab_mst_party_type AS ptype 
                                                                         ON ptype. party_type_id = party.party_type_id 
                                                                            AND party_type_flag = '0' 
                                                                WHERE  token_no = info.token_no 
                                                                       )  AS partyuid,

                                                               (SELECT Sum(stampd1.final_value) AS totalsd1 
                                                                FROM   ngdrstab_trn_fee_calculation_detail stampd1 
                                                                       LEFT JOIN ngdrstab_trn_fee_calculation stamp1 
                                                                              ON stampd1.fee_calc_id = stamp1.fee_calc_id 
                                                                                 AND stamp1.delete_flag = 'N' 
                                                                       LEFT JOIN ngdrstab_mst_article_fee_items feeitem1 
                                                                              ON feeitem1.fee_item_id = stampd1.fee_item_id 
                                                                WHERE  stamp1.token_no = info.token_no 
                                                                       AND stamp1.delete_flag = 'N' 
                                                                       AND feeitem1.fee_param_type_id = 2 
                                                                       AND stamp1.article_id IN( info.article_id ) 
                                                                       AND feeitem1.fee_item_id = 2) AS totalsd, 
                                                               (SELECT Sum(stampd1.final_value) AS totalsd1 
                                                                FROM   ngdrstab_trn_fee_calculation_detail stampd1 
                                                                       LEFT JOIN ngdrstab_trn_fee_calculation stamp1 
                                                                              ON stampd1.fee_calc_id = stamp1.fee_calc_id 
                                                                                 AND stamp1.delete_flag = 'N' 
                                                                       LEFT JOIN ngdrstab_mst_article_fee_items feeitem1 
                                                                              ON feeitem1.fee_item_id = stampd1.fee_item_id 
                                                                WHERE  stamp1.token_no = info.token_no 
                                                                       AND stamp1.delete_flag = 'N' 
                                                                       AND feeitem1.fee_param_type_id = 2 
                                                                       AND stamp1.article_id IN( 9998 ) 
                                                                       AND feeitem1.fee_item_id = 2
                                                                       AND stampd1.fee_rule_id = 197 
                                                               )   exemption_onsd 
                                                        FROM   ngdrstab_trn_application_submitted AS app 
                                                               JOIN ngdrstab_trn_generalinformation AS info 
                                                                 ON info.token_no = app.token_no 
                                                                 JOIN ngdrstab_mst_office AS off 
                                                                 ON off.office_id = app.office_id
                                                        WHERE  app.office_id = $officeid
                                                               AND final_stamp_flag = 'Y' 
                                                               AND app.final_stamp_date >= '$from'
                                                               AND app.final_stamp_date <= '$to' 
                                                        GROUP  BY app.final_stamp_date, 
                                                                  info.token_no, 
                                                                  info.article_id, 
                                                                  app.final_doc_reg_no,off.office_name_en
                                                        ORDER  BY final_stamp_date");
                        if (!empty($data)) {

                            $html_design = "<style>td{padding:5px;}</style>"
                                    . "<h2 align=center> Female Exemption Details </h2>"
                                    . "<h3 align=center style='color:#641E16;'> For " . $ofnm . " </h3>"
                                    . "<hr style color:red;>"
                                    . "<div class='table-responsive'>"
                                    . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b> To Date: </b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                                    . "<br/>"
                                    . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                    . "<thead>"
                                    . "<tr>"
                                    . "<th style='text-align:center;'>Sr.No.</th>"
                                    . "<th style='text-align:center;'>Name of Anchal</th>"
                                    . "<th style='text-align:center;'>Name of Village</th>"
                                    . "<th style='text-align:center;'>Beneficiary Name</th>"
                                    . "<th style='text-align:center;'>Father/Husband Name</th>"
                                    . "<th style='text-align:center;'>Address</th>"
                                    . "<th style='text-align:center;'>Mobile No.</th>"
                                    . "<th style='text-align:center;'>Aadhar No.</th>"
                                    //  . "<th style='text-align:center;'>Exemption Date</th>"
                                    //  . "<th style='text-align:center;'>Total Stamp Duty</th>"
                                    //  . "<th style='text-align:center;'>Exempted Stamp Duty</th>"
                                    . "</tr></thead>";
                            $SrNo = 1;
                            $ttime = '';

                            foreach ($data as $data1) {

                                $ex = explode(',', $data1[0]['partyuid']);
                                $mobile = explode(',', $data1[0]['partymobile']);

                                $key = "";
                                $final_strv = (hex2bin(trim($ex[0])));
                                $dec = openssl_decrypt($final_strv, 'bf-ecb', $key, true);

                                if ($data1[0]['exemption_onsd'] != NULL) {
                                    $html_design .= "<tbody><tr>"
                                            . "<td style='text-align:center;'>" . $SrNo++ . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['prop_taluka'] . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['prop_village'] . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['partyname'] . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['partyfathername'] . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['partyaddress'] . "</td>"
                                            . "<td style='text-align:center;'>" . $mobile[0] . "</td>"
                                            . "<td style='text-align:center;'>" . $dec . "</td>";
                                    // . "<td style='text-align:center;'>" . date('d-m-Y', strtotime($data1[0]['final_stamp_date'])) . "</td>"
                                    //  . "<td style='text-align:center;'>" . $data1[0]['totalsd'] . "</td>"
                                    //  . "<td style='text-align:center;'>" . $data1[0]['exemption_onsd'] . "</td></tr></tbody>";
                                }
                            }
                            $html_design .= "</table>";
                            header('Content-Type: application/force-download');
                            header('Content-disposition: attachment; filename= Female_Exemption_prapatra.xls');
                            header("Pragma: ");
                            header("Cache-control: ");
                            echo $html_design;
                            die;
                            // pr($html_design); exit;
                            //$this->create_pdf($html_design, "Female_Exemption_prapatra", 'A4-L', '');
                        } else {
                            $this->Session->setFlash(__('Record Not Found!!!'));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'female_exemption_prapatra'));
                        }
                    } else if ($this->request->data['female_exemption_prapatra']['dwnfrmt'] == 'P') {
//                    pr($data);
                        $data = $this->ApplicationSubmitted->query("SELECT off.office_name_en,info.token_no, final_stamp_date,
                            
                                                                (SELECT String_agg(v.village_name_en, ',' ) 
                                                                FROM   ngdrstab_trn_property_details_entry AS prop 
                                                                       left JOIN ngdrstab_conf_admblock7_village_mapping AS v 
                                                                         ON v.village_id = prop.village_id 
                                                                WHERE  token_no = info.token_no 
                                                                       )  AS prop_village, 

                                                                       (SELECT String_agg(t.taluka_name_en, ',' ) 
                                                                FROM   ngdrstab_trn_property_details_entry AS prop 
                                                                       left JOIN ngdrstab_conf_admblock5_taluka AS t 
                                                                         ON t.taluka_id = prop.taluka_id 
                                                                WHERE  token_no = info.token_no limit 1
                                                                       )  AS prop_taluka, 
                                                                       
                                                               (SELECT String_agg(party_full_name_en, ',')
                                                                FROM   ngdrstab_trn_party_entry_new AS party
                                                                       JOIN ngdrstab_mst_party_type AS ptype
                                                                         ON ptype. party_type_id = party.party_type_id
                                                                            AND party_type_flag = '0'
                                                                WHERE  token_no = info.token_no
                                                                       )  AS partyname,

(SELECT String_agg(father_full_name_en, ',')
                                                                FROM   ngdrstab_trn_party_entry_new AS party
                                                                       JOIN ngdrstab_mst_party_type AS ptype
                                                                         ON ptype. party_type_id = party.party_type_id
                                                                            AND party_type_flag = '0'
                                                                WHERE  token_no = info.token_no
                                                                       )  AS partyfathername,

(SELECT String_agg(address_en, ',')
                                                                FROM   ngdrstab_trn_party_entry_new AS party
                                                                       JOIN ngdrstab_mst_party_type AS ptype
                                                                         ON ptype. party_type_id = party.party_type_id
                                                                            AND party_type_flag = '0'
                                                                WHERE  token_no = info.token_no
                                                                       )  AS partyaddress,

(SELECT String_agg(mobile_no, ',')
                                                                FROM   ngdrstab_trn_party_entry_new AS party
                                                                       JOIN ngdrstab_mst_party_type AS ptype
                                                                         ON ptype. party_type_id = party.party_type_id
                                                                            AND party_type_flag = '0'
                                                                WHERE  token_no = info.token_no
                                                                       )  AS partymobile,

(SELECT String_agg(uid, ',')
                                                                FROM   ngdrstab_trn_party_entry_new AS party
                                                                       JOIN ngdrstab_mst_party_type AS ptype
                                                                         ON ptype. party_type_id = party.party_type_id
                                                                            AND party_type_flag = '0'
                                                                WHERE  token_no = info.token_no
                                                                       )  AS partyuid,

                                                               (SELECT Sum(stampd1.final_value) AS totalsd1
                                                                FROM   ngdrstab_trn_fee_calculation_detail stampd1
                                                                       LEFT JOIN ngdrstab_trn_fee_calculation stamp1
                                                                              ON stampd1.fee_calc_id = stamp1.fee_calc_id
                                                                                 AND stamp1.delete_flag = 'N'
                                                                       LEFT JOIN ngdrstab_mst_article_fee_items feeitem1
                                                                              ON feeitem1.fee_item_id = stampd1.fee_item_id
                                                                WHERE  stamp1.token_no = info.token_no
                                                                       AND stamp1.delete_flag = 'N'
                                                                       AND feeitem1.fee_param_type_id = 2
                                                                       AND stamp1.article_id IN( info.article_id )
                                                                       AND feeitem1.fee_item_id = 2) AS totalsd,
                                                               (SELECT Sum(stampd1.final_value) AS totalsd1
                                                                FROM   ngdrstab_trn_fee_calculation_detail stampd1
                                                                       LEFT JOIN ngdrstab_trn_fee_calculation stamp1
                                                                              ON stampd1.fee_calc_id = stamp1.fee_calc_id
                                                                                 AND stamp1.delete_flag = 'N'
                                                                       LEFT JOIN ngdrstab_mst_article_fee_items feeitem1
                                                                              ON feeitem1.fee_item_id = stampd1.fee_item_id
                                                                WHERE  stamp1.token_no = info.token_no
                                                                       AND stamp1.delete_flag = 'N'
                                                                       AND feeitem1.fee_param_type_id = 2
                                                                       AND stamp1.article_id IN( 9998 )
                                                                       AND feeitem1.fee_item_id = 2
                                                                       AND stampd1.fee_rule_id = 197
                                                               )   exemption_onsd
                                                        FROM   ngdrstab_trn_application_submitted AS app
                                                               JOIN ngdrstab_trn_generalinformation AS info
                                                                 ON info.token_no = app.token_no
                                                                 JOIN ngdrstab_mst_office AS off
                                                                 ON off.office_id = app.office_id
                                                        WHERE  app.office_id = $officeid
                                                               AND final_stamp_flag = 'Y' 
                                                               AND app.final_stamp_date >= '$from'
                                                               AND app.final_stamp_date <= '$to' 
                                                        GROUP  BY app.final_stamp_date,
                                                                  info.token_no, off.office_name_en,
                                                                  info.article_id,
                                                                  app.final_doc_reg_no
                                                        ORDER  BY final_stamp_date");
//                        pr($data);exit;
                        if (!empty($data)) {

                            $html_design = "<style>td{padding:5px;}</style>"
                                    . "<h2 align=center> Female Exemption Details </h2>"
                                    . "<h3 align=center style='color:#641E16;'> For " . $ofnm . " </h3>"
                                    . "<hr style color:red;>"
                                    . "<div class='table-responsive'>"
                                    . "<table  align=center border=0 width=100%><tr><td align=center><b> From Date: </b> " . date('d-M-Y', strtotime($from)) . "  </td> <td align=center><b> To Date: </b> " . date('d-M-Y', strtotime($to)) . "  </td></tr></table>"
                                    . "<br/>"
                                    . "<table border=1 style='border-collapse:collapse;' width=100%>"
                                    . "<thead>"
                                    . "<tr>"
                                    . "<th style='text-align:center;'>Sr.No.</th>"
                                    . "<th style='text-align:center;'>Name of Anchal</th>"
                                    . "<th style='text-align:center;'>Name of Village</th>"
                                    . "<th style='text-align:center;'>Beneficiary Name</th>"
                                    . "<th style='text-align:center;'>Father/Husband Name</th>"
                                    . "<th style='text-align:center;'>Address</th>"
                                    . "<th style='text-align:center;'>Mobile No.</th>"
                                    . "<th style='text-align:center;'>Aadhar No.</th>"
                                    //  . "<th style='text-align:center;'>Exemption Date</th>"
                                    //  . "<th style='text-align:center;'>Total Stamp Duty</th>"
                                    //  . "<th style='text-align:center;'>Exempted Stamp Duty</th>"
                                    . "</tr></thead>";
                            $SrNo = 1;
                            $ttime = '';

                            foreach ($data as $data1) {

                                $ex = explode(',', $data1[0]['partyuid']);
                                $mobile = explode(',', $data1[0]['partymobile']);

                                $key = "";
                                $final_strv = (hex2bin(trim($ex[0])));
                                $dec = openssl_decrypt($final_strv, 'bf-ecb', $key, true);

                                if ($data1[0]['exemption_onsd'] != NULL) {
                                    $html_design .= "<tbody><tr>"
                                            . "<td style='text-align:center;'>" . $SrNo++ . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['prop_taluka'] . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['prop_village'] . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['partyname'] . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['partyfathername'] . "</td>"
                                            . "<td style='text-align:center;'>" . $data1[0]['partyaddress'] . "</td>"
                                            . "<td style='text-align:center;'>" . $mobile[0] . "</td>"
                                            . "<td style='text-align:center;'>" . $dec . "</td>";
                                    // . "<td style='text-align:center;'>" . date('d-m-Y', strtotime($data1[0]['final_stamp_date'])) . "</td>"
                                    //  . "<td style='text-align:center;'>" . $data1[0]['totalsd'] . "</td>"
                                    //  . "<td style='text-align:center;'>" . $data1[0]['exemption_onsd'] . "</td></tr></tbody>";
                                }
                            }
                            $html_design .= "</table></div>";
//                             pr($html_design); exit;
                            $this->create_pdf($html_design, "Female_Exemption_prapatra", 'A4-L', '');
                        } else {
                            $this->Session->setFlash(__('Record not found!!!'));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'female_exemption_prapatra'));
                        }
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function appointment_shifting() { // common for jh,goa, punjab state
        try {
            array_map(array($this, 'loadModel'), array('office'));
            $lang = $this->Session->read("sess_langauge");
            $this->set('lang', $lang);
            $this->set('officelist', ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'order' => array('office_name_' . $lang => 'ASC'))));
            $slot_list = ['T' => 'Tatkal Slot', 'N' => 'Normal Slot'];
            $this->set('appointment_type', $slot_list);

            $fieldlist = array();
            $fieldlist['appointment_type']['select'] = 'is_alpha_select';
            // $fieldlist['office_id']['select'] = 'is_select_req';
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));


            if ($this->request->is('post')) {

                $errarr = $this->validatedata($this->request->data['appointment_shifting'], $fieldlist);
                if ($this->validationError($errarr)) {

                    $appointment_type = $this->request->data['appointment_shifting']['appointment_type'];
                    $office_id = $this->request->data['appointment_shifting']['office_id'];
                    $appdate = $this->request->data['appointment_shifting']['from'];
                    $appdate1 = date('Y-m-d', strtotime($appdate));
                    $appointmentdate = "'" . date('Y-m-d', strtotime($appdate1)) . "'";
                    $tfdate = $this->request->data['appointment_shifting']['to'];
                    $tfdate1 = date('Y-m-d', strtotime($tfdate));
                    $transferdate = "'" . date('Y-m-d', strtotime($tfdate1)) . "'";
                    $todate = date('Y-m-d');

                    if ($todate < $tfdate1) {
                        $holiday = $this->office->query("SELECT * FROM ngdrstab_mst_holiday WHERE ? between holiday_fdate and holiday_tdate", array($transferdate));
                        if (empty($holiday)) {
                            if ($office_id == "empty") {
                                $check = $this->office->query("SELECT count(id) FROM ngdrstab_trn_appointment_details where appointment_date=? and flag=?", array($appointmentdate, $appointment_type));
                                if ($check[0][0]['count'] != 0) {
                                    $holiday = $this->office->query("Update ngdrstab_trn_appointment_details set appointment_date=? where appointment_date=? and flag=?", array($transferdate, $appointmentdate, $appointment_type));
                                    $this->Session->setFlash(__("Appointment Shifted to $tfdate Successfully..!!!"));
                                } else {
                                    $this->Session->setFlash(__("There is no appointemnt on $appdate..!!!"));
                                }
                            } else {
                                $check = $this->office->query("SELECT count(id) FROM ngdrstab_trn_appointment_details where appointment_date=? and office_id=? and flag=?", array($appointmentdate, $office_id, $appointment_type));
                                if ($check[0][0]['count'] != 0) {
                                    $holiday = $this->office->query("Update ngdrstab_trn_appointment_details set appointment_date=? where appointment_date=? and office_id=? and flag=?", array($transferdate, $appointmentdate, $office_id, $appointment_type));
                                    $this->Session->setFlash(__("Appointment Shifted to $tfdate Successfully..!!!"));
                                } else {
                                    $this->Session->setFlash(__("There is no appointemnt on $appdate..!!!"));
                                }
                            }
                            $this->redirect(array('controller' => 'Reports', 'action' => 'appointment_shifting'));
                        } else {
                            $this->Session->setFlash(__("You are Selected Holiday for Transfer appointment..!!!"));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'appointment_shifting'));
                        }
                    } else {
                        $this->Session->setFlash(__("Plese Select proper date for Transfer appointment..!!!"));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'appointment_shifting'));
                    }
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash(__('Record Cannot be displayed. Error :' . $ex->getMessage()));
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function appointment_slots_change() { // common for jh,goa, punjab state
        try {
            array_map(array($this, 'loadModel'), array('office', 'timeslot'));
            $lang = $this->Session->read("sess_langauge");
            $this->set('lang', $lang);
            $this->set('officelist', ClassRegistry::init('office')->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'order' => array('office_name_' . $lang => 'ASC'))));
            $this->set('timeslotid', ClassRegistry::init('timeslot')->find('list', array('fields' => array('slot_id', 'slot_time_minute'), 'order' => array('slot_time_minute' => 'ASC'))));

            $slot_list = ['T' => 'Tatkal Slot', 'N' => 'Normal Slot'];
            $this->set('appointment_type', $slot_list);

            $fieldlist = array();
            $fieldlist['office_id']['select'] = 'is_select_req';
            $fieldlist['is_required']['select'] = 'is_alpha_select';
            $fieldlist['slot_id']['select'] = 'is_select_req';
            $this->set('fieldlist', $fieldlist);

            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            $slotsgrid = $this->office->query("SELECT office.office_id,office.tatkal_slot_id as tatkal_slot_id, office.slot_id as normal_slot_id, office_name_en,
                                                       normal.slot_time_minute AS normal_slot_time_minute,
                                                       tatkal.slot_time_minute AS tatkal_slot_time_minute
                                                FROM ngdrstab_mst_office AS office
                                                LEFT JOIN ngdrstab_mst_timeslot AS
                                                NORMAL ON normal.slot_id=office.slot_id
                                                LEFT JOIN ngdrstab_mst_timeslot AS tatkal ON tatkal.slot_id=office.tatkal_slot_id order by office_id asc");
            $this->set('slotsgrid', $slotsgrid);

            if ($this->request->is('post')) {

                $errarr = $this->validatedata($this->request->data['appointment_slots_change'], $fieldlist);

                if ($this->validationError($errarr)) {

                    if ($this->request->data['appointment_slots_change']['is_required'] == 'N') {

                        $n = $this->request->data['appointment_slots_change']['slot_id'];
                        $o = $this->request->data['appointment_slots_change']['office_id'];

                        $normal_slots = $this->office->query("update ngdrstab_mst_office set slot_id=? where office_id=?", array($n, $o));
                        $this->Session->setFlash(__("Normal Slot Updated Successfully"));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'appointment_slots_change'));
                    } else {
                        $t = $this->request->data['appointment_slots_change']['slot_id'];
                        $o = $this->request->data['appointment_slots_change']['office_id'];

                        $tatkal_slots = $this->office->query("update ngdrstab_mst_office set tatkal_slot_id=? where office_id=?", array($t, $o));
                        $this->Session->setFlash(__("Tatkal Slot Updated Successfully"));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'appointment_slots_change'));
                    }
                }
            }
        } catch (Exception $ex) {
            $this->Session->setFlash(__('Record Cannot be displayed. Error :' . $ex->getMessage()));
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function datewise_appointment_rpt() { //for PUN state
        try {
            $lang = $this->Session->read("sess_langauge");
            $this->set('lang', $lang);
            array_map(array($this, 'loadModel'), array('office', 'ApplicationSubmitted', 'officeshift', 'timeslot'));
            $officelist = $this->office->find('list', array('fields' => array('office_id', 'office_name_en'), 'order' => 'office_name_en'));
            $this->set('officelist', $officelist);
            $fieldlist = array();
            $fieldlist['office_id']['select'] = 'is_select_req';
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['captcha']['text'] = 'is_required,is_captcha';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));
            $this->set('searchgrid', NULL);
            $this->set('offname', NULL);
            $this->set('fromdate', NULL);
            $captcha = $this->Session->read('captcha_code');

            if ($this->request->is('post')) {
                if ($captcha == $this->request->data['datewise_appointment_rpt']['captcha']) {
                    $errarr = $this->validatedata($this->request->data['datewise_appointment_rpt'], $fieldlist);
                    if ($this->ValidationError($errarr)) {
                        $this->check_csrf_token($this->request->data['datewise_appointment_rpt']['csrftoken']);
                        $from = date('Y-m-d', strtotime($this->request->data['datewise_appointment_rpt']['from']));
                        $office_id = $this->request->data['datewise_appointment_rpt']['office_id'];
                        $officename = $this->office->query("select office_name_en from ngdrstab_mst_office where office_id = $office_id");
                        $ofnm = $officename[0][0]['office_name_en'];

                        $slots1 = $this->ApplicationSubmitted->query("SELECT COUNT(*) as taken_slots
                                                FROM public.ngdrstab_trn_appointment_details as app
                                                where app.office_id=? and app.appointment_date=?", array($office_id, $from));

                        $data = $this->office->query("select dist.district_name_en,off.office_name_en,office_id,shift.shift_id ,from_time,to_time,lunch_from_time,lunch_to_time,off.slot_id,slot_time_minute,
                                                to_char( to_time-from_time , 'HH24:MI') as officetime, 
                                                to_char(lunch_to_time - lunch_from_time  , 'HH24:MI') as lunchtime 
                                                from ngdrstab_mst_office off
                                                JOIN ngdrstab_mst_officeshifttime shift ON shift.shift_id=off.shift_id
                                                JOIN ngdrstab_conf_admblock3_district dist on dist.district_id=off.district_id
                                                JOIN ngdrstab_mst_timeslot slot ON slot.slot_id=off.slot_id
                                                where office_id=?", array($office_id));

                        if (!empty($data)) {
                            $this->set('searchgrid', $data);
                            $this->set('offname', $ofnm);
                            $this->set('fromdate', $from);
                            $this->set('takenslots', $slots1);
                        } else {
                            $this->Session->setFlash(__('Record Not Found!!!'));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'datewise_appointment_rpt'));
                        }
                    }
                } else {
                    $this->Session->setFlash(__('CAPTCHA Missmatch!!'));
                }
            }
            $this->set_csrf_token();
        } catch (Exception $ex) {
            $this->Session->setFlash(__('Record Cannot be displayed. Error :' . $ex->getMessage()));
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function incometax() { //update for PUN state
        try {
            // $this->autoRender = FALSE;
            array_map([$this, 'loadModel'], ['office', 'party_entry', 'article']);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);

            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office_id = $this->Auth->User('office_id');

            $state = $this->Auth->User('state_id');
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
            $office = $this->office->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'conditions' => array('state_id' => $state), 'order' => 'office_name_' . $lang));
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);
            $this->set('office', $office);

            $articlelist = $this->article->find('list', array('fields' => array('article_id', 'article_desc_' . $lang), 'conditions' => array('display_flag' => 'Y'), 'order' => 'article_desc_' . $lang));
            $this->set("articlelist", $articlelist);

            if ($this->request->is('post')) {
//                pr($this->request->data);exit;
                if ($this->request->data['incometax']['report_flag'] == 'H') {
                    $to = "'" . date('Y-m-d', strtotime($this->request->data['incometax']['to'])) . "'";
                    $from = "'" . date('Y-m-d', strtotime($this->request->data['incometax']['from'])) . "'";
                    $val_amt = $this->request->data['incometax']['val_amount'];
                    $article_id = $this->request->data['incometax']['article_id'];
                    if ($val_amt >= 3000000) {
                        $this->income_tax_report_SRO_Wise($this->request->data);
                    } else {
                        $this->Session->setFlash(__('Property Value Must Greater Than 30Lakh !!!'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'incometax'));
                    }
                } else if ($this->request->data['incometax']['report_flag'] == 'E') {

                    $this->party_entry->query(' ALTER SEQUENCE ngdrstab_trn_income_tax_xls_id_seq RESTART WITH 1');

                    $to = "'" . $this->request->data['incometax']['to'] . "'";
                    $from = "'" . $this->request->data['incometax']['from'] . "'";
                    $val_amt = $this->request->data['incometax']['val_amount'];
                    $q = $this->party_entry->query("select * from ngdrstab_trn_income_tax_xls where office_id=" . $office_id . " and final_stamp_date>=" . $from . " and final_stamp_date<=" . $to);

                    $path1 = WWW_ROOT . 'files\income_tax.csv';
                    $fp1 = fopen($path1, 'w');


                    $header = array('Serial.no', 'Token Number', 'Article Name', 'Registration Date', 'Property District', 'Property Taluka', 'Property Village', 'Gov. Body',
                        'Usage Category', 'Usage Sub Category', 'Valuation Amount', 'Property Address', 'Pincode', 'Total Fee', 'Paid Amount', 'Office Name', 'SRO Name',
                        'SRO Mobile', 'SRO Email', 'Office Address', 'Party Id', 'Party Birth Date', 'Party Mobile', 'Party Email', 'Party PAN', 'Location', 'Gender', 'Occupation',
                        'Party Type', 'Party Category', 'Party District', 'Party Taluka', 'Party Village', 'Party Full Name', 'Party Father Name', 'Party Mother Name',
                        'Party Id Proof', 'Party Pin Code', 'State Name', 'Party Address', 'Party Share(%)');
                    fputcsv($fp1, $header);

                    if (count($q) > 0) {

                        for ($i = 0; $i < count($q); $i++) {
                            fputcsv($fp1, $q[$i][0]);
                        }
                    }
                    $file = 'income_tax.csv';
                    $this->response->file($path1, array('download' => true, 'name' => $file));
                    return $this->response->download($file);
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function rpt_income_tax_annexxure2_sro() {
        try {
            array_map([$this, 'loadModel'], ['office', 'ApplicationSubmitted', 'party_entry']);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);
            $office_id = $this->Auth->User('office_id');
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $officelist = $this->office->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'order' => 'office_name_' . $lang));
            $this->set('officelist', $officelist);

            if ($this->request->is('post')) {
                $to = "'" . $this->request->data['rpt_income_tax_annexxure2_sro']['to'] . "'";
                $from = "'" . $this->request->data['rpt_income_tax_annexxure2_sro']['from'] . "'";


                $query2 = $this->party_entry->query("select app.token_no,pn.party_id,pn.token_no,
                                        ma.article_desc_en as Transaction_type,app.doc_reg_no,
                                                                    app.final_doc_reg_no,
                                        em.itr_number as ITDREIN_NUMBER,
                                        us.full_name as Name_of_sro,
                                        us.mobile_no,off.office_name_en,
                                        pn.party_full_name_en,app.final_stamp_date as Transaction_date,
                                        app.final_doc_reg_no as Transaction_id,dob,
                                        pn.pan_no,pn.uid,pn.identificationtype_id,
                                        pn.identificationtype_desc_en,id.identificationtype_desc_en,pn.mobile_no,
                                        pn.father_full_name_en,pn.address_en,
                                        CONCAT(em.building_no, ',', em.flat_no, ',' ,em.road_name,',',em.locality,',',em.city,',',em.village) as SRO_ADDRESS,
                                        (select SUM(cons_amt) from ngdrstab_trn_fee_calculation where article_id=info.article_id and token_no=app.token_no  and delete_flag='N') as consamt,
                                        (select SUM(rounded_val_amt) from ngdrstab_trn_valuation where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no)) as valamt,

                                        (select  
                                              string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')
                                              from  ngdrstab_conf_behavioral_patterns as confp
                                              JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                               where  mapping_ref_id=2 and mapping_ref_val =pn.party_id)
                                   from  
                                            ngdrstab_trn_party_entry_new as pn
                                            JOIN ngdrstab_trn_application_submitted as app ON app.token_no= pn.token_no
                                            JOIN ngdrstab_mst_identificationtype as id ON id.identificationtype_id=pn.identificationtype_id
                                            JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                            JOIN ngdrstab_mst_article as ma ON ma.article_id=info.article_id
                                            JOIN ngdrstab_mst_office as off ON off.office_id=app.office_id
                                    JOIN ngdrstab_mst_user as us ON us.user_id=app.org_user_id
                                     left JOIN ngdrstab_mst_employee as em ON em.emp_code=us.emp_code

                                   where app.office_id=$office_id and final_stamp_flag='Y'  and DATE(app.final_stamp_date) >=$from and DATE(app.final_stamp_date) <=$to");
//pr($query2);exit;
                if (!empty($query2)) {
                    $this->set('records2', $query2);
                } else {
                    $this->Session->setFlash(__('Record Not Found!!!'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_income_tax_annexxure2_sro'));
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function rpt_income_tax_annexxure1_alloffice() { //for JH state
        try {
            array_map([$this, 'loadModel'], ['User', 'office', 'ApplicationSubmitted']);
            $this->set('htmldesign', NULL);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);
            $this->set('rdbtn', '');
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $flag = ['O' => 'All Offices', 'S' => 'SRO Wise'];
            $this->set('usercreate_flag', $flag);
            ini_set('max_execution_time', 0);
            $office = $this->office->find('list', array('fields' => array('office_name_' . $lang), 'order' => 'office_name_' . $lang));
            $this->set('office', $office);
            $office_id = $this->Auth->User('office_id');
            $fieldlist = array();
//          $fieldlist['office_id']['select'] = 'is_select_req';
            $fieldlist['usercreate_flag']['select'] = 'is_alpha_select';
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);

            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
                //  pr($this->request->data);exit;
                $errarr = $this->validatedata($this->request->data['rpt_income_tax_annexxure1_alloffice'], $fieldlist);
                if ($this->validationError($errarr)) {
                    $this->set('rdbtn', $_POST['rdbtn']);

                    if ($this->request->data['rpt_income_tax_annexxure1_alloffice']['usercreate_flag'] == 'O') {

                        $from = $this->request->data['rpt_income_tax_annexxure1_alloffice']['from'];
                        $to = $this->request->data['rpt_income_tax_annexxure1_alloffice']['to'];


                        $query = $this->ApplicationSubmitted->query("select office.office_name_en,app.token_no,pt.party_type_desc_en,party.party_type_id,party.party_id,
                                                                    p_national.nationality_name_en,
                                                                    doc_reg_no,
                                                                    final_doc_reg_no,
                                                                    final_stamp_date,

                                                                    article_desc_en ,
                                                                    (select SUM(cons_amt) from ngdrstab_trn_fee_calculation where article_id=info.article_id and token_no=app.token_no  and delete_flag='N' and cons_amt >= 3000000) as consamt,
                                                                    (select SUM(rounded_val_amt) from ngdrstab_trn_valuation where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no and rounded_val_amt >= 3000000) ) as valamt,
                                                                    (select SUM(pamount) from ngdrstab_trn_payment_details where token_no=app.token_no and ngdrstab_trn_payment_details.account_head_code='0030045501')  as p_amount,

                                                                    (
                                                                    select string_agg(evalrule_desc_en,',') from ngdrstab_mst_evalrule_new 
                                                                     where evalrule_id IN
                                                                     (select distinct(rule_id) from ngdrstab_trn_valuation_details 
                                                                     where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no)) 
                                                                     ) as Proptype,

                                                                     (
                                                                                                    select  
                                                                    string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')

                                                                    from  ngdrstab_conf_behavioral_patterns as confp
                                                                        JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                                                        where  mapping_ref_id=1 and mapping_ref_val IN(select property_id from ngdrstab_trn_property_details_entry where token_no= app.token_no )

                                                                                      ) as propaddress,

                                                                     (select string_agg(concat(prop.property_id,'-',village.village_name_en,':',pin_code),',') from 

                                                                      ngdrstab_trn_property_details_entry  as prop

                                                                      JOIN   ngdrstab_conf_admblock7_village_mapping   as village ON village.village_id=prop.village_id
                                                                      where prop.token_no=app.token_no
                                                                       ) as city,
                                                                      state_code, 
                                                                      'INDIA' as country_code,
                                                                    (select SUM(final_value::integer) from ngdrstab_trn_fee_calculation  as fee
                                                                     JOIN ngdrstab_trn_fee_calculation_detail feed ON feed.fee_calc_id=fee.fee_calc_id and fee_item_id=2
                                                                     where article_id=info.article_id and token_no=app.token_no  and delete_flag='N') as sdfee,
                                                                     party.party_full_name_en,
                                                                    gender.gender_desc_en,
                                                                    party.pan_no,
                                                                    party.uid,
                                                                    idtype.identificationtype_desc_en,
                                                                
                                                                    party.dob,
                                                                    party.father_full_name_en,
                                                                    party.age,(select  
                                                                    string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')

                                                                    from  ngdrstab_conf_behavioral_patterns as confp
                                                                        JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                                                        where  mapping_ref_id=2 and mapping_ref_val =party.party_id

                                                                                      ) as partyaddress,
                                                                      party.address_en,
                                                                      (select concat(village_name_en,':',party.pin_code)   from  ngdrstab_conf_admblock7_village_mapping   as village1 where village1.village_id=party.village_id
                                                                        ) as partycity,
                                                                      party.mobile_no as p_mobile,
                                                                        party.email_id,
                                                                            office.office_name_en ,
                                                                      office.officc_contact_no,
                                                                      usr.full_name,
                                                                      usr.mobile_no,
                                                                      concat(emp.flat_no,',',emp.building_no,',',emp.road_name,',',emp.locality,',',emp.city,'-',emp.pincode) as SROaddress																					   
                                                                    from ngdrstab_trn_application_submitted as app
                                                                    JOIN ngdrstab_conf_admblock1_state as statem ON statem.state_id=app.state_id
                                                                    JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                                                    JOIN ngdrstab_mst_article as article ON article.article_id=info.article_id
                                                                    JOIN ngdrstab_trn_party_entry_new as party ON party.token_no=app.token_no and is_presenter='Y'
                                                                    JOIN ngdrstab_mst_party_type pt on pt.party_type_id=party.party_type_id
                                                                    JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id
                                                                    JOIN ngdrstab_mst_user  as usr ON usr.user_id=app.org_user_id 
                                                                    LEFT JOIN ngdrstab_mst_nationality  as p_national ON p_national.nationality_id = party.nationality
                                                                    LEFT JOIN  ngdrstab_mst_employee emp ON emp.emp_code=usr.emp_code
                                                                    LEFT JOIN ngdrstab_mst_gender 	 as gender ON gender.gender_id=party.gender_id																					  
                                                                    LEFT JOIN ngdrstab_mst_identificationtype  idtype	ON idtype.identificationtype_id	=  party.identificationtype_id
                                                                    where app.final_stamp_flag='Y' and party.party_type_id IN(4,5) and article_desc_en like '%Sale Deed%' 
                                                                    and DATE(app.final_stamp_date) >='$from' and DATE(app.final_stamp_date) <='$to' order by party.party_id ASC");
//                pr($query);exit;
                        if (!empty($query)) {
                            $this->set('records', $query);
                        } else {
                            $this->Session->setFlash(__('Record Not Found!!!'));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_income_tax_annexxure1_alloffice'));
                        }
                    } else {
                        // pr($this->request->data);exit;

                        $from = $this->request->data['rpt_income_tax_annexxure1_alloffice']['from'];
                        $to = $this->request->data['rpt_income_tax_annexxure1_alloffice']['to'];
                        $officeid = $this->request->data['rpt_income_tax_annexxure1_alloffice']['office_id'];

                        $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $officeid");
                        $officename = $officename[0][0]['office_name_' . $lang];
                        $this->set('officename', $officename);

                        $query = $this->ApplicationSubmitted->query("select office.office_name_en,app.token_no,pt.party_type_desc_en,party.party_type_id,party.party_id,
                                                                    p_national.nationality_name_en,
                                                                    doc_reg_no,
                                                                    final_doc_reg_no,
                                                                    final_stamp_date,

                                                                    article_desc_en ,
                                                                    (select SUM(cons_amt) from ngdrstab_trn_fee_calculation where article_id=info.article_id and token_no=app.token_no  and delete_flag='N' and cons_amt >= 3000000) as consamt,
                                                                    (select SUM(rounded_val_amt) from ngdrstab_trn_valuation where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no and rounded_val_amt >= 3000000) ) as valamt,
                                                                    (select SUM(pamount) from ngdrstab_trn_payment_details where token_no=app.token_no and ngdrstab_trn_payment_details.account_head_code='0030045501')  as p_amount,

                                                                    (
                                                                    select string_agg(evalrule_desc_en,',') from ngdrstab_mst_evalrule_new 
                                                                     where evalrule_id IN
                                                                     (select distinct(rule_id) from ngdrstab_trn_valuation_details 
                                                                     where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no)) 
                                                                     ) as Proptype,

                                                                     (
                                                                                                    select  
                                                                    string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')

                                                                    from  ngdrstab_conf_behavioral_patterns as confp
                                                                        JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                                                        where  mapping_ref_id=1 and mapping_ref_val IN(select property_id from ngdrstab_trn_property_details_entry where token_no= app.token_no )

                                                                                      ) as propaddress,

                                                                     (select string_agg(concat(prop.property_id,'-',village.village_name_en,':',pin_code),',') from 

                                                                      ngdrstab_trn_property_details_entry  as prop

                                                                      JOIN   ngdrstab_conf_admblock7_village_mapping   as village ON village.village_id=prop.village_id
                                                                      where prop.token_no=app.token_no
                                                                       ) as city,
                                                                      state_code, 
                                                                      'INDIA' as country_code,
                                                                    (select SUM(final_value::integer) from ngdrstab_trn_fee_calculation  as fee
                                                                     JOIN ngdrstab_trn_fee_calculation_detail feed ON feed.fee_calc_id=fee.fee_calc_id and fee_item_id=2
                                                                     where article_id=info.article_id and token_no=app.token_no  and delete_flag='N') as sdfee,
                                                                     party.party_full_name_en,
                                                                    gender.gender_desc_en,
                                                                    party.pan_no,
                                                                    party.uid,
                                                                    idtype.identificationtype_desc_en,
                                                                
                                                                    party.dob,
                                                                    party.father_full_name_en,
                                                                    party.age,(select  
                                                                    string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')

                                                                    from  ngdrstab_conf_behavioral_patterns as confp
                                                                        JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                                                        where  mapping_ref_id=2 and mapping_ref_val =party.party_id

                                                                                      ) as partyaddress,
                                                                      party.address_en,
                                                                      (select concat(village_name_en,':',party.pin_code)   from  ngdrstab_conf_admblock7_village_mapping   as village1 where village1.village_id=party.village_id
                                                                        ) as partycity,
                                                                      party.mobile_no as p_mobile,
                                                                        party.email_id,
                                                                            office.office_name_en ,
                                                                      office.officc_contact_no,
                                                                      usr.full_name,
                                                                      usr.mobile_no,
                                                                      concat(emp.flat_no,',',emp.building_no,',',emp.road_name,',',emp.locality,',',emp.city,'-',emp.pincode) as SROaddress																					   
                                                                    from ngdrstab_trn_application_submitted as app
                                                                    JOIN ngdrstab_conf_admblock1_state as statem ON statem.state_id=app.state_id
                                                                    JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                                                    JOIN ngdrstab_mst_article as article ON article.article_id=info.article_id
                                                                    JOIN ngdrstab_trn_party_entry_new as party ON party.token_no=app.token_no and is_presenter='Y'
                                                                    JOIN ngdrstab_mst_party_type pt on pt.party_type_id=party.party_type_id 
                                                                    JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id
                                                                    JOIN ngdrstab_mst_user  as usr ON usr.user_id=app.org_user_id 
                                                                    LEFT JOIN ngdrstab_mst_nationality  as p_national ON p_national.nationality_id = party.nationality
                                                                    LEFT JOIN  ngdrstab_mst_employee emp ON emp.emp_code=usr.emp_code
                                                                    LEFT JOIN ngdrstab_mst_gender 	 as gender ON gender.gender_id=party.gender_id																					  
                                                                    LEFT JOIN ngdrstab_mst_identificationtype  idtype	ON idtype.identificationtype_id	=  party.identificationtype_id
                                                                    where app.office_id=$officeid and final_stamp_flag='Y' and party.party_type_id IN(4,5) and article_desc_en like '%Sale Deed%' 
                                                                    and DATE(app.final_stamp_date) >='$from' and DATE(app.final_stamp_date) <='$to' order by party.party_id ASC");
//                pr($query);exit;
                        if (!empty($query)) {
                            $this->set('records', $query);
                        } else {
                            $this->Session->setFlash(__('Record Not Found!!!'));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_income_tax_annexxure1_alloffice'));
                        }
                    }
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function rpt_income_tax_annexxure1_sro() { //for JH state
        try {
            array_map([$this, 'loadModel'], ['User', 'office', 'ApplicationSubmitted']);
            $this->set('htmldesign', NULL);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);
            ini_set('max_execution_time', 0);
            $office_id = $this->Auth->User('office_id');
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';

            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {

                $errarr = $this->validatedata($this->request->data['rpt_income_tax_annexxure1_sro'], $fieldlist);
                if ($this->validationError($errarr)) {

                    $from = $this->request->data['rpt_income_tax_annexxure1_sro']['from'];
                    $to = $this->request->data['rpt_income_tax_annexxure1_sro']['to'];

                    $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
                    $officename = $officename[0][0]['office_name_' . $lang];
                    $this->set('officename', $officename);

                    $query = $this->ApplicationSubmitted->query("select app.token_no,pt.party_type_desc_en,party.party_type_id,party.party_id,
                                                                    p_national.nationality_name_en,
                                                                    doc_reg_no,
                                                                    final_doc_reg_no,
                                                                    final_stamp_date,

                                                                    article_desc_en ,
                                                                    (select SUM(cons_amt) from ngdrstab_trn_fee_calculation where article_id=info.article_id and token_no=app.token_no  and delete_flag='N' and cons_amt >= 3000000) as consamt,
                                                                    (select SUM(rounded_val_amt) from ngdrstab_trn_valuation where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no and rounded_val_amt >= 3000000) ) as valamt,
                                                                    (select SUM(pamount) from ngdrstab_trn_payment_details where token_no=app.token_no and ngdrstab_trn_payment_details.account_head_code='0030045501')  as p_amount,

                                                                    (
                                                                    select string_agg(evalrule_desc_en,',') from ngdrstab_mst_evalrule_new 
                                                                     where evalrule_id IN
                                                                     (select distinct(rule_id) from ngdrstab_trn_valuation_details 
                                                                     where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no)) 
                                                                     ) as Proptype,

                                                                     (
                                                                                                    select  
                                                                    string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')

                                                                    from  ngdrstab_conf_behavioral_patterns as confp
                                                                        JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                                                        where  mapping_ref_id=1 and mapping_ref_val IN(select property_id from ngdrstab_trn_property_details_entry where token_no= app.token_no )

                                                                                      ) as propaddress,

                                                                     (select string_agg(concat(prop.property_id,'-',village.village_name_en,':',pin_code),',') from 

                                                                      ngdrstab_trn_property_details_entry  as prop

                                                                      JOIN   ngdrstab_conf_admblock7_village_mapping   as village ON village.village_id=prop.village_id
                                                                      where prop.token_no=app.token_no
                                                                       ) as city,
                                                                      state_code, 
                                                                      'INDIA' as country_code,
                                                                    (select SUM(final_value::integer) from ngdrstab_trn_fee_calculation  as fee
                                                                     JOIN ngdrstab_trn_fee_calculation_detail feed ON feed.fee_calc_id=fee.fee_calc_id and fee_item_id=2
                                                                     where article_id=info.article_id and token_no=app.token_no  and delete_flag='N') as sdfee,
                                                                     party.party_full_name_en,
                                                                    gender.gender_desc_en,
                                                                    party.pan_no,
                                                                    party.uid,
                                                                    idtype.identificationtype_desc_en,
                                                                
                                                                    party.dob,
                                                                    party.father_full_name_en,
                                                                    party.age,(select  
                                                                    string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')

                                                                    from  ngdrstab_conf_behavioral_patterns as confp
                                                                        JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                                                        where  mapping_ref_id=2 and mapping_ref_val =party.party_id

                                                                                      ) as partyaddress,
                                                                      party.address_en,
                                                                      (select concat(village_name_en,':',party.pin_code)   from  ngdrstab_conf_admblock7_village_mapping   as village1 where village1.village_id=party.village_id
                                                                        ) as partycity,
                                                                      party.mobile_no as p_mobile,
                                                                        party.email_id,
                                                                            office.office_name_en ,
                                                                      office.officc_contact_no,
                                                                      usr.full_name,
                                                                      usr.mobile_no,
                                                                      concat(emp.flat_no,',',emp.building_no,',',emp.road_name,',',emp.locality,',',emp.city,'-',emp.pincode) as SROaddress																					   
                                                                    from ngdrstab_trn_application_submitted as app
                                                                    JOIN ngdrstab_conf_admblock1_state as statem ON statem.state_id=app.state_id
                                                                    JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                                                    JOIN ngdrstab_mst_article as article ON article.article_id=info.article_id
                                                                    JOIN ngdrstab_trn_party_entry_new as party ON party.token_no=app.token_no and is_presenter='Y'
                                                                    JOIN ngdrstab_mst_party_type pt on pt.party_type_id=party.party_type_id
                                                                    JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id
                                                                    JOIN ngdrstab_mst_user  as usr ON usr.user_id=app.org_user_id 
                                                                    LEFT JOIN ngdrstab_mst_nationality  as p_national ON p_national.nationality_id = party.nationality
                                                                    LEFT JOIN  ngdrstab_mst_employee emp ON emp.emp_code=usr.emp_code
                                                                    LEFT JOIN ngdrstab_mst_gender 	 as gender ON gender.gender_id=party.gender_id																					  
                                                                    LEFT JOIN ngdrstab_mst_identificationtype  idtype	ON idtype.identificationtype_id	=  party.identificationtype_id
                                                                    where app.office_id=$office_id and final_stamp_flag='Y' and party.party_type_id IN(4,5) and article_desc_en like '%Sale Deed%' 
                                                                    and DATE(app.final_stamp_date) >='$from' and DATE(app.final_stamp_date) <='$to' order by party.party_id ASC");
//                pr($query);exit;
                    if (!empty($query)) {
                        $this->set('records', $query);
                    } else {
                        $this->Session->setFlash(__('Record Not Found!!!'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_income_tax_annexxure1_sro'));
                    }
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function rpt_income_tax_office() {  //for JH state
        try {
            $this->check_role_escalation();
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'office', 'District']);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office = $this->office->find('list', array('fields' => array('office_name_' . $lang), 'order' => 'office_name_' . $lang));
            $this->set('office', $office);
            ini_set('max_execution_time', 0);

            if ($this->request->is('post')) {

                $from = date('Y-m-d', strtotime($this->request->data['rpt_income_tax_office']['from']));
                $to = date('Y-m-d', strtotime($this->request->data['rpt_income_tax_office']['to']));
                $officeid = $this->request->data['rpt_income_tax_office']['office_id'];


                $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $officeid");
                $offnm = $officename[0][0]['office_name_en'];
                $this->set('officename', $offnm);


                $i_tax = $this->ApplicationSubmitted->Query("SELECT article.article_desc_en,aps.token_no,pt.party_type_desc_en,party_full_name_en, party.father_full_name_en,address_en,pan_no,
                                        aps.token_no,vd.usage_sub_catg_desc_en, vill.village_name_en,list.list_1_desc_en, 
                                        list_prop.level_1_desc_en,construction_type_desc_en,SUM(cal.cons_amt) as regd_st_val,val.rounded_val_amt as regd_value,aps.final_doc_reg_no,aps.final_stamp_date,

                                    (select string_agg(concat(pattern_desc_en,'-',field_value_en),',')
					from  ngdrstab_conf_behavioral_patterns as confp
					JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
					where  mapping_ref_id=1 and mapping_ref_val IN
					(select property_id from ngdrstab_trn_property_details_entry where token_no=aps.token_no)) as prop_address        

                                    FROM ngdrstab_trn_application_submitted aps
                                    join ngdrstab_trn_property_details_entry prop on prop.token_no=aps.token_no
                                    join ngdrstab_trn_party_entry_new party on party.token_no=aps.token_no
				    join ngdrstab_mst_party_type pt on pt.party_type_id=party.party_type_id
                                    join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                    left join ngdrstab_mst_article article on article.article_id=gen.article_id
                                    join ngdrstab_trn_fee_calculation cal on cal.token_no=aps.token_no and cal.cons_amt > 500000
				    join ngdrstab_mst_loc_level_1_prop_list list on list.level_1_id=prop.level1_list_id
				    join ngdrstab_mst_location_levels_1_property list_prop on list_prop.level_1_id=prop.level1_id
                                    join ngdrstab_conf_admblock7_village_mapping vill on vill.village_id=prop.village_id
				    join ngdrstab_trn_valuation val ON val.val_id=prop.val_id
                                    join ngdrstab_mst_usage_sub_category vd on vd.usage_sub_catg_id=val.usage_sub_catg_id
                                    left join ngdrstab_mst_construction_type ctype ON ctype.construction_type_id=prop.construction_type_id
				    where aps.office_id=$officeid and aps.final_stamp_date>='$from' and aps.final_stamp_date<='$to' and article.article_desc_en like '%Sale Deed%'
                                    GROUP BY article.article_desc_en,aps.final_stamp_date,address_en,pan_no,father_full_name_en,pt.party_type_desc_en,party.party_full_name_en,prop.val_id,aps.token_no,vd.usage_sub_catg_desc_en,aps.final_doc_reg_no, gen.exec_date,vill.village_name_en,list.list_1_desc_en, list_prop.level_1_desc_en,prop.construction_type_id,construction_type_desc_en,val.rounded_val_amt
                                    order by aps.token_no");
                // pr($i_tax); exit;
                if (!empty($i_tax)) {
                    $this->set('itax', $i_tax);
                    $this->set('from', $from);
                } else {
                    $this->Session->setFlash(__('Record Not Found!!!'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_income_tax_office'));
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_income_tax_sro() { //for JH state
        try {
            $this->check_role_escalation();
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'office', 'District']);
            $stateid = $this->Auth->User("state_id");
            $office_id = $this->Auth->User('office_id');

            $officename = $this->office->query("select office_name_en from ngdrstab_mst_office where office_id = $office_id");
            ini_set('max_execution_time', 0);
            if ($this->request->is('post')) {

                $from = date('Y-m-d', strtotime($this->request->data['rpt_income_tax_sro']['from']));
                $to = date('Y-m-d', strtotime($this->request->data['rpt_income_tax_sro']['to']));

                $i_tax = $this->ApplicationSubmitted->Query("SELECT article.article_desc_en,aps.token_no,pt.party_type_desc_en,party_full_name_en, party.father_full_name_en,address_en,pan_no,
                                        aps.token_no,vd.usage_sub_catg_desc_en, vill.village_name_en,list.list_1_desc_en, 
                                        list_prop.level_1_desc_en,construction_type_desc_en,SUM(cal.cons_amt) as regd_st_val,val.rounded_val_amt as regd_value,aps.final_doc_reg_no,aps.final_stamp_date,

                                    (select string_agg(concat(pattern_desc_en,'-',field_value_en),',')
					from  ngdrstab_conf_behavioral_patterns as confp
					JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
					where  mapping_ref_id=1 and mapping_ref_val IN
					(select property_id from ngdrstab_trn_property_details_entry where token_no=aps.token_no)) as prop_address        

                                    FROM ngdrstab_trn_application_submitted aps
                                    left join ngdrstab_trn_property_details_entry prop on prop.token_no=aps.token_no
                                    left join ngdrstab_trn_party_entry_new party on party.token_no=aps.token_no
				    left join ngdrstab_mst_party_type pt on pt.party_type_id=party.party_type_id
                                    left join ngdrstab_trn_generalinformation gen on gen.token_no=aps.token_no
                                    left join ngdrstab_mst_article article on article.article_id=gen.article_id
                                    left join ngdrstab_trn_fee_calculation cal on cal.token_no=aps.token_no and cal.cons_amt > 500000
				    left join ngdrstab_mst_loc_level_1_prop_list list on list.level_1_id=prop.level1_list_id
				    left join ngdrstab_mst_location_levels_1_property list_prop on list_prop.level_1_id=prop.level1_id
                                    left join ngdrstab_conf_admblock7_village_mapping vill on vill.village_id=prop.village_id
				    left join ngdrstab_trn_valuation val ON val.val_id=prop.val_id 
                                    left join ngdrstab_mst_usage_sub_category vd on vd.usage_sub_catg_id=val.usage_sub_catg_id
                                    left join ngdrstab_mst_construction_type ctype ON ctype.construction_type_id=prop.construction_type_id
				    where aps.office_id=$office_id and aps.final_stamp_date>='$from' and aps.final_stamp_date<='$to' and article.article_desc_en like '%Sale Deed%'
                                    GROUP BY article.article_desc_en,aps.final_stamp_date,address_en,pan_no,father_full_name_en,pt.party_type_desc_en,party.party_full_name_en,prop.val_id,aps.token_no,vd.usage_sub_catg_desc_en,aps.final_doc_reg_no, gen.exec_date,vill.village_name_en,list.list_1_desc_en, list_prop.level_1_desc_en,prop.construction_type_id,construction_type_desc_en,val.rounded_val_amt
                                    order by aps.token_no");
                // pr($i_tax); exit;
                if (!empty($i_tax)) {
                    $this->set('itax', $i_tax);
                    $this->set('from', $from);
                } else {
                    $this->Session->setFlash(__('Record Not Found!!!'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_income_tax_sro'));
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_fee_register_officewise() { //for JH state
        try {
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'office']);
            $stateid = $this->Auth->User("state_id");
            ini_set('max_execution_time', 0);
            $fieldlist = array();
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);

            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {

                //pr($this->request->data);exit;
                $errarr = $this->validatedata($this->request->data['rpt_fee_register_officewise'], $fieldlist);
                if ($this->validationError($errarr)) {

                    $from = date('Y-m-d', strtotime($this->request->data['rpt_fee_register_officewise']['from']));
                    $to = date('Y-m-d', strtotime($this->request->data['rpt_fee_register_officewise']['to']));

                    $data = $this->ApplicationSubmitted->Query("select off.office_id, off.office_name_en,
                                        coalesce((select SUM(pamount) from ngdrstab_trn_payment_details as pay 
                                        JOIN ngdrstab_trn_application_submitted as app ON app.office_id=off.office_id and pay.token_no=app.token_no
                                        where pay.account_head_code='101'
                                        and app.final_stamp_flag='Y' and app.final_stamp_date>= '$from' and app.final_stamp_date<= '$to'
                                        ),0) as A1 ,
                                        coalesce((select SUM(pamount) from ngdrstab_trn_payment_details as pay 
                                        JOIN ngdrstab_trn_application_submitted as app ON app.office_id=off.office_id and pay.token_no=app.token_no
                                        where pay.account_head_code='110'
                                        and app.final_stamp_flag='Y' and app.final_stamp_date>= '$from' and app.final_stamp_date<= '$to'
                                        ),0) as SP ,
                                        coalesce((select SUM(pamount) from ngdrstab_trn_payment_details as pay 
                                        JOIN ngdrstab_trn_application_submitted as app ON app.office_id=off.office_id and pay.token_no=app.token_no
                                        where pay.account_head_code='0030045501'
                                        and app.final_stamp_flag='Y' and app.final_stamp_date>= '$from' and app.final_stamp_date<= '$to'
                                        ),0) as SD ,
                                        coalesce((select count(app.token_no) from  ngdrstab_trn_application_submitted as app where app.office_id=off.office_id  
                                        and app.final_stamp_flag='Y' and app.final_stamp_date>= '$from' and app.final_stamp_date<= '$to'
                                        ),0) as token 
                                        from ngdrstab_mst_office as off 
                                        where off.display_flag='Y'
                                        group by off.office_id, off.office_id, off.office_name_en order by off.office_id ASC");
                    //pr($data);exit;
                    if (!empty($data)) {
                        $this->set('fee_book', $data);
                        $this->set('from', $from);
                        $this->set('to', $to);
                    } else {
                        $this->Session->setFlash(__('Record Not Found!!!'));
                        $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_fee_register_officewise'));
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function rpt_female_rebate() {   //for JH state
        try {
            array_map([$this, 'loadModel'], ['party_entry', 'ApplicationSubmitted', 'office', 'District']);
            $stateid = $this->Auth->User("state_id");
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $office = $this->office->find('list', array('fields' => array('office_name_' . $lang), 'order' => 'office_name_' . $lang));
            $this->set('office', $office);
            $this->set('rdbtn', '');
            $flag = ['O' => 'All Offices', 'S' => 'SRO Wise'];
            $this->set('usercreate_flag', $flag);
            ini_set('max_execution_time', 0);
            $fieldlist = array();
            $fieldlist['usercreate_flag']['select'] = 'is_alpha_select';
            $fieldlist['from']['text'] = 'is_required';
            $fieldlist['to']['text'] = 'is_required';
            $this->set('fieldlist', $fieldlist);
            $this->set('result_codes', $this->getvalidationruleset($fieldlist));

            if ($this->request->is('post')) {
                $errarr = $this->validatedata($this->request->data['rpt_female_rebate'], $fieldlist);
                if ($this->validationError($errarr)) {
                    $this->set('rdbtn', $_POST['rdbtn']);

                    if ($this->request->data['rpt_female_rebate']['usercreate_flag'] == 'S') {
                        $from = date('Y-m-d', strtotime($this->request->data['rpt_female_rebate']['from']));
                        $to = date('Y-m-d', strtotime($this->request->data['rpt_female_rebate']['to']));
                        $officeid = $this->request->data['rpt_female_rebate']['office_id'];

                        $debate = $this->ApplicationSubmitted->Query("select off.office_name_en,inc.final_amt,info.article_id,aps.token_no,aps.final_stamp_date,
                                                                    p.party_full_name_en, aps.final_doc_reg_no, 
                                                                    (select SUM(cons_amt) from ngdrstab_trn_fee_calculation where article_id=info.article_id and token_no=aps.token_no  and delete_flag='N') as cons_amt,
                                                                    (select SUM(rounded_val_amt) from ngdrstab_trn_valuation where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=aps.token_no) ) as valamt
                                                                    from ngdrstab_trn_application_submitted as aps
                                                                    JOIN ngdrstab_trn_party_entry_new as p ON p.token_no=aps.token_no and p.is_presenter='Y'
                                                                    JOIN ngdrstab_trn_generalinformation as info ON info.token_no=aps.token_no
                                                                    JOIN ngdrstab_trn_stamp_duty as inc ON inc.token_no=aps.token_no
                                                                    JOIN ngdrstab_mst_office as off ON off.office_id=aps.office_id
                                                                    JOIN ngdrstab_trn_fee_calculation fee_cal on fee_cal.token_no=aps.token_no AND fee_cal.fee_rule_id IN(197)
                                                                    where aps.office_id=$officeid and aps.final_stamp_date>= '$from' and aps.final_stamp_date<= '$to'");
//                     pr($debate);exit;

                        if (!empty($debate)) {
                            $this->set('f_debate', $debate);
                            $this->set('from', $from);
                        } else {
                            $this->Session->setFlash(__('Record Not Found!!!'));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_female_rebate'));
                        }
                    } else {

                        $from = date('Y-m-d', strtotime($this->request->data['rpt_female_rebate']['from']));
                        $to = date('Y-m-d', strtotime($this->request->data['rpt_female_rebate']['to']));

                        $debate = $this->ApplicationSubmitted->Query("select off.office_name_en,fee_cal.cons_amt,inc.final_amt,info.article_id,aps.token_no,aps.final_stamp_date,
                                                                    p.party_full_name_en, aps.final_doc_reg_no, 
                                                                    (select SUM(cons_amt) from ngdrstab_trn_fee_calculation where article_id=info.article_id and token_no=aps.token_no  and delete_flag='N') as consamt,
                                                                    (select SUM(rounded_val_amt) from ngdrstab_trn_valuation where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=aps.token_no) ) as valamt
                                                                    from ngdrstab_trn_application_submitted as aps
                                                                    JOIN ngdrstab_trn_party_entry_new as p ON p.token_no=aps.token_no and p.is_presenter='Y'
                                                                    JOIN ngdrstab_trn_generalinformation as info ON info.token_no=aps.token_no
                                                                    JOIN ngdrstab_trn_stamp_duty as inc ON inc.token_no=aps.token_no
                                                                    JOIN ngdrstab_mst_office as off ON off.office_id=aps.office_id
                                                                    join ngdrstab_trn_fee_calculation fee_cal on fee_cal.token_no=aps.token_no AND fee_cal.fee_rule_id IN(197)
                                                                    where aps.final_stamp_date>= '$from' and aps.final_stamp_date<= '$to'");
//                     pr($debate);exit;
                        if (!empty($debate)) {
                            $this->set('f_debate', $debate);
                            $this->set('from', $from);
                            //$this->set('office', $ofnm);
                        } else {
                            $this->Session->setFlash(__('Record Not Found!!!'));
                            $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_female_rebate'));
                        }
                    }
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    public function getstampdata($token_no, $article_id) {  //sub function for JH state
        array_map([$this, 'loadModel'], ['ApplicationSubmitted']);
        $record = $this->ApplicationSubmitted->Query("SELECT 
                                                        feeitem.account_head_code,
                                                        feeitem.fee_item_id,
                                                        feeitem.fee_item_desc_en,
                                                        feeitem. fee_preference,
                                                        (SUM(stampd.final_value))-coalesce(
                                                        (select coalesce(online_adj_amt,counter_adj_amt,0) from ngdrstab_trn_stamp_duty_adjustment_detail where  token_no=stamp.token_no and feeitem.fee_item_id=2),0)- coalesce(
                                                        (select coalesce(invest_stamp_amount,0) from ngdrstab_trn_stamp_duty_investment_detail where  token_no=stamp.token_no AND online_invest_doc_date > '1990-01-01'::date -365 AND  feeitem.fee_item_id=2),0)  as totalsd, 
							(SELECT SUM(stampd1.final_value) as totalsd1
							FROM ngdrstab_trn_fee_calculation_detail stampd1 
							LEFT JOIN ngdrstab_trn_fee_calculation stamp1 ON stampd1.fee_calc_id = stamp1.fee_calc_id
							LEFT JOIN ngdrstab_mst_article_fee_items feeitem1  ON feeitem1.fee_item_id=stampd1.fee_item_id
							WHERE  stamp1.token_no=stamp.token_no  
							AND stamp1.delete_flag='N' 
							AND feeitem1.fee_param_type_id=2 
							AND stamp1.article_id IN(9998)
							AND feeitem1.fee_item_id=feeitem.fee_item_id
							group by feeitem1.fee_item_id
							order by feeitem1.fee_preference ASC
							)
                                                        FROM ngdrstab_trn_fee_calculation_detail stampd 
                                                        LEFT JOIN ngdrstab_trn_fee_calculation stamp     ON stampd.fee_calc_id = stamp.fee_calc_id
                                                        LEFT JOIN ngdrstab_mst_article_fee_items feeitem  ON feeitem.fee_item_id=stampd.fee_item_id
                                                        WHERE stamp.token_no=$token_no AND stamp.delete_flag='N' 
                                                        AND feeitem.fee_param_type_id=2 
                                                        AND stamp.article_id IN($article_id,9999,9997)
                                                        group by feeitem.fee_item_id,stamp.token_no
                                                        order by feeitem.fee_preference ASC");
        return $record;
    }

    public function payment_status_details() {   //for JH state
        try {
            array_map([$this, 'loadModel'], ['office', 'ApplicationSubmitted', 'payment']);
            $stateid = $this->Auth->User('state_id');
            $lang = $this->Session->read("sess_langauge");
            $this->set('lang', $lang);

            if ($this->request->is('post')) {

                $token_no = $this->request->data['payment_status_details']['token_no'];
                $grn_no = $this->request->data['payment_status_details']['grn_no'];

                if (!empty($token_no)) {
                    $cond = "pay.token_no=$token_no";
                    $this->set('cond', $cond);
                } if (!empty($grn_no)) {
                    $cond = "pay.gateway_trans_id='$grn_no'";
                    $this->set('cond', $cond);
                }

                if (empty($token_no) && empty($grn_no)) {
                    $this->Session->setFlash(__('Record Not Found!!!'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'payment_status_details'));
                }

                $pay = $this->ApplicationSubmitted->query("SELECT off.office_name_en,
                                                            pay.token_no,
                                                            pay.payee_fname_en,
                                                            pay.bank_trn_ref_number AS cin_no,
                                                            pay.transaction_id,
                                                            pay.gateway_trans_id AS grn_no,
                                                            pay.payment_status,
                                                            pay.pamount,
                                                            pay.pdate
                                                     FROM ngdrstab_trn_bank_payment pay
                                                     INNER JOIN ngdrstab_trn_application_submitted app ON pay.token_no = app.token_no
                                                     INNER JOIN ngdrstab_mst_office off ON off.office_id = app.office_id
                                                     WHERE $cond");

                if (!empty($pay)) {
                    $this->set('paygrid', $pay);
                } else {
                    $this->Session->setFlash(__('Record Not Found!!!'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'payment_status_details'));
                }
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
            return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
        }
    }

    function get_all_payment_status() { //sub function for JH state
        try {
            $this->autoRender = FALSE;
            if (isset($_POST["token_no"]) && isset($_POST["payment_status"])) {
                // pr($_POST["payment_status"]);pr($_POST["token_no"]);
                $s = trim($_POST["payment_status"]);
                array_map(array($this, 'loadModel'), array('payment'));
                $result = $this->payment->query("SELECT pay.created, off.office_name_en, app.final_doc_reg_no,pay.pdate,app.final_stamp_date
                                                     FROM ngdrstab_trn_bank_payment pay
                                                     INNER JOIN ngdrstab_trn_application_submitted app ON pay.token_no = app.token_no
                                                     INNER JOIN ngdrstab_mst_office off ON off.office_id = app.office_id
                                                     WHERE pay.token_no=? limit 1", array($_POST["token_no"]));

                $party = $this->payment->query("SELECT p.pan_no,pt.party_type_desc_en,address_en, p.party_full_name_en,p.age FROM ngdrstab_trn_party_entry_new p
                              left outer join ngdrstab_mst_party_type pt on pt.party_type_id=p.party_type_id 
                              where p.token_no=? order by p.party_type_id ASC", array($_POST["token_no"]));

//                pr($result);
                if (!empty($result)) {
                    foreach ($result as $rec1) {
                        if ($s == "SUCCESS") {
                            $html_design = "<table border=1 width=100%>"
                                    . "<tr style='background-color: #d68910'><td colspan='4'> <b>Token Number :  " . $_POST["token_no"] . " </b></tr></table><br>";
                            $html_design .= "<table border=1 width='600'>"
                                    . " <tbody align='center'>"
                                    . "<tr ><td>Status </td><td><b>" . $_POST["payment_status"] . "</b></td></tr>"
                                    . "<tr> <td>Payment Date</td><td><b>" . $rec1[0]['pdate'] . "</b> </td></tr>";

                            if ($rec1[0]['final_doc_reg_no'] == null) {
                                $html_design .= "<tr><td>Deed No.</td><td><b>Deed Number Not Generated!!!</b></td></tr>";
                            } else {
                                $html_design .= "<tr><td>Deed No.</td><td><b>" . $rec1[0]['final_doc_reg_no'] . "</b> </td></tr>";
                            }
                            $html_design .= "<tr><td>Office Name</td><td><b>" . $rec1[0]['office_name_en'] . "</b>  </td></tr>"
                                    . "<tr><td>Execution Date</td><td><b>" . $rec1[0]['final_stamp_date'] . "</b>  </td></tr>"
                                    . " </tbody> "
                                    . "</table><br>";

                            $html_design .= "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                                        <thead>
                                            <tr>
                                                
                                                <th style='text-align: center;' width=25%>Party Name</th>
                                                <th style='text-align: center;' width=35%>Party Address</th>
                                                <th style='text-align: center;' width=25%>Party Type</th>
                                                <th style='text-align: center;' width=15%>Age</th>
                                            </tr>
                                        </thead>
                                        <tbody>";

                            foreach ($party as $p) {

                                $html_design .= "<tr>"
                                        . "<td style='text-align: center;' width=25%> " . $p[0]['party_full_name_en'] . " </td>"
                                        . "<td style='text-align: center;' width=35%>" . $p[0]['address_en'] . " </td>"
                                        . "<td style='text-align: center;' width=25%>" . $p[0]['party_type_desc_en'] . "</td>"
                                        . "<td style='text-align: center;' width=15%>" . $p[0]['age'] . " </td>";
                            }
                            $html_design .= "</tbody> </table>";


                            echo $html_design;
                        } else if ($s == "CREATED") {
                            $html_design = "Payment Status Created...!!!";
                            echo $html_design;
                        } else {
                            $html_design = "<table border=1 width='600'>"
                                    . " <tbody align='center'>"
                                    . "<tr ><td>Status </td><td><b>" . $_POST["payment_status"] . "</b></td></tr>"
                                    . "<tr> <td>Payment Date</td><td><b>" . $rec1[0]['created'] . "</b> </td></tr>";

                            if ($rec1[0]['final_doc_reg_no'] == null) {
                                $html_design .= "<tr><td>Deed No.</td><td><b>Deed Number Not Generated!!!</b></td></tr>";
                            } else {
                                $html_design .= "<tr><td>Deed No.</td><td><b>" . $rec1[0]['final_doc_reg_no'] . "</b> </td></tr>";
                            }
                            $html_design .= "<tr><td>Office Name</td><td><b>" . $rec1[0]['office_name_en'] . "</b>  </td></tr>"
                                    . "<tr><td>Execution Date</td><td><b>" . $rec1[0]['final_stamp_date'] . "</b>  </td></tr>"
                                    . " </tbody> "
                                    . "</table><br>";

                            $html_design .= "<table width='100%' class='table table-striped table-bordered table-hover' border=1>
                                        <thead>
                                            <tr>
                                                
                                                <th style='text-align: center;' width=25%>Party Name</th>
                                                <th style='text-align: center;' width=35%>Party Address</th>
                                                <th style='text-align: center;' width=25%>Party Type</th>
                                                <th style='text-align: center;' width=15%>Age</th>
                                            </tr>
                                        </thead>
                                        <tbody>";

                            foreach ($party as $p) {

                                $html_design .= "<tr>"
                                        . "<td style='text-align: center;' width=25%> " . $p[0]['party_full_name_en'] . " </td>"
                                        . "<td style='text-align: center;' width=35%>" . $p[0]['address_en'] . " </td>"
                                        . "<td style='text-align: center;' width=25%>" . $p[0]['party_type_desc_en'] . "</td>"
                                        . "<td style='text-align: center;' width=15%>" . $p[0]['age'] . " </td>";
                            }
                            $html_design .= "</tbody> </table>";


                            echo $html_design;
                        }
                    }
                }
            } else {
                return $this->redirect(array('controller' => 'Error', 'action' => 'exception_occurred'));
            }
        } catch (Exception $ex) {
            
        }
    }

    public function rpt_income_tax_annexxure1() { ////for punjab state
        try {
            array_map([$this, 'loadModel'], ['office', 'ApplicationSubmitted']);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);

            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $officelist = $this->office->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'order' => 'office_name_' . $lang));
            $this->set('officelist', $officelist);

            if ($this->request->is('post')) {

                $to = "'" . $this->request->data['rpt_income_tax_annexxure1']['to'] . "'";
                $from = "'" . $this->request->data['rpt_income_tax_annexxure1']['from'] . "'";
                $office_id = $this->request->data['rpt_income_tax_annexxure1']['office_id'];
                //   $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");

                $query = $this->ApplicationSubmitted->query("select app.token_no,
                                                                    doc_reg_no,
                                                                    final_doc_reg_no,
                                                                    final_stamp_date,

                                                                    article_desc_en ,
                                                                    (select SUM(cons_amt) from ngdrstab_trn_fee_calculation where article_id=info.article_id and token_no=app.token_no  and delete_flag='N') as consamt,
                                                                    (select SUM(rounded_val_amt) from ngdrstab_trn_valuation where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no) ) as valamt,
                                                                    (
                                                                    select string_agg(evalrule_desc_en,',') from ngdrstab_mst_evalrule_new 
                                                                     where evalrule_id IN
                                                                     (select distinct(rule_id) from ngdrstab_trn_valuation_details 
                                                                     where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no)) 
                                                                     ) as Proptype,

                                                                     (
                                                                                                    select  
                                                                    string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')

                                                                    from  ngdrstab_conf_behavioral_patterns as confp
                                                                        JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                                                        where  mapping_ref_id=1 and mapping_ref_val IN(select property_id from ngdrstab_trn_property_details_entry where token_no= app.token_no )

                                                                                      ) as propaddress,

                                                                     (select string_agg(concat(prop.property_id,'-',village.village_name_en,':',pin_code),',') from 

                                                                      ngdrstab_trn_property_details_entry  as prop

                                                                      JOIN   ngdrstab_conf_admblock7_village_mapping   as village ON village.village_id=prop.village_id
                                                                      where prop.token_no=app.token_no
                                                                       ) as city,
                                                                      state_code, 
                                                                      'INDIA' as country_code,
                                                                    (select SUM(final_value::integer) from ngdrstab_trn_fee_calculation  as fee
                                                                     JOIN ngdrstab_trn_fee_calculation_detail feed ON feed.fee_calc_id=fee.fee_calc_id and fee_item_id=2
                                                                     where article_id=info.article_id and token_no=app.token_no  and delete_flag='N') as sdfee,
                                                                     party.party_full_name_en,
                                                                    gender.gender_desc_en,
                                                                    party.pan_no,
                                                                    party.uid,
                                                                    idtype.identificationtype_desc_en,
                                                                     party.identificationtype_desc_en,
                                                                    party.dob,
                                                                    party.age,(select  
                                                                    string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')

                                                                    from  ngdrstab_conf_behavioral_patterns as confp
                                                                        JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                                                        where  mapping_ref_id=2 and mapping_ref_val =party.party_id

                                                                                      ) as partyaddress,
                                                                      party.address_en,
                                                                      (select concat(village_name_en,':',party.pin_code)   from  ngdrstab_conf_admblock7_village_mapping   as village1 where village1.village_id=party.village_id
                                                                        ) as partycity,
                                                                      party.mobile_no as p_mobile,
                                                                        party.email_id,
                                                                            office.office_name_en ,
                                                                      office.officc_contact_no,
                                                                      usr.full_name,
                                                                      usr.mobile_no,
                                                                      concat(emp.flat_no,',',emp.building_no,',',emp.road_name,',',emp.locality,',',emp.city,'-',emp.pincode) as SROaddress																					   
                                                                    from ngdrstab_trn_application_submitted as app
                                                                    JOIN ngdrstab_conf_admblock1_state as statem ON statem.state_id=app.state_id
                                                                    JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                                                    JOIN ngdrstab_mst_article as article ON article.article_id=info.article_id
                                                                    JOIN ngdrstab_trn_party_entry_new as party ON party.token_no=app.token_no and is_presenter='Y'
                                                                    JOIN ngdrstab_mst_office as office ON office.office_id=app.office_id
                                                                    JOIN ngdrstab_mst_user  as usr ON usr.user_id=app.org_user_id  
                                                                    LEFT JOIN  ngdrstab_mst_employee emp ON emp.emp_code=usr.emp_code
                                                                    LEFT JOIN ngdrstab_mst_gender 	 as gender ON gender.	gender_id=party.gender_id																					  
                                                                    LEFT JOIN ngdrstab_mst_identificationtype  idtype	ON idtype.identificationtype_id	=  party.identificationtype_id
                                                                    where app.office_id=$office_id and final_stamp_flag='Y'  and DATE(app.final_stamp_date) >=$from and DATE(app.final_stamp_date) <=$to");

                if (!empty($query)) {
                    $this->set('records', $query);
                } else {
                    $this->Session->setFlash(__('Record Not Found!!!'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_income_tax_annexxure1'));
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function rpt_income_tax_annexxure2() { //for punjab state
        try {
            array_map([$this, 'loadModel'], ['office', 'ApplicationSubmitted', 'party_entry']);
            $this->set('htmldesign', null);
            $this->set('actiontype', NULL);
            $this->set('hfname', NULL);

            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $officelist = $this->office->find('list', array('fields' => array('office_id', 'office_name_' . $lang), 'order' => 'office_name_' . $lang));
            $this->set('officelist', $officelist);

            if ($this->request->is('post')) {
                $to = "'" . $this->request->data['rpt_income_tax_annexxure2']['to'] . "'";
                $from = "'" . $this->request->data['rpt_income_tax_annexxure2']['from'] . "'";
                $office_id = $this->request->data['rpt_income_tax_annexxure2']['office_id'];
                $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $office_id");
                $officename = $officename[0][0]['office_name_' . $lang];

                $query2 = $this->party_entry->query("select app.token_no,pn.party_id,pn.token_no,
                                        ma.article_desc_en as Transaction_type,app.doc_reg_no,
                                                                    app.final_doc_reg_no,
                                        em.itr_number as ITDREIN_NUMBER,
                                        us.full_name as Name_of_sro,
                                        us.mobile_no,off.office_name_en,
                                        pn.party_full_name_en,app.final_stamp_date as Transaction_date,
                                        app.final_doc_reg_no as Transaction_id,dob,
                                        pn.pan_no,pn.uid,pn.identificationtype_id,
                                        pn.identificationtype_desc_en,id.identificationtype_desc_en,pn.mobile_no,
                                        pn.father_full_name_en,pn.address_en,
                                        CONCAT(em.building_no, ',', em.flat_no, ',' ,em.road_name,',',em.locality,',',em.city,',',em.village) as SRO_ADDRESS,
                                        (select SUM(cons_amt) from ngdrstab_trn_fee_calculation where article_id=info.article_id and token_no=app.token_no  and delete_flag='N') as consamt,
                                        (select SUM(rounded_val_amt) from ngdrstab_trn_valuation where val_id IN(select val_id from ngdrstab_trn_property_details_entry where token_no=app.token_no)) as valamt,

                                        (select  
                                              string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')
                                              from  ngdrstab_conf_behavioral_patterns as confp
                                              JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                               where  mapping_ref_id=2 and mapping_ref_val =pn.party_id)
                                   from  
                                            ngdrstab_trn_party_entry_new as pn
                                            JOIN ngdrstab_trn_application_submitted as app ON app.token_no= pn.token_no
                                            JOIN ngdrstab_mst_identificationtype as id ON id.identificationtype_id=pn.identificationtype_id
                                            JOIN ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                            JOIN ngdrstab_mst_article as ma ON ma.article_id=info.article_id
                                            JOIN ngdrstab_mst_office as off ON off.office_id=app.office_id
                                    JOIN ngdrstab_mst_user as us ON us.user_id=app.org_user_id
                                     left JOIN ngdrstab_mst_employee as em ON em.emp_code=us.emp_code

                                   where app.office_id=$office_id and final_stamp_flag='Y'  and DATE(app.final_stamp_date) >=$from and DATE(app.final_stamp_date) <=$to");
//pr($query2);exit;
                if (!empty($query2)) {
                    $this->set('records2', $query2);
                } else {
                    $this->Session->setFlash(__('Record Not Found!!!'));
                    $this->redirect(array('controller' => 'Reports', 'action' => 'rpt_income_tax_annexxure2'));
                }
            }
        } catch (Exception $e) {
            pr($e);
            exit;
        }
    }

    public function rpt_day_book_mh() { //maharashtra state
        try {
            array_map([$this, 'loadModel'], ['office', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 26)));
            $officeid = $this->Auth->User("office_id");
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $officeid");
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);

            if ($this->request->is('post')) {

                $from = date('Y-m-d', strtotime($this->request->data['rpt_day_book_mh']['from']));
                //$to = date('Y-m-d', strtotime($this->request->data['rpt_day_book']['to']));
//               
//                $html_design = "<style>td{padding:5px;} </style>"
//                        . "<h6 align=right style='color:black';>Print Date : " . date('d/M/Y h:i:s a') . "</h6>"
//                        . "<p><h3 align=left style='color:black';> " . $officename . ""
//                        . "<h3 align=center style='color:black';> " . $officename . "  </h3>"
//                        . "<h3 align=center style='color:#9C6F7A';> Day Book " . date('d-m-Y', strtotime($this->request->data['rpt_day_book_mh']['from'])) . " </h4>"
//                        . "<h6 align=right style='color:black';> " . $officename . "  </h6>"
//                        . "<p align=right style='color:black';> ______________________ </p>"
//                        . "<h6 align=right style='color:black';> " . $officename . "  </h6></p>"
//                        . "<hr style='color:black';>";
//                


                $html_design = ' <style>td{padding:5px;} </style> <table border=0 align=center >
		<h6 align=right style="color:black";>Print Date : ' . date('d/M/Y h:i:s a') . '</h6>
		<tr>
			<td>
				<h3 align=left style="color:black";> ' . $officename . ' </h3>
			</td>
			<td>
				<h3 align=center style="color:black";>  ' . $rptlabels[379] . ':-' . $officename . ' </h3><br>
                                <h3 align=center style="color:#9C6F7A";>  ' . $rptlabels[369] . ' ' . date('d-m-Y', strtotime($this->request->data['rpt_day_book_mh']['from'])) . ' </h3>
			</td>
                        <td>
				<h3 align=right style="color:black";> ' . $officename . '  </h3>
			</td>
		</tr>
                
	</table>';


                $html_design .= "<table border=1 style='border-collapse:collapse;' width=100%>";

                $html_design .= "<thead><tr>"
                        . "<th > " . $rptlabels[370] . "</th>"
                        . "<th > " . $rptlabels[371] . "</th>"
                        . "<th > " . $rptlabels[372] . "</th>"
                        . "<th class='vericaltext'> " . $rptlabels[373] . "</th>"
                        . "<th > " . $rptlabels[374] . "</th>"
                        . "<th > " . $rptlabels[375] . "</th>"
                        . "<th > " . $rptlabels[376] . "</th>"
                        . "<th>" . $rptlabels[378] . "</th>"
                        . "<th width='15%'>" . $rptlabels[377] . " </th>"
                        . "</tr>";

                $html_design .= "<tr>
					<th> (1) </th>
					<th> (2) </th>
					<th> (3) </th>
					<th> (4) </th>
					<th> (5) </th>
					<th> (6) </th>
					<th> (7) </th>
					<th> (8) </th>
					<th> (9) </th> 
				</tr></thead>";


                $result = $this->office->query("select DISTINCT app.doc_reg_no,fee.cons_amt,sum(trn_val.rounded_val_amt) as market_value,app.token_no,app.final_doc_reg_no,article.article_desc_en, 
                                        party.party_full_name_en,
                                        
                                       (select string_agg(concat(mapping_ref_val,':',pattern_desc_en,'-',field_value_en),',')
                                        from  ngdrstab_conf_behavioral_patterns as confp
                                        left JOIN ngdrstab_trn_behavioral_patterns trnp ON trnp.field_id=confp.field_id
                                        where  mapping_ref_id=2 and mapping_ref_val =party.party_id
                                         ) as partyaddress,
                                         
                                        article.book_number,info.exec_date,info.presentation_date
                                        from ngdrstab_trn_application_submitted as app
                                       left join ngdrstab_trn_party_entry_new as party on party.token_no = app.token_no
                                       left join ngdrstab_trn_generalinformation as info ON info.token_no=app.token_no
                                       left join ngdrstab_mst_article as article ON  article.article_id=info.article_id
                                       left join ngdrstab_trn_fee_calculation fee on fee.token_no=app.token_no
                                       left join ngdrstab_trn_property_details_entry as property ON property.token_no=app.token_no
                                       left join ngdrstab_trn_valuation  trn_val on trn_val.token_no=property.token_no
                                        where party.is_presenter = 'Y' and app.final_stamp_date >= '$from' 
                                        group by party.party_id,app.doc_reg_no,app.final_stamp_flag,party.address_en,fee.cons_amt, app.token_no,app.final_doc_reg_no,article.article_desc_en, party.party_full_name_en,article.book_number,info.exec_date,info.presentation_date");
//pr($result);exit;
                $Name = 'Name';
                $Add = 'Address';
                $rs = "&#8377;";
                foreach ($result as $result1) {

                    $html_design .= "<tbody><tr>";

                    list($y, $d, $m) = split('[/.-]', $result1[0]['doc_reg_no']); // for serial number of year(doc_reg_no)  

                    $html_design .= "<td style='text-align:center;'>" . $d . "-" . $m . "-" . $y . "</td>"
                            . "<td style='text-align:center;'>" . $result1[0]['article_desc_en'] . "<br>Consideration Amount $rs. " . ($result1[0]['cons_amt'] ? $result1[0]['cons_amt'] : 0) . " <br>Market Value $rs." . ($result1[0]['market_value'] ? $result1[0]['market_value'] : 0) . "</td>"
                            . "<td style='text-align:center;'>" . $Name . " : " . $result1[0]['party_full_name_en'] . "," . $Add . " : " . $result1[0]['partyaddress'] . "</td>"
                            . "<td></td>"
                            . "<td style='text-align:center;'>" . $result1[0]['book_number'] . "</td>"
                            . "<td style='text-align:center;'>" . $result1[0]['exec_date'] . "</td>"
                            . "<td style='text-align:center;'></td>"
                            . "<td style='text-align:center;'>" . $result1[0]['presentation_date'] . "</td>"
                            . "<td></td>"
                            . "</tr>";
                }

                $html_design .= "</table>";
//                pr($html_design);  exit;
                $this->create_pdf($html_design, 'rpt_day_book_mh', 'A3-L', ' ');
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function rpt_cash_book_mh() { ////maharashtra state format
        try {
            array_map([$this, 'loadModel'], ['office', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 27)));
            $officeid = $this->Auth->User("office_id");
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $officeid");
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);

            if ($this->request->is('post')) {

                $from = date('Y-m-d', strtotime($this->request->data['rpt_cash_book_mh']['from']));

                $html_design = "<style>td{padding:5px;} </style>"
                        . "<h6 align=right style='color:black';>Print Date : " . date('d/M/Y h:i:s a') . "</h6>"
                        . "<h3 align=left style='color:black';> " . $officename . "</h3>"
                        . "<h3 align=center style='color:black';> " . $officename . "  </h3>"
                        . "<h3 align=center style='color:black';> $rptlabels[382] </h3>"
                        . "<h3 align=center style='color:#9C6F7A';> Date:- " . date('d-m-Y', strtotime($this->request->data['rpt_cash_book_mh']['from'])) . " </h4>"
                        . "<hr style='color:black';>";

                $html_design .= "<table border=1 style='border-collapse:collapse;' width=100%>";

                $html_design .= "<thead><tr>"
                        . "<th >" . $rptlabels[383] . "</th>"
                        . "<th >" . $rptlabels[384] . "</th>"
                        . "<th >" . $rptlabels[385] . "</th>"
                        . "<th >" . $rptlabels[386] . "</th>"
                        . "<th >" . $rptlabels[387] . "</th>"
                        . "<th >" . $rptlabels[388] . "</th>"
                        . "<th >" . $rptlabels[389] . "</th>"
                        . "<th colspan='4'>" . $rptlabels[390] . " </th>"
                        . "<th >" . $rptlabels[391] . "</th>"
                        . "<th >" . $rptlabels[392] . " </th>"
                        . "<th >" . $rptlabels[393] . "</th>"
                        . "<th colspan='2'>" . $rptlabels[394] . "</th>"
                        . "<th >" . $rptlabels[395] . "</th>"
                        . "<th >" . $rptlabels[396] . "</th>"
                        . "</tr>";

                $html_design .= "<tr>
                                                <th> </th>
						<th> </th>
						<th> </th>
						<th> </th>
						<th> </th>
						<th> </th>
						<th> </th>
						<th > " . $rptlabels[397] . "</th>
						<th > " . $rptlabels[398] . " </th>
						<th > " . $rptlabels[399] . " </th>
						<th > " . $rptlabels[400] . " </th>
						<th> </th>
						<th> </th>
						<th> </th>
						<th > " . $rptlabels[401] . "</th>
						<th >" . $rptlabels[402] . " </th>
						<th> </th>
						<th> </th>

				</tr>";

                $html_design .= " <tr>
					<th> (1) </th>
					<th> (2) </th>
					<th> (3) </th>
					<th> (4) </th>
					<th> (5) </th>
					<th> (6) </th>
					<th> (7)=(2+3+4+5+6) </th>
					<th> (8) </th>
					<th> (9) </th> 
					<th> (10) </th> 
					<th> (11) </th> 
					<th> (12) </th> 
					<th> (13) </th> 
					<th> (14)=(12 + 13) </th> 
					<th> (14-A) </th> 
					<th> (14-B) </th> 
					<th> (15)=(7+14) </th> 
					<th> (16) </th> 
					
				</tr></thead>";


//               echo $html_design;exit;
                $result = $this->office->query("select rec.receipt_number, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='0030063301') as reg_fee, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='31') as search_fee, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='17') as doc_handling_charges, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='41') as panalty, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='3') as other_fees, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='104') as dt_entry,
                                                 (select SUM(pamount) from ngdrstab_trn_payment_details as pay 
						LEFT JOIN ngdrstab_mst_payment_mode paymode on paymode.payment_mode_id=pay.payment_mode_id
                                                where pay.token_no=app.token_no and pay.payment_mode_id='8') as cash,  
						(select SUM(pamount) from ngdrstab_trn_payment_details as pay 
						LEFT JOIN ngdrstab_mst_payment_mode paymode on paymode.payment_mode_id=pay.payment_mode_id
                                                where pay.token_no=app.token_no and pay.payment_mode_id='7') as eSBTR,  
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay 
						LEFT JOIN ngdrstab_mst_payment_mode paymode on paymode.payment_mode_id=pay.payment_mode_id
                                                where pay.token_no=app.token_no and pay.payment_mode_id='11') as echallon, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay 
						LEFT JOIN ngdrstab_mst_payment_mode paymode on paymode.payment_mode_id=pay.payment_mode_id
                                                where pay.token_no=app.token_no and pay.payment_mode_id='3') as ddcheque
                                                from ngdrstab_trn_application_submitted as app
                                                LEFT JOIN ngdrstab_trn_receipt_counter rec on rec.token_no=app.token_no and rec.receipt_number is not null
                                                LEFT JOIN ngdrstab_trn_payment_details pay on pay.token_no=app.token_no
                                                where app.final_stamp_flag='Y' and app.final_stamp_date >= '2018-01-01' and app.final_stamp_date <= '2019-04-21'
                                                group by rec.receipt_number,app.token_no");
                //pr($result);exit;
                $Name = 'Name';
                $Add = 'Address';
                $rs = "&#8377;";
                $total_reg = 0;
                $total_fees = 0;
                $t = 0;
                $dt_fees = 0;
                $doc = 0;
                $docdt = 0;
                $docdt_tl = $r = $esbtr = $cashtotal = $echllesbtr = $ddtotal = $fee4 = $fee14a = $fee14b = $fee116 = $fee116ttl = 0;
                foreach ($result as $result1) {



                    $html_design .= "<tbody><tr>";
                    $total_reg += $result1[0]['reg_fee'];

                    $total_fees = $result1[0]['reg_fee'] + $result1[0]['search_fee'];
                    $t += $total_fees;

                    $docdt = $result1[0]['doc_handling_charges'] + $result1[0]['dt_entry'];
                    $docdt_tl += $docdt;

                    $doc += $result1[0]['doc_handling_charges'];
                    $dt_fees += $result1[0]['dt_entry'];

                    $sevfour = $total_fees + $docdt;
                    $r += $sevfour;

                    $esbtr = $result1[0]['echallon'] + $result1[0]['esbtr'];
                    $ddtotal += $result1[0]['ddcheque'];
                    $cashtotal += $result1[0]['cash'];

                    $echllesbtr += $esbtr;
                    $fee116 = $result1[0]['cash'] + $fee14b;

                    $fee116ttl += $fee116;


                    $html_design .= "<td style='text-align:right;'>" . $result1[0]['receipt_number'] . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['reg_fee'] ? $result1[0]['reg_fee'] : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['panalty'] ? $result1[0]['panalty'] : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($fee4 ? $fee4 : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['search_fee'] ? $result1[0]['search_fee'] : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['other_fees'] ? $result1[0]['other_fees'] : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($total_fees ? $total_fees : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['ddcheque'] ? $result1[0]['ddcheque'] : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($total_fees ? $total_fees : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['cash'] ? $result1[0]['cash'] : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($esbtr ? $esbtr : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['doc_handling_charges'] ? $result1[0]['doc_handling_charges'] : 0) . " </td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['dt_entry'] ? $result1[0]['dt_entry'] : 0) . " </td>"
                            . "<td style='text-align:right;'>" . ($docdt ? $docdt : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($fee14a ? $fee14a : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($fee14b ? $fee14b : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($sevfour ? $sevfour : 0) . " </td>"
                            . "<td style='text-align:right;'>" . ($fee116 ? $fee116 : 0) . "</td>"
                            . "</tr>";
                }

                $html_design .= "<tr>
					<td><b> Total </b></td>
					<td style='text-align:right;'><b> " . $total_reg . " </b></td>
					<td>  </td>
					<td>  </td>
					<td>  </td>
					<td>  </td>
					<td style='text-align:right;'><b> " . $t . " </b></td>
					<td style='text-align:right;'><b> " . $ddtotal . " </b>  </td>
					<td style='text-align:right;'><b> " . $t . " </b> </td> 
					<td style='text-align:right;'><b> " . $cashtotal . " </b>  </td> 
					<td style='text-align:right;'><b> " . $echllesbtr . " </b>  </td> 
					<td style='text-align:right;'><b> " . $doc . " </b></td>
					<td style='text-align:right;'><b> " . $dt_fees . " </b> </td> 
					<td style='text-align:right;'><b> " . $docdt_tl . " </b> </td>
					<td>  </td> 
					<td>  </td> 
					<td style='text-align:right;'><b> " . $r . " </b> </td> 
					<td style='text-align:right;'><b> " . $fee116ttl . " </b>    </td> 
				</tr>";

                $html_design .= "</table>";

//                pr($html_design);
//                exit;
                $this->create_pdf($html_design, 'rpt_cash_book_mh', 'A3-L', ' ');
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

    public function rpt_franking_mh() { ////maharashtra state
        try {
            array_map([$this, 'loadModel'], ['office', 'ReportLabel']);
            $lang = ($this->Session->read("sess_langauge")) ? $this->Session->read("sess_langauge") : 'en';
            $rptlabels = $this->ReportLabel->find('list', array('fields' => array('label_id', 'label_desc_' . $lang), 'conditions' => array('report_id' => 25)));
            $officeid = $this->Auth->User("office_id");
            $officename = $this->office->query("select office_name_$lang from ngdrstab_mst_office where office_id = $officeid");
            $officename = $officename[0][0]['office_name_' . $lang];
            $this->set('officename', $officename);

            if ($this->request->is('post')) {

                $from = date('Y-m-d', strtotime($this->request->data['rpt_franking_mh']['from']));

                $html_design = "<style>td{padding:5px;} </style>"
                        . "<h6 align=right style='color:black';>Print Date : " . date('d/M/Y h:i:s a') . "</h6>"
                        . "<h3 align=left style='color:black';>  " . $officename . " </h3>"
                        . "<h3 align=center style='color:black';>  " . $officename . "</h3>"
                        . "<h3 align=center style='color:black';> " . date('d-m-Y', strtotime($this->request->data['rpt_franking_mh']['from'])) . "-" . $rptlabels[368] . " </h3>"
                        . "<h3 align=center style='color:black';>  (Stamduty Collection) </h3>"
                        . "<hr style='color:black';>";

                $html_design .= "<table border=1 style='border-collapse:collapse;' width=100%>";

                $html_design .= "<thead><tr>"
                        . "<th >" . $rptlabels[350] . "</th>"
                        . "<th >" . $rptlabels[351] . "</th>"
                        . "<th colspan='8'> " . $rptlabels[364] . " </th>"
                        . "<th colspan='2'>  " . $rptlabels[365] . "</th>"
                        . "<th colspan='2'>  " . $rptlabels[366] . " </th>"
                        . "</tr>";

                $html_design .= "<tr>
						<td> </td>
                                                <td> </td>
						<td cellpadding='10'>  " . $rptlabels[352] . " </td>
						<th>   " . $rptlabels[353] . " </th>
						<th>  " . $rptlabels[354] . "</th>
						<th> " . $rptlabels[355] . "</th>
						<th> " . $rptlabels[356] . "</th>
						<th> " . $rptlabels[357] . "  </th>
						<th >  " . $rptlabels[358] . "</th>
						<th > " . $rptlabels[359] . "</th>
						<th >  " . $rptlabels[360] . " </th>
						<th >  " . $rptlabels[361] . "</th>
						<th>  " . $rptlabels[362] . " </th>
						<th> " . $rptlabels[367] . "</th>

				</tr>";

                $html_design .= "</thead>";


//               echo $html_design;exit;
                $result = $this->office->query("select  app.doc_reg_no,
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='0030046401') as stamp_duty, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='0030063301') as reg_fees, 
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay where pay.token_no=app.token_no and pay.account_head_code='17') as doc_handling_fees, 
                                                 (select SUM(pamount) from ngdrstab_trn_payment_details as pay 
						LEFT JOIN ngdrstab_mst_payment_mode paymode on paymode.payment_mode_id=pay.payment_mode_id
                                                where pay.token_no=app.token_no and pay.payment_mode_id='11') as echallon,
															
                                                (select SUM(pamount) from ngdrstab_trn_payment_details as pay 
						LEFT JOIN ngdrstab_mst_payment_mode paymode on paymode.payment_mode_id=pay.payment_mode_id
                                                where pay.token_no=app.token_no and pay.payment_mode_id='6') as estamp,
												
						(select SUM(pamount) from ngdrstab_trn_payment_details as pay 
						LEFT JOIN ngdrstab_mst_payment_mode paymode on paymode.payment_mode_id=pay.payment_mode_id
                                                where pay.token_no=app.token_no and pay.payment_mode_id='7') as esbtr
                                                
                                                from ngdrstab_trn_application_submitted as app
                                                LEFT JOIN ngdrstab_trn_receipt_counter rec on rec.token_no=app.token_no and rec.receipt_number is not null
                                                LEFT JOIN ngdrstab_trn_payment_details pay on pay.token_no=app.token_no
                                                where app.final_stamp_flag='Y' and app.final_stamp_date >= '2018-01-01' and app.final_stamp_date <= '2019-04-21'
                                                group by app.doc_reg_no,rec.receipt_number,app.token_no");
                //pr($result);exit;
                $Name = 'Name';
                $Add = 'Address';
                $rs = "&#8377;";
                $total_stamp = 0;
                $total_fees = 0;
                $t = 0;
                $dt_fees = 0;
                $doc = 0;
                $docdt = 0;
                $docdt_tl = $r = $revenue = $tt = $reg_fee = $ech = $esbtr_t = 0;
                foreach ($result as $result1) {

                    $html_design .= "<tbody><tr>";
                    $total_stamp += $result1[0]['stamp_duty'];

                    $total_last = $result1[0]['reg_fees'] + $revenue;
                    $tt += $total_last;

                    $esbtr_t = $result1[0]['esbtr'];
                    $ech += $result1[0]['echallon'];

                    $doc += $result1[0]['doc_handling_fees'];
                    $reg_fee += $result1[0]['reg_fees'];

                    list($y, $d, $m) = split('[/.-]', $result1[0]['doc_reg_no']);

                    $html_design .= "<td style='text-align:right;'>" . $result1[0]['doc_reg_no'] . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['stamp_duty'] ? $result1[0]['stamp_duty'] : 0) . "</td>"
                            . "<td style='text-align:right;'></td>"
                            . "<td style='text-align:right;'></td>"
                            . "<td style='text-align:right;'></td>"
                            . "<td style='text-align:right;'></td>"
                            . "<td style='text-align:right;'></td>"
                            . "<td style='text-align:right;'></td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['echallon'] ? $result1[0]['echallon'] : 0) . " </td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['esbtr'] ? $result1[0]['esbtr'] : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['reg_fees'] ? $result1[0]['reg_fees'] : 0) . "</td>"
                            . "<td style='text-align:right;'>" . ($result1[0]['doc_handling_fees'] ? $result1[0]['doc_handling_fees'] : 0) . "</td>"
                            . "<td style='text-align:right;'> " . ($revenue ? $revenue : 0) . " </td>"
                            . "<td style='text-align:right;'>" . ($total_last ? $total_last : 0) . "</td>"
                            . "</tr>";
                }

                $html_design .= "<tr>
					<td><b> Total </b></td>
					<td style='text-align:right;'><b> " . $total_stamp . " </b></td>
					<td>  </td>
					<td>  </td>
					<td>  </td>
					<td>  </td>
					<td style='text-align:right;'><b></b></td>
					<td>  </td>
					<td style='text-align:right;'><b>" . ($ech ? $ech : 0) . " </b></td>
					<td style='text-align:right;'><b>" . ($esbtr_t ? $esbtr_t : 0) . " </b></td>
					<td style='text-align:right;'><b> " . ($reg_fee ? $reg_fee : 0) . " </b></td>
					<td style='text-align:right;'><b> " . ($doc ? $doc : 0) . " </b></td>
					<td style='text-align:right;'><b>" . ($revenue ? $revenue : 0) . "  </b> </td> 
					<td style='text-align:right;'><b>" . ($tt ? $tt : 0) . "</b></td>
				</tr>";

                $html_design .= "</table>";

//                pr($html_design);
//                exit;
                $this->create_pdf($html_design, 'rpt_franking_mh', 'A3-L', ' ');
            }
        } catch (Exception $ex) {
            pr($ex);
            exit;
        }
    }

}
